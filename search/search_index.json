{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rocky Linux Wiki","text":""},{"location":"#about","title":"About","text":"<p>Rocky Linux is a community enterprise Operating System designed to be 100% bug-for-bug compatible with Enterprise Linux.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<p>Below is a list of links to common resources for Rocky Linux. For more, see the \"links\" section found on the top of this page.</p> <ul> <li>Website</li> <li>Public Repository</li> <li>Forums</li> <li>Reddit</li> <li>Documentation</li> <li>Rocky Linux Account Services</li> <li>Mail List</li> <li>Reporting Bugs</li> <li>Bug Tracker</li> <li>Rocky Linux Git Service</li> <li>RESF Git Service</li> <li>Docker Hub</li> <li>Quay.io</li> <li>Koji (Build Service)</li> <li>Peridot (Build Service)</li> <li>Mattermost</li> </ul>"},{"location":"#contact","title":"Contact","text":"Team Contact Channel Community community@rockylinux.org Design design@rockylinux.org Development &amp; Release Engineering development@rockylinux.org &amp; releng@rockylinux.org ~development Documentation ~documentation Infrastructure infrastructure@rockylinux.org ~infrastructure Security security@rockylinux.org ~Security Web web@rockylinux.org <p>For all other questions: hello@rockylinux.org</p> <p>Alternatively, you can use our mail lists</p>"},{"location":"#contributing","title":"Contributing","text":"<p>See our Contributing section for information on how to contribute to the project.</p> <p>NOTE: We do not currently have any official crowdsourcing established.</p>"},{"location":"#special-thanks","title":"Special Thanks","text":"<p>We would like to thank the following groups for their support thus far on the project. Our sponsors can be found here.</p>"},{"location":"irc/","title":"General Chat and IRC","text":"<p>This page goes over General Chat and IRC/Matrix general information and etiquette.</p> <p>IRC and Matrix are common communication tools used in the open source community. Several channels of Mattermost, Libera IRC channels, and a matrix space are bridged together to ensure the community can communicate effectively and not be splintered. The Rocky Linux teams manage and maintain the mattermost channels and the various Libera IRC channels such as <code>#rockylinux</code> and <code>#rockylinux-social</code>. A list of our channels can be found in <code>Bridge Information</code> on the left hand side of this wiki page.</p> <p>More information about Libera can be found here.</p>"},{"location":"irc/#contact-information","title":"Contact Information","text":"IRC/Mattermost Contacts <code>bc/qi</code> <code>@brian</code> IRC/Mattermost Contacts <code>Sokel/label/Sombra</code> <code>@label</code> <code>@nazunalika</code> IRC/Mattermost Contacts <code>mustafa</code> <code>@mustafa</code> IRC/Mattermost Contacts <code>neil</code> <code>@neil</code> IRC/Mattermost Contacts <code>tg</code> <code>@tgo</code> IRC/Mattermost Contacts <code>pgreco</code> <code>@pgreco</code> IRC/Mattermost Contacts <code>pj</code> <code>@pj</code> IRC/Mattermost Contacts <code>SheriF</code> <code>@sherif</code>"},{"location":"irc/#bridge-information","title":"Bridge Information","text":"<p>Current mappings below:</p> IRC Mattermost Matrix #rockylinux ~general Rocky Linux General / Support #rockylinux-devel ~development Rocky Linux Development #rockylinux-docs ~documentation #rockylinux-infra ~infrastructure Rocky Linux Infrastructure #rockylinux-legal ~legal Rocky Linux Legal #rockylinux-security ~security #rockylinux-sig-altarch ~altarch Rocky Linux SIG AltArch #rockylinux-sig-kernel ~sig-kernel Rocky Linux SIG Kernel #rockylinux-social ~off-topic Rocky Linux Social #rockylinux-testing ~testing Rocky Linux Testing #rockylinux-www ~web <p>The Rocky Linux matrix space can be joined here, which will provide easier access to the Rocky Linux matrix channels.</p>"},{"location":"irc/#general","title":"General","text":"<p>It is likely that there will be a lot of boxes running Rocky Linux and thus there will be many folks who will occasionally look for help in the main Rocky IRC channel <code>#rockylinux</code> or <code>~General</code> on mattermost, typically on what the distribution ships. It is important to maintain focus on a Rocky Linux specific matter as the channel does not have the ability nor bandwidth to support non-Rocky Linux topics.</p> <p>Here is a general rule of thumb:</p> <ul> <li>Unless a question or thread is about an application or program supplied by Rocky, it is likely off topic (see the exceptions section)</li> <li>Discussing the usage of non-Rocky packages or problems (which the Rocky project has no control over) are off-topic (see exceptions)</li> <li>Polling for general usage/preferences or other opinion matter is considered off-topic</li> <li>Requesting support or discussing the usage of other distributions is considered off-topic (more info here)</li> </ul>"},{"location":"irc/#exceptions","title":"Exceptions","text":"<p>There are cases where it may do more harm than good to deny or to not provide assistance to a user who is using something that others may consider unsupported as a whole. While this is on a case by case basis and we are unable to list all exceptions, these are some of the more obvious exceptions:</p> <ul> <li> <p>If the question is related to software in EPEL</p> <ul> <li>If a problem is reproducible or its an issue out of our control, it is recommended to go <code>#epel</code></li> </ul> </li> <li> <p>If the question is related to drivers from elrepo</p> <ul> <li>It is common for users to be using hardware that is either not supported in a current Rocky release or needs a better driver (e.g., nouveau -&gt; nvidia). Providing general assistance for getting such drivers should be considered semi-topical. Most users will support one another in this scenario. elrepo volunteers will be in the channel as well assist users. Other issues should go to <code>#elrepo</code> or where topical, such as their Bug Tracker.</li> </ul> </li> </ul>"},{"location":"irc/#what-is-not-supported","title":"What is not supported?","text":"<ul> <li>Kernel Rebuilds</li> <li> <p>Other Derivatives/Forks</p> <ul> <li>This includes, but is not limited to RHEL, OEL, Alma, Springdale, SL</li> </ul> </li> <li> <p>Broken \"V\" Servers</p> </li> <li>Old minor/point releases of Rocky Linux</li> <li>Upgrades or upgraded Rocky Linux systems (eg, upgrading 8 to 9)</li> <li>Politics or Profanity</li> <li>Distro X is better/worse than Rocky</li> <li> <p>Personal drama from other channels, namespaces, or other users</p> <ul> <li>Repeat offenders will be quieted or banned from the <code>#rockylinux*</code> namespace</li> </ul> </li> </ul>"},{"location":"irc/#etiquette","title":"Etiquette","text":"<p>This section goes over general etiquette expected of all users of Mattermost or IRC/Matrix on the bridge.</p>"},{"location":"irc/#how-to-ask-questions","title":"How to ask questions","text":"<p>When coming into the IRC or Mattermost channels, it's important to be able to field your question in a manner in which the other users will be able to understand the question and provide assistance. Here's some general ideas:</p> <ul> <li>Don't ask to ask - Just ask your question</li> <li> <p>Don't paste large quantities of text into the channel</p> <ul> <li>This can be disruptive to users on both sides of the IRC/MM bridge</li> <li>If at all possible, use a paste bin such as rpaste</li> </ul> </li> <li> <p>Limit edits - Refrain from unnecessary edits in Mattermost.</p> <ul> <li>Edits are not propogated to IRC at this time.</li> <li>Consider sending a new separate message instead with only the added content, as to allow users on our bridges to help more easily if possible.</li> </ul> </li> <li> <p>Be patient - You may not get an instant answer. We are all volunteers, so it may take minutes or hours to receive an answer to your question.</p> </li> <li>Read the Topic - The topic may contain useful information you may want to know about.</li> </ul>"},{"location":"irc/#expectations","title":"Expectations","text":"<p>As <code>#rockylinux</code> is the general Rocky Linux support and discussion channel on Libera, it is not a primary support area for learning Linux or general chatting and off topic matter. Off topic matter should go to <code>#rockylinux-social</code> or <code>~off-topic</code>. With that being said, below is a list of things you should probably be aware of:</p> <ul> <li>The channels are filled with supporters of Rocky, end users, volunteers with wide ranges of skillsets and knowledge who use the distribution on a professional or personal level</li> <li> <p>Polite and on-topic people get answers to their queries</p> <ul> <li>Insulting, rude, or off topic users are generally ignored or warned for their behavior</li> <li>Consider the human, be civil - Treat people how you would want to be treated</li> <li>Those who are consistently disruptive (or \"trolls\") will be removed from the channel by a quiet or ban</li> </ul> </li> <li> <p>The channel can be busy with several threads running in parallel</p> </li> <li>We support what we ship</li> <li> <p>Do not be surprised if you are asked to provide some information about your system</p> <ul> <li><code>rpaste -s</code></li> <li><code>uname -a</code></li> <li><code>rpm -V packageName</code></li> <li>If you refuse to provide such information, volunteers may stop trying to assist you.</li> </ul> </li> </ul> <p>It is normal for a channel to not be all business all the time. Passing snarkiness or even random off topic matter can occur. However, it can be a problem if it takes over the channel, where a user is unable to get their question in or the discussion turns into animosity, insults, or rude behavior (see the above points).</p> <p>A recommendation would be to join the channel and observe for a while to get an idea of how the channel operates; try to avoid dropping in, asking a question, and disappearing.</p> <p>Note: The channels are logged and routinely checked. What is seen in IRC is also seen in Mattermost and vice versa. It is also likely we are not the only ones who monitor the channel. This means that your conversations are considered public.</p> <p>Persistent abusers and those who act out in bad faith in a consistent manner will receive a ban or quiet, if they have been repeatedly warned. If you find you have been banned and do not know why, you may want to ask in <code>#rockylinux-ops</code> and an available channel operator will try to assist you.</p>"},{"location":"irc/#irc-for-beginners","title":"IRC For Beginners","text":"<p>It is possible that you may have not used IRC before. Hopefully this guide will get you started.</p> <p>You will need an IRC client. There are many out there. Here are examples:</p> <ul> <li>ChatZilla (firefox add on)</li> <li>Pidgin</li> <li>Kiwi (web client)</li> <li>weechat (text client)</li> <li>irssi (text client)</li> </ul> <p>Once you have your IRC client setup/configured, you'll need to go to irc://irc.libera.chat/. To set your nickname, type <code>/nick nickname</code> in the box and press enter.</p> <p>Note that our channels require users to be registered on Libera in order to participate. Libera chat provides instructions for you to do so here. If you require assistance, you can type <code>/join #libera</code> and request help.</p> <p>Once you have registered and you are identified with <code>NickServ</code>, you can type <code>/join #rockylinux</code> or another related channel.</p> <p>Note that subsequent logins will require you to identify. <code>/msg nickserv identify password</code> will help you to ensure you don't get locked out of the <code>#rockylinux*</code> channels.</p>"},{"location":"irc/#matrix","title":"Matrix","text":"<p>If you are a user of Matrix, most of the above still applies to you. You may need to login through the bridge on matrix to login with NickServ on Libera. After that, you will be able to communicate in the <code>#rockylinux*</code> channels through your matrix client.</p> <p>The Rocky Linux matrix space can be joined here.</p>"},{"location":"irc/#irc-cloaks-for-liberachat-network","title":"IRC Cloaks for libera.chat network","text":"<p>Cloaks allow you to show your association with the Rocky Linux project and protect your hostname from being seen from others. Cloaks can be received from a project or just by the network upon request.</p> <p>If you would like to receive a cloak, contact Neil or Louis on IRC or Mattermost.</p>"},{"location":"irc/#context","title":"Context","text":"<p>This section provides context to some things mentioned throughout this document that would've likely crowded the section entirely. These sections may end up on different pages entirely but they are here for now.</p>"},{"location":"irc/#kernel-rebuilds","title":"Kernel Rebuilds","text":"<p>Kernel rebuilds are not recommended nor supported for Rocky Linux. Before building a custom kernel or even considering it, ask yourself the following questions:</p> <ul> <li>Is the functionality you need available by installing a kernel module from elrepo?</li> <li>Is the functionality you need available as a separate module from the kernel itself?</li> <li>Are you willing to maintain your own security posture?</li> <li>Are you sure? Rocky Linux and most other EL derivatives were designed to function as a complete environment. Replacing critical components can affect how the system acts.</li> <li>Are you ABSOLUTELY sure? 99.9% of the users no longer need to build their own kernel. You may simple need a kernel module/driver, in which case, you can use elrepo or build your own kernel module (kmod/dkms)</li> <li>Are you sure you don't just want a newer kernel version? Newer kernels can be found at elrepo</li> </ul> <p>As a final warning, if you break the kernel, you are on the hook for your system. Rocky Linux volunteers or developers are unable to assist you with these issues.</p>"},{"location":"irc/#upgraded-systems","title":"Upgraded Systems","text":"<p>System Upgrades are generally unsupported. There are quite a few methods out there of users performing upgrades:</p> <ul> <li> <p>Updating the system release packages (e.g., centos-release to rocky-release, or updating rocky-release to another) and running a <code>yum distro-sync</code> or <code>yum update</code></p> </li> <li> <p>Example 1: replacing centos-* packages with rocky-* packages and running <code>yum update</code> or <code>yum distro-sync</code></p> </li> <li> <p>Example 2: updating rocky-* packages from 8 to 9, and then running <code>dnf update</code> or <code>dnf distro-sync</code></p> </li> <li> <p>Using scripts or tools that a user may not review that promise smooth upgrades from X to Y</p> </li> <li>Following guides that promise smooth upgrades from X to Y</li> </ul> <p>Regardless of the method, a system that has been \"upgraded\" is generally considered unsupported, and you will be recommended to build a new system and restore from backups. Users may try to help or assist with your system, but it may be difficult to do so.</p> <p>Note: While the tool ELevate exists to help users transition from one major release of an Enterprise Linux to another, we have not formally tested it and we cannot officially provide assistance or feedback to the tool or an upgraded system. There may be users in the channel who have done so and can assist, but at this time it's still an unsupported system setup.</p>"},{"location":"irc/#outdated-or-end-of-life-releases","title":"Outdated or End of Life Releases","text":"<p>Outdated or End of Life releases are not generally supported.When you do not update, you are leaving your system in a vulnerable state, prone to bugs and effectively lower security posture. Do not be surprised if community members, volunteers, and channel regulars ask you to run:</p> <ul> <li><code>cat /etc/os-release</code></li> <li><code>cat /etc/rocky-release</code></li> <li><code>dnf repolist</code></li> <li><code>dnf update</code></li> </ul> <p>Only the latest available <code>X.Y</code> of a given version is supported at a given time. Check out the Rocky Linux section for more information.</p>"},{"location":"irc/#broken-v-servers","title":"Broken V Servers","text":"<p>Our distribution, like others, use a variant of <code>yum</code>/<code>dnf</code>. All Rocky Linux releases are shipped with <code>dnf</code> and a certain set of matching configuration files (like <code>.repo</code> files). This allows your system to work with the mirror system provided by Rocky. Some downstream forks break these configurations and make their system incompatible with what we provide off the shelf.</p> <p>Regulars (developers/volunteers) will decline to help in this type of scenario. Below are examples of \"broken V servers\" where <code>dnf</code> is either missing, misconfigured, or outright crippled.</p>"},{"location":"irc/#vps","title":"VPS","text":"<p>So you have a VPS and you've discovered <code>dnf</code> is not working as it should. This means you are not using Rocky Linux. If you are using an installation \"based on\" Rocky Linux but <code>dnf</code> is missing, you don't have a real Rocky Linux installation. Common examples of providers who do this:</p> <ul> <li>OpenVZ</li> <li>cPanel</li> <li>Plesk</li> <li>webmin</li> <li>Direct Admin</li> <li>BlueQuartz</li> <li>Asterisk</li> <li>Trixbox</li> <li>Elastix</li> </ul> <p>The above tend to only install parts of Rocky Linux on their virtual servers and some are known for entirely removing <code>dnf</code> from the system entirely or altering the settings entirely. Typical changes are that they exclude locally modified packages from our base repositories. You can verify this by running <code>grep -ir exclude /etc/{yum,dnf}*</code> which will show what they are excluding. Some will also manage the box outside of the package manager.</p> <p>Why these providers do this is unclear. Regardless of their reasons, this approach is seen negatively as <code>dnf</code> has mechanisms to protect specific packages from change.</p> <p>Before you try anything, please STOP and ask your provider why they removed <code>dnf</code> and how are you supposed to keep your system up to date/secure without it.</p>"},{"location":"irc/#wait-youre-saying-i-was-lied-to","title":"Wait, you're saying I was lied to?","text":"<p>In essence, yes. A true Rocky Linux installation has a Rocky kernel and the <code>rocky-release</code> packages, as well as <code>dnf</code>, without modifications to the contents in <code>/etc/yum.repos.d</code> (other than possibly a local mirror or staged repositories). All dependencies will be satisified and with the exception of configuration files, they will be kept up to date and maintained.</p> <p>A true Rocky Linux system can:</p> <ul> <li>Be updated at any time</li> <li>Provide a list of usual groups that is reproducible across systems</li> <li>Has SELinux enforcing by default</li> <li>Has a working firewall by default</li> </ul> <p>You will be asked to run some commands by volunteers. Such as:</p> <ul> <li><code>dnf install rpaste -y ; rpaste --sysinfo</code></li> <li><code>cat /etc/os-release ; uname -a ; rpm -V dnf rocky-release rocky-repos ; ls /etc/yum.repos.d/ ; dnf repolist all</code></li> </ul> <p>The former produces a sysinfo output (the package is installed from extras). The second produces multi-line output that you can provide at https://rpa.st. Alternatively, you will be asked just to run <code>uname -a</code> which is typically sufficient enough.</p> <p>When it's clear it's not a Rocky Linux system, the regulars of the channel will not continue to offer further assistance. They do not wish to suggest a course of action that can potentially break your system further. Most regulars cannot and don't know all the ways hosting providers may have altered the functions which a Rocky Linux system provides by default.</p> <p>If you were lied to, we ask that you request your provider to mend their ways. You could ask your provider:</p> <ul> <li>Stop misrepresenting what they offer as Rocky Linux</li> <li>Deliver to you what they promised or receive a refund</li> </ul>"},{"location":"irc/#is-it-possible-to-get-dnf-back","title":"Is it possible to get dnf back?","text":"<p>Yes it is possible. However, it may come at a cost of breaking your system. Thus, we cannot provide such advice here.</p>"},{"location":"links/","title":"Link Directory","text":"<ul> <li>Website</li> <li>System Status</li> <li>Forums</li> <li>Wiki</li> <li>Documentation</li> <li>Rocky Linux Account Services</li> <li>Mail List</li> </ul>"},{"location":"links/#cloud-offerings","title":"Cloud Offerings","text":"<ul> <li>Amazon Web Services</li> <li>Google Cloud Platform</li> </ul>"},{"location":"links/#development","title":"Development","text":"<ul> <li>GitHub<ul> <li>Container Roots</li> <li>Image Kickstarts</li> </ul> </li> <li>RESF Git Service</li> <li>GitLab Server<ul> <li>RPM Sources</li> <li>Rocky Package Sources</li> <li>Module Sources</li> <li>Rocky Customizations</li> <li>Repo Comps</li> </ul> </li> <li>Bug Tracker</li> <li>Docker Hub</li> <li>Quay.io</li> <li>Vagrant</li> </ul>"},{"location":"links/#rocky-linux-8","title":"Rocky Linux 8","text":"<ul> <li>Distrobuild<ul> <li>Builds List</li> <li>Koji</li> </ul> </li> </ul>"},{"location":"links/#rocky-linux-9","title":"Rocky Linux 9","text":"<ul> <li>Peridot</li> <li>Peridot Development Instance</li> </ul>"},{"location":"links/#social","title":"Social","text":"<ul> <li>Mattermost</li> <li>IRC (libera.chat): IRC&lt;--&gt;Mattermost mappings</li> <li>Twitter</li> <li>LinkedIn<ul> <li>Company Page</li> <li>User Group</li> </ul> </li> <li>Reddit</li> <li>Twitch</li> <li>YouTube<ul> <li>on other channels</li> </ul> </li> <li>Other</li> <li>DistroWatch</li> </ul>"},{"location":"archive/","title":"Archives","text":"<p>This section of the wiki is meant as an archive area of the original Rocky Linux wiki. This contains various documents considered \"legacy\" and meant for instructional and historical purposes only. This area will likely not be updated any further.</p> <p>If you find there are documents that should be here from the old wiki, please consider opening an issue here.</p>"},{"location":"archive/legacy/","title":"Legacy","text":"<p>This section contains all documents considered as \"legacy\", as archived from the original wiki, regardless of the team involved. Use the navigation menu to your left to view the various pages in this section.</p> <p>Please note that this section is likely not to be updated. Retired documents per team/wiki section will have its own retired/legacy section.</p>"},{"location":"archive/legacy/8_4_package_errors/","title":"Rocky Release 8.4 Package Errors","text":"<p>This page tracks package fixes/progress for the upcoming 8.4 release.  Packages are tracked in a table with package name, Koji build link, assignee, and notes.</p> <p>Packages that are fixed will be marked with a ~~strikethrough~~ to indicate they're done.</p> <p>Packages are considered fixed only after they have a successful build in Koji.</p> <p> </p> Package Koji Link Assignee Notes ~~spirv-tools-2020.5-3.20201208~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8403~~ ~~N/A~~ ~~Neil: Last time we had to tag to an older release of spirv-headers - we likely need to update this.~~ ~~python-cryptography~~ https://kojidev.rockylinux.org/koji/buildinfo?buildID=8353 Skip Grube Relies on new python-cryptography-vectors c8s branch; Neil: Removed unnecessary patch from 8.3 dotnet3/dotnet5 https://kojidev.rockylinux.org/koji/buildinfo?buildID=8326 Michael Young Import/patch issue?  Also might be memory issues with building large SRPM on i686 ; 2021-05-27 - see comment below ~~rhel-system-roles~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8376~~ ~~N/A~~ ~~No matching package to install: 'python3dist(ruamel.yaml)'~~ ~~pandoc~~ https://kojidev.rockylinux.org/koji/buildinfo?buildID=8340 Neil Hanlon / ashman / others ~~Need to bootstrap + build \"hscolour and it should be fixed  - Had to enable bootstrapping on ghc-rpm-macros (built as %{RELEASE}.1) and then build hscolour as well with a bootstrapping patch to not have a circular dependency on ghc-rpm-macros to hscolour.~~ ~~texlive~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8464~~ ~~Jordan Pisaniello~~ ~~Compiler error : ../../../texk/web2c/pdftexdir/pdftosrc.cc:91:25: error: 'unique_ptr' is not a member of 'std' (and others)~~ ~~xdp-tools~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80568~~ N/A ~~Compiler error libbpf support: FORCE_SYSTEM_LIBBPF is set, but no usable libbpf found~~ ~~libreoffice~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8315~~ ~~Skip Grube~~ Needs mdds-1.5 (c8s branch), then new liborcus, then can compile this ~~gupnp~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8213~~ ~~Skip Grube~~ ~~gupnp: need 'gssdp-devel &gt;= 1.0.5' first (new hidden dependency?)~~ ~~libdazzle~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8265~~ N/A ~~libdazzle: aarch64 error:  failed test \"test-recursive-monitor\" - see build.log for more info~~ ~~libuv~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8297~~ ~~N/A~~ ~~Several failed tests, but ONLY on i686~~ ~~libwacom~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8306~~ ~~Skip Grube~~ ~~libwacom:  need to update meson:  meson.build:1:0: ERROR:  Meson version is 0.49.2 but project requires &gt;= 0.50.0.~~ ~~libbpf~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8263~~ ~~N/A~~ ~~/usr/bin/strip:/builddir/build/BUILDROOT/libbpf-0.2.0-1.el8.x86_64/usr/lib64/st9U4xP0/libbpf-in.o[.gnu.build.attributes]: error: failed to copy merged notes into output: Bad value (???)~~ ~~bcc~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80556~~ N/A ~~Needs new kernel release~~ ~~gssdp~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8209~~ N/A ~~failing test \"test-functional\" ONLY on i686~~ ~~gnome-settings-daemon~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8204~~ ~~Skip Grube~ ~~Spec file is incorrectly configured or macro is being defined~~ ~~ghostscript~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8195~~ N/A ~~Compiler errors: from ./base/sjbig2.c:26:/usr/include/jbig2.h:93:11: note: expected 'Jbig2ErrorCallback' {aka 'int ()(void , const char , enum ,  int)'} but argument is of type 'void ()(void , const char , Jbig2Severity,  int32_t)' {aka 'void ()(void , const char *, enum ,  int)'} (and others)~~ ~~dnf~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8147~~ ~~Skip Grube~~ ~~No matching package to install: 'python3-hawkey &gt;= 0.55.0-5' (new hidden dep?)~~ ~~dlm~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8137~~ ~~N/A~~ ~~compiler errors: member.c:113:86: error: parameter 2 ('ring_id') has incomplete type~~ ~~corosync~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8122~~ ~~Skip Grube~~ ~~No matching package to install: 'libknet1-devel &gt;= 1.18' (hidden dep?  or something not compiled yet?)~~ ~~bpftrace~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80558~~ N/A ~~Compiler error - likely fixed by new libbpf(?)~~"},{"location":"archive/legacy/8_4_package_errors/#annotations","title":"Annotations","text":"<p>#### dotnet3.1   From Michael Young on 2021-05-27</p> <p>Hey @Skip Grube I have been quiet all week because dotnet is kicking my butt. I thought it would be as simple as redoing the patch. I have been working with dotnet3.1. It doesn't seem to like the minor version that is now in os-release for rocky 8.4. When I redid the patch and built with just the major version, it builds... But with the major and minor, it fails.</p> <p>Wanted to put a note here since I am going to be away from a computer until Monday and don't want to leave everyone hanging... Not sure if there is a date in mind besides as soon as possible. If anyone wants to take a stab at it, be my guest. Otherwise, I will keep plugging away at it... I think I am close to getting it to use the runtime I'd of rocky-8.4</p>"},{"location":"archive/legacy/bootstrap_i686/","title":"Bootstrap i686","text":"<p>Koji, by default, does not build packages as multiarch, it expects a i686 repo/buildroot as that is what mock expects. It appears that it requires a 32 bit bootstrap to start off. However, Enterprise Linux 8 does not have a 32 bit repo. To get around this, packages have to be bootstrapped using at least Fedora 28 (and Fedora 29 for couple of instances).</p>"},{"location":"archive/legacy/bootstrap_i686/#setup","title":"Setup","text":""},{"location":"archive/legacy/bootstrap_i686/#install-mock-and-configuration","title":"Install Mock and Configuration","text":"<p>Install mock...</p> <pre><code>% yum install epel-release\n% yum install mock createrepo_c httpd -y\n% useradd rpmbuild\n% usermod -aG mock rpmbuild\n</code></pre> <p>Add a proper mock configuration...</p> <pre><code>% cat &gt;&gt; /etc/mock/rocky-8-i686.cfg &lt;&lt; \"EOF\"\n# A lot of these values do not matter as they will be overridden later\n# with koji's mock settings\nconfig_opts['root'] = 'rocky-8-i686'\nconfig_opts['target_arch'] = 'i686'\nconfig_opts['legal_host_arches'] = ('i386', 'i486', 'i586', 'i686', 'x86_64',)\nconfig_opts['chroot_setup_cmd'] = 'install bash bzip2 coreutils cpio diffutils system-release findutils gawk gcc gcc-c++ grep gzip info make patch redhat-rpm-config rpm-build sed shadow-utils tar unzip util-linux which xz'\nconfig_opts['dist'] = 'el8'  # only useful for --resultdir variable subst\nconfig_opts['macros']['%dist'] = \".el8\"\nconfig_opts['%centos_ver'] = \"8\"\nconfig_opts['macros']['%centos_ver'] = \"8\"\nconfig_opts['macros']['%rhel'] = \"8\"\nconfig_opts['macros']['%el8'] = \"1\"\nconfig_opts['macros']['%redhat'] = \"8\"\nconfig_opts['macros']['%_vendor'] = \"redhat\"\nconfig_opts['macros']['%_vendor_host'] = \"redhat\"\nconfig_opts['macros']['%_host'] = \"i686-redhat-linux-gnu\"\nconfig_opts['macros']['%vendor'] = \"Rocky Linux\"\nconfig_opts['macros']['%packager'] = \"Louis Abel &lt;label@rockylinux.org&gt;\"\n#config_opts['package_manager'] = 'yum'\n\n# no ccache in base repo\n#config_opts['plugin_conf']['ccache_enable'] = False\n#config_opts['plugin_conf']['yum_cache_enable'] = False\n\nconfig_opts['yum.conf'] = \"\"\"\n[main]\ncachedir=/var/cache/yum\nkeepcache=1\ndebuglevel=2\nreposdir=/dev/null\nlogfile=/var/log/yum.log\nretries=20\nobsoletes=1\ngpgcheck=0\nassumeyes=1\nsyslog_ident=mock\nsyslog_device=\n\nexclude=*.x86_64\n\n# We are using Fedora 28 or 29 as our bases. 28 is what we use mainly. There are\n# a few cases where I needed 29 instead, but they were far and few between.\n\n# In majority of builds now with the current bootstrap, Fedora is rarely used.\n# Even though this is the case, we still need to exclude specific packages as\n# they have epochs or dnf decides to use Fedora instead for whatever reason.\n\n[base_29]\nname=fedora 29 base\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/29/Everything/i386/os/\nenabled=0\ngpgcheck=0\ncost=2000\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[updates_29]\nname=fedora 29 updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/29/Everything/i386/\nenabled=0\ngpgcheck=0\ncost=2000\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[base_28]\nname=fedora 28 base\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/28/Everything/i386/os/\nenabled=1\ngpgcheck=0\ncost=2000\npriority=99\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[updates_28]\nname=fedora 28 updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/28/Everything/i386/\nenabled=1\ngpgcheck=0\ncost=2000\npriority=99\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n# These aren't ever used, but it doesn't hurt to have them here disabled.\n[modular]\nname=fedora 28 modular\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/28/Modular/i386/os/\nenabled=0\ngpgcheck=0\ncost=2500\n\n[modular_updates]\nname=fedora 28 modular updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/28/Modular/i386/\nenabled=0\ngpgcheck=0\ncost=2500\n\n# Sometimes I enable this, but usually I just copy what's there into /reqs and\n# createrepo.\n[i686]\nname=i686 only\nbaseurl=file:///var/www/html/src/i686\nenabled=0\ngpgcheck=0\ncost=1000\n\n# Everything we're building into a single repo. This has higher priority.\n[recursive]\nname=recursive\nbaseurl=file:///var/www/html/src/reqs\nenabled=1\ngpgcheck=0\ncost=1000\npriority=1\nmodule_hotfixes=0\n\"\"\"\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#setup-the-recursive-repo","title":"Setup the recursive repo","text":"<p>So we can create an empty repo so mock/dnf is ok with that. However, that won't cut everything. We need a couple RPM's first. We can pull the noarch packages that centos has right now to get us started.</p> <pre><code>% mkdir -p /var/www/html/src/{reqs,logs,mirror,hidden}\n\n# Pull required RPM's\n% wget http://mirror.centos.org/centos/8.3.2011/AppStream/x86_64/os/Packages/redhat-rpm-config-123-1.el8.noarch.rpm\n\n# Generate repo data\n% createrepo /var/www/html/src/reqs\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#pull-required-hidden-deps","title":"Pull required hidden deps","text":"<p>We still need some hidden dependencies. And a lot of these can be built without a problem after the above has been setup. Below is a list, which can be found on our temporary copr. You should download the source RPM's and build them.</p> <p>You won't find a rocky-logos or rocky-release in copr. However you may find them in our koji. Highly recommended downloading them from koji and building them.</p> <pre><code>-rw-r--r-- 1 root root    569161 Apr  7 04:09 atf-0.20-11.el8.src.rpm\n-rw-r--r-- 1 root root   2198827 Apr  7 04:01 fonttools-3.28.0-2.el8.src.rpm\n-rw-r--r-- 1 root root    670398 Apr  7 04:34 kyua-0.13-1.el8.src.rpm\n-rw-r--r-- 1 root root 149325484 Mar 15 22:41 libabigail-1.4-2.el8.src.rpm\n-rw-r--r-- 1 root root    500728 Apr  7 04:19 lutok-0.4-10.el8.src.rpm\n-rw-r--r-- 1 root root   1107360 Aug  7  2020 nspr-4.25.0-2.el8_2.src.rpm\n-rw-r--r-- 1 root root 143424626 Apr  8 06:56 nss-3.53.1-17.el8.src.rpm\n-rw-r--r-- 1 root root    100839 Mar 14 22:38 pam_wrapper-1.0.7-1.el8.src.rpm\n-rw-r--r-- 1 root root    149272 Dec 21 03:56 polkit-gnome-0.106-0.2.20170423gita0763a2.el8.src.rpm\n-rw-r--r-- 1 root root   1507527 Mar 15 17:38 rocky-logos-83.0-1.el8.src.rpm\n-rw-r--r-- 1 root root     23678 Apr  9 04:04 rocky-release-8.3-5.el8.src.rpm\n-rw-r--r-- 1 root root   3527211 Apr  7 03:52 ttfautohint-1.8.1-3.el8.src.rpm\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#optional-pull-all-the-sources-from-the-vault","title":"Optional: Pull all the sources from the vault","text":"<p>You may need to pull all the sources from the vault. I used httrack to do this. Note that the link may die and you may need to build it yourself.</p> <p>Another thing is, after I pulled down the sources, I deleted all the old stuff and moved all the module packages.</p> <pre><code>% cd /var/www/html/src/mirror\n# -sN 0 helps ignore robots\n% httrack https://vault.centos.org/8.3.2011/BaseOS/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/AppStream/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/HighAvailability/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/PowerTools/Source/SPackages/ -sN 0\n\n# Now we need to move some things\n% mv vault.centos.org/8.3.2011/BaseOS/Source/SPackages/ BaseOS\n% mv vault.centos.org/8.3.2011/AppStream/Source/SPackages/ AppStream\n% mv vault.centos.org/8.3.2011/HighAvailability/Source/SPackages/ HighAvailability\n% mv vault.centos.org/8.3.2011/PowerTools/Source/SPackages/ PowerTools\n% rm -rf vault.centos.org index.html\n\n# I don't want to build modules. I'm doing that in koji, so instead, I'm moving them away.\n% mkdir modules\n% find . -type f -regextype sed -regex '.*module.*\\.rpm' -exec mv {} modules/ \\;\n\n# Now I need to remove all the old stuff\n# You can use repomanage on directories that are not actual repos and it will operate properly.\n% for x in AppStream BaseOS HighAvailability PowerTools ; do rm $(repomanage --keep=1 ${x}) ; done\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#actually-build","title":"Actually build","text":"<p>I have a kind of hacky script that takes care of this for me. You can feed it one at a time.</p> <pre><code># ~/bin/build-a-rpm\n#!/bin/bash\nPACKAGE=$1\nLOGDIR=/var/www/html/src/logs/${NAME//.src.rpm/}\nMOCKDIR=/var/lib/mock/rocky-8-i686\nmock -r rocky-8-i386 $1\n\nif [ $? -eq 0 ]; then\n  rm ${MOCKDIR}/result/*.src.rpm\n  cp ${MOCKDIR}/result/*.rpm /var/www/html/src/reqs\n  createrepo /var/www/html/src/reqs\n  echo $1 &gt;&gt; /tmp/DONE\nelse\n  mkdir ${LOGDIR}\n  cp ${MOCKDIR}/result/*.log ${LOGDIR}\n  echo $1 &gt;&gt; /tmp/FAIL\nfi\n</code></pre> <pre><code>% build-a-rpm /var/www/html/src/mirror/BaseOS/tar-1.30-5.el8.src.rpm\n</code></pre>"},{"location":"archive/legacy/build_steps/","title":"Rocky Build Process Overview (Revised)","text":"<p>UPDATE2: updated version of this document published 2021-01-04 , lots of conceptual work has been done, many more things finalized</p> <p>This is a simple document that explains going from RHEL sources to freshly (re)-built Rocky Linux packages.  It's not intended to be overly technical or specific at all, just an introduction (and general plan) to someone interested in how the process will work.</p>"},{"location":"archive/legacy/build_steps/#the-steps-going-from-rhel-8-source-to-rocky-8-binary-package","title":"The Steps: Going from RHEL 8 Source to Rocky 8 Binary Package","text":"<p>1:  Obtain the RHEL sources via SRPM or CentOS Git</p> <p>2-3: Import RHEL source into Rocky Linux Git, replace any protected trademarks / branding from the source</p> <p>4:  Produce a Rocky 8 Source RPM from the Rocky Linux Git repository for the package, likely using Koji/MBS/Mock RPM build tools</p> <p>5: Compile the source RPM to a Rocky 8 binary RPM using the build tools</p> <p>6: Sign and test the RPM in an automatic way</p> <p>7: Deploy it to the Rocky Linux repository, and distribute to users</p> <p></p> <p>Obviously, each of these steps has a lot more to it.  This document will not get in-depth about ways and means of accomplishing each step.  We prefer each of these to be as automated as possible.  We'll take a (short) look at each one in turn, and the various options available to achieve them:</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-1-obtain-the-source","title":"Step 1: Obtain the Source","text":"<p>This is fairly straightforward.  If you want to re-build RHEL 8, you need the source to RHEL 8.  There are 2 main ways to do this:</p> <ul> <li>Download source RPM files on a RHEL machine via yum/dnf</li> <li>Copy them from https://git.centos.org (which are identical to RHEL and have tagged versions)</li> </ul> <p>The packaging team has decided to go with option #2: copying from CentOS Git.  This minimizes potential legal questions with RHEL subscription terms, and is a simple operation to perform.  SRPM extraction can be used in the future in case of any issues with the CentOS Git site.</p> <p>Tools are now being developed to perform this step in an automated fashion.  CentOS (and Fedora) use an MQ messaging solution to indicate when new commits are made to a repository.  We intend to consume those published messages as well to get alerted when we should build a new package.</p> <p>We have news that https://git.centos.org will be the actual commit location for RHEL sources in the future, so we should be in good company!</p> <p>Future Doc: There will be another document explaining exactly what is in the CentOS Git branches, how to navigate, etc.</p> <p></p>"},{"location":"archive/legacy/build_steps/#steps-2-3-import-source-to-git-and-replace-branding","title":"Steps 2-3: Import source to Git, and replace branding","text":"<p>This is a big technical question-mark, and will need to be carefully considered.</p> <p>Each package in RHEL should have a corresponding Rocky Linux Git repository dedicated to it.  For example: Rocky Linux will have a bash repository, a python3 repository, a python3-gpg repository, etc.  One git repo for each package.  Yes, that is a lot of git repositories.</p> <p>The decision from our infrastructure team is to go with a (self-hosted) Gitlab instance.</p> <p>This section will outline some of the major technical hurdles being considered:</p>"},{"location":"archive/legacy/build_steps/#second-git-thats-private","title":"Second git that's private?","text":"<p>It is legally questionable to host raw RHEL material due to trademark issues.  There are a couple of options:</p> <ul> <li>Host a second, private git that holds raw RHEL sources waiting to be de-branded</li> <li>De-brand sources via script or patch as they are imported, and place the result into the main, public git repos</li> </ul> <p>Tentative Answer: Applying de-brand patches at the same time as import seems viable.  So no need for a separate private repo.</p>"},{"location":"archive/legacy/build_steps/#git-packagebinary-strategy","title":"Git package/binary strategy","text":"<p>Packages are distributed as specfiles, patches, and the upstream/original source as a tarball (.tar.gz, tar.bz2, etc.).  Text files are easy enough in git, but there are different strategies for storing these upstream tar files.</p> <p>Answer: The agreed-upon strategy is to use a lookaside caching mechanism, just like Fedora and CentOS proper.  The one used is called dist-git, and involves a separate script that downloads a tarfile that matches to a checked out git branch.</p> <p>If this doesn't work out, git-lfs is also a popular option for binary storage.</p>"},{"location":"archive/legacy/build_steps/#filesfolders-tagsbranches-layout-in-git","title":"Files/Folders, Tags/Branches layout in Git:","text":"<p>Should we stick to the folders/tags/branches layout in git.centos.org?  Or something quite different?  Should we place debranding metadata with the project, or somewhere else?  How about automated/scripted test cases?  There is a lot to consider here.</p> <p>Tentative Answer: Our Git layout will likely mirror certain branches of packages in git.centos.org, but with different names.  Debranding metadata will be kept separate, as well as metadata related to modular package builds.</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-4-produce-a-rocky-linux-source-rpm","title":"Step 4: Produce a Rocky Linux source RPM","text":"<p>Once in a Rocky repository, the contents of a package should correspond directly to its SRPM equivalent.</p> <p>The debranding should be complete by this point, so a build system (Koji) will be able to point to the repository, grab the source for it, and construct our Rocky SRPM using Mock and other RPM tools.</p> <p>Special attention will have to be paid to the \"modular/stream\" RPMs in RHEL 8.  The Modular Build System (MBS) service that interacts with Koji needs to be set up properly to accomodate this.</p> <p>Particulars of the build config will depend on the answers to steps 2-3 above:  What folder(s) will things be in, where will the binary tar file data be located, etc.</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-5-produce-a-rocky-linux-binary-rpm","title":"Step 5: Produce a Rocky Linux Binary RPM","text":"<p>This is pretty straightforward.  Once we have a valid source RPM, we use our build system to extract, compile, and produce a valid binary RPM.</p> <p>Again, special consideration is needed for modular/stream packages, and dependencies.</p> <p>Note about dependencies:  Not everything required to build the packages in RHEL is available in RHEL.  Some packages require other packages to be built first, and their -devel packages produced before another package will compile properly.  RHEL/CentOS do not maintain a public location for these \"extra\" dependencies, but Rocky Linux plans to.  There will likely be another document later spelling this information out in more detail.</p> <p>Once complete, we're ready to test, sign, and send it off to the official repository (and mirrors!).</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-6-sign-and-test","title":"Step 6: Sign and Test","text":"<p>RPMs produced by us should be cryptographically signed with a Rocky Linux key, which guarantees to users that the package was indeed built by the Rocky Linux project.</p> <p>The package will also need to be put through some testing - preferably automated.  The nature of the testing is yet to be determined, but we'll want to do some sanity checks at the bare minimum before unleashing it on the world.  (Is this package installable?  Did we accidentally miss any files?  Does it cause dnf/yum dependency conflicts? etc.)</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-7-deploy-to-repository","title":"Step 7: Deploy to Repository","text":"<p>Once a package is complete and tested, it will be uploaded to the Rocky Linux repository, and picked up/cloned by a network of repository mirrors around the world.  The Rocky 8 source RPM will of course be uploaded as well.</p> <p>Users of the distro will then see it when they <code>dnf update</code> or <code>dnf install</code> !</p> <p></p>"},{"location":"archive/legacy/build_steps/#closing-note","title":"Closing Note:","text":"<p>This is version \"3\" of this document.  We are now about a month into the project, and have come a long way in our understanding!</p> <p>The technical folks examining this have learned much in a short time, and already have working proof-of-concept RPM pipelines(!)  Come join in ~Dev/Packaging on Mattermost and we're happy to discuss package/release pipeline direction.</p> <p>There are still several questions to answer, particularly in regards to steps 2-3.  Progress is being made, though.</p> <p>Spelling out what needs to be done is much easier than actually accomplishing it.</p> <p>This document remains a work-in-progress, as more technical information comes in.</p> <p>This document remains a rough draft, and is likely to go through more revision as we learn more.</p> <p></p> <p>Thanks,</p> <p>-Skip Grube (Mattermost)  (skip77 on IRC)</p>"},{"location":"archive/legacy/external_package_space/","title":"External Package Scratch Space","text":"<p>This is a staging area for current work on external dependencies.  Once confirmed working, items from these lists will be removed and added to the \"official\" Hidden/External Dependencies Wiki page.</p> <p>Packages listed should use the default \"c8\" branch, unless otherwise noted in parentheses</p> <p>(Remember: all perl deps built without \"module_hotfix\" dnf option, we want to build w/ default Perl 5.26 stream)</p> <p></p>"},{"location":"archive/legacy/external_package_space/#to-add-to-external-build-list-100","title":"To add to External build list 100:","text":"<pre><code># Build Deps 100:\n(empty, for now - moved to the official page)\n</code></pre>"},{"location":"archive/legacy/external_package_space/#to-add-to-the-external-build-list-101","title":"To add to the External build list 101:","text":"<pre><code># Build Deps 101:\n(empty, for now - moved to the official page)\n</code></pre>"},{"location":"archive/legacy/external_package_space/#to-add-to-the-external-build-list-102","title":"To add to the External build list 102:","text":"<pre><code># Build Deps 102:\n</code></pre>"},{"location":"archive/legacy/external_package_space/#still-being-figured-out","title":"Still being figured out:","text":"<p><pre><code>################\n**** Notes for Tycho build ****\n\napache-commons-codec namespace changed between 1.11 and 1.13\n\nFrom koji build log for 1.11 (https://koji.mbox.centos.org/pkgs/packages/apache-commons-codec/1.11/3.module_el8.0.0+39+6a9b6e22/data/logs/noarch/build.log)\n\n    \"Provides: apache-commons-codec = 1.11-3.module_el8.0.0+39+6a9b6e22 mvn(commons-codec:commons-codec) = 1.11 mvn(commons-codec:commons-codec:pom:) = 1.11 osgi(org.apache.commons.codec) = 1.11.0\"\n\n    Notice that it says it provides osgi(org.apache.commons.codec)\n\nFrom koji bild log for 1.13 (https://koji.mbox.centos.org/pkgs/packages/apache-commons-codec/1.13/3.module_el8.3.0+568+0c23fd64/data/logs/noarch/build.log)\n\n    \"Provides: apache-commons-codec = 1.13-3.module_el8.3.0+568+0c23fd64 mvn(commons-codec:commons-codec) = 1.13 mvn(commons-codec:commons-codec:pom:) = 1.13 osgi(org.apache.commons.commons-codec) = 1.13.0\"\n\n    Notice that it says it provides osgi(org.apache.commons.commons-codec)\n\nThe change from 'org.apache.commons.codec' to 'org.apache.commons.commons-codec' breaks the build of tycho\n\nPatching the files in the source file org.eclipse.tycho-tycho-1.4.0.tar.xz to refer to \"org.apache.commons.commons-codec\" resolved the build.\n    Files touched inside source file: org.eclipse.tycho-tycho-1.4.0/tycho-bundles/tycho-bundles-external/tycho-bundles-external.product\n                      org.eclipse.tycho-tycho-1.4.0/tycho-bundles/tycho-standalone-p2-director/p2 Director.product\n\nPatched tycho-bootstrap.sh as well\n\n\n\nSKIPS NOTE:\nPotentially patch in tycho .spec file:\nfind . -iname \"*.product\" -type f | xargs -n 1  -I {} sed -i 's/org\\.apache\\.commons\\.codec/org\\.apache\\.commons\\.commons\\-codec/g' \"{}\"\nfind . -iname \"*.sh\" -type f | xargs -n 1  -I {} sed -i 's/org\\.apache\\.commons\\.codec/org\\.apache\\.commons\\.commons\\-codec/g' \"{}\"\n#########################\n\n\n\n\n\nMaven issues - https://pagure.io/centos-infra/issue/210, https://bugzilla.redhat.com/show_bug.cgi?id=1897375\n--------------------------------------------------------------------------------------------------\nAttempt to install \"maven\" package as part of setting up mock environment, as mentioned in Bugzilla report results in packaging conflicts\n\n\nError: Transaction test error:\n  file /usr/share/java/maven-resolver/maven-resolver-api.jar from install of maven-resolver-api-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-api.pom from install of maven-resolver-api-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-util.jar from install of maven-resolver-util-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-util.pom from install of maven-resolver-util-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-spi.jar from install of maven-resolver-spi-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-spi.pom from install of maven-resolver-spi-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/org.eclipse.sisu.inject.jar from install of sisu-inject-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/org.eclipse.sisu.inject.pom from install of sisu-inject-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/org.eclipse.sisu.plexus.jar from install of sisu-plexus-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/org.eclipse.sisu.plexus.pom from install of sisu-plexus-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-impl.jar from install of maven-resolver-impl-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-impl.pom from install of maven-resolver-impl-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-wagon/provider-api.jar from install of maven-wagon-provider-api-0:3.1.0-1.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-wagon-3.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-wagon/provider-api.pom from install of maven-wagon-provider-api-0:3.1.0-1.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-wagon-3.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n----------------------------------------------------------------------------------------------------------\n\n\n\n\nTrying to build new version of maven with fix to known bug in it: https://bugzilla.redhat.com/show_bug.cgi?id=1897375\n\nmaven - c8-stream-3.6\n    No matching package to install: 'mvn(org.codehaus.modello:modello-maven-plugin) &gt;= 1.10.0'\n    No matching package to install: 'mvn(org.mockito:mockito-core) &gt;= 2'\n    No matching package to install: 'mvn(org.xmlunit:xmlunit-core)'\n    No matching package to install: 'mvn(org.xmlunit:xmlunit-matchers)'\n    dependency - slf4j-sources - produced by 'slf4j' branch c8-stream-3.6 - depends on maven??\n</code></pre> </p>"},{"location":"archive/legacy/external_package_space/#dependencies-that-we-need-to-find-packages-for","title":"Dependencies that we need to find packages for:","text":"<pre><code>## Dependencies I'm not sure about, and suggested(?) packages that might provide them:\n## (need to investigate these, and when found, add their packages to the list above)\n## Listed as dependency first, then possible package that it comes from after:\n\neclipse-pde  -&gt;  eclipse ??\n\nhibernate-jpa-2.0-api ??\nhsqldb -&gt; hsqldb-lib ??\n\npkgconfig(wayland-eglstream) ????\npkgconfig(wayland-eglstream-protocols) ????\nspringframework-beans ????\nqt5-qtbase-doc   qt5-qbase (?)\n\nmvn(avalon-framework:avalon-framework-api)   avalon-framework ??\nmvn(avalon-framework:avalon-framework-impl)  avalon-framework ??\n\nmvn(ch.qos.logback:logback-classic) ????\n\nmvn(com.fasterxml.jackson:jackson-base:pom:) jackson, or fasterxml-oss-partent ??\nmvn(com.fasterxml.jackson:jackson-parent:pom:) jackson, or fasterxml-oss-partent ??\n\nmvn(com.googlecode.json-simple:json-simple)   ????\nmvn(com.google.code.maven-replacer-plugin:replacer)  replacer ??\n\nmvn(com.jcraft:jsch.agentproxy.connector-factory) jsch ??\nmvn(com.jcraft:jsch.agentproxy.jsch)  jsch ??\n\nmvn(dom4j:dom4j)  -&gt; dom4j\n\nmvn(io.prometheus:simpleclient)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_common)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_hotspot)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_httpserver)  prometheus-simpleclient-java\n\nmvn(javax.ws.rs:javax.ws.rs-api)  glassfish-jax-rs-api ??\n\nmvn(logkit:logkit)  avalon-logkit ??\n\nmvn(net.sf.ehcache:ehcache-core)  ????\nmvn(net.spy:spymemcached)  ????\n\nmvn(org.apache.maven.scm:maven-scm-api)  maven-scm ??\nmvn(org.apache.maven.scm:maven-scm-manager-plexus)  maven-scm ??\n\nmvn(org.codehaus.modello:modello-maven-plugin)  modello ??\n\n\nmvn(org.mockito:mockito-core)  mockito ??\nmvn(org.xmlunit:xmlunit-core)  xmlunit\nmvn(org.xmlunit:xmlunit-matchers)  xmlunit\nmvn(org.yaml:snakeyaml)  snakeyaml\n</code></pre>"},{"location":"archive/legacy/faq/","title":"Frequently Asked Questions","text":"<p>Hello! You were likely directed here as an answer to your question in our Mattermost, IRC channels, or forums. It is likely your question is asked frequently. Below, we have the most common questions we receive and their accompanying answers.</p>"},{"location":"archive/legacy/faq/#what-license-is-rocky-linux-released-under","title":"What license is Rocky Linux released under?","text":"<p>3-Clause BSD</p>"},{"location":"archive/legacy/faq/#where-is-the-code-andor-build-instructions-for-your-docker-image","title":"Where is the \"code\" and/or build instructions for your docker image?","text":"<p>There is no \"code\" for the docker image we provide (as of Rocky Linux 8). A rootfs archive is created using imagefactory and extracted within a scratch container.</p> <p>The docker file is located here</p>"},{"location":"archive/legacy/faq/#how-is-rocky-linux-made","title":"How is Rocky Linux made?","text":"<p>Skip, a member of Release Engineering, has been spending time doing a write up of how Rocky Linux 8 is currently built, which includes information on the various tools (koji, pungi, MBS, git, et al) and how they all come together. You can view it here</p>"},{"location":"archive/legacy/hidden_deps/","title":"Hidden / External Dependencies","text":"<p>This page lists all hidden dependencies required to build the repos and what order they should be built in.</p>"},{"location":"archive/legacy/hidden_deps/#what-is-a-hidden-dependency","title":"What is a Hidden Dependency?","text":"<p>This is a general term for any package that is required, but not available in any CentOS repo.  However, these packages are available from git.centos.org alongside \"normal\" packages found in the repos.</p> <p>A further complication: there are hidden dependencies that depend on other hidden dependencies.</p> <p>For example, the well-known package bind depends on kyua, which is not present in any CentOS/RHEL repository.</p> <p>Building kyua depends on having lutok, which in turn depends on having atf.  None of these are present in a \"normal\" CentOS repo. (BaseOS/AppStream/PowerTools/Extras/HA/etc.)</p> <p>This can get extreme, with some packages requiring 5 (or more!) layers of these \"hidden\" deps.</p>"},{"location":"archive/legacy/hidden_deps/#when-should-these-be-built","title":"When should these be built?","text":"<p>That's an open question.  A safe time to build these would be starting after \"Build Pass 6\" (or possibly 7).  A strategy might be to build these completely on their own, or insert them into the \"normal package\" passes and build them concurrently.  Best way to do this is still an open question.</p>"},{"location":"archive/legacy/hidden_deps/#documenting","title":"Documenting","text":"<p>In an effort to document this, we are compiling layered \"lists\" of these hidden dependencies.  Very similar to the work being done under \"Build_Order\" to determine dependencies of the main repos.  You can almost think of these dependencies as another repo, similar to BaseOS/AppStream/PowerTools/etc.</p> <p>These lists are numbered, and are in order of dependency.  You need to build it smallest to largest.  For example:  In order to build the packages from list 98, you need the ones that were built in list 97. And list 97 depends on the products from list 96, etc.</p> <p>(The numbers are arbitrary and don't start at 1, so new layers don't require re-labeling of all the lists)</p> <p></p>"},{"location":"archive/legacy/hidden_deps/#the-lists","title":"The lists:","text":"<p>External Build List #92: | Package Name | CentOS git Branch | |:------------|-------------------------| | buildsys-macros | c8 | | centpkg-minimal | c8 |</p> <p>External Build List #93:</p> Package Name CentOS git Branch javapackages-tools c8-stream-201902  (note: bootstrap java tools.  contains a bunch of pre-compiled RPMs to satisfy depdencies) 04/08/2021 - pulled out of repo. Causing conflicts. perl-File-Find-Object-Rule c8 <p></p> <p>External Build List #94:</p> Package Name CentOS git Branch perl-Test-TrailingSpace c8 perl-XML-Filter-BufferText c8 <p></p> <p>External Build List #95:</p> Package Name CentOS git Branch perl-XML-SAX-Writer c8 perl-XML-SemanticDiff c8 <p></p> <p>External Build List #96:</p> Package Name CentOS git Branch perl-Class-Accessor-Chained c8 perl-DateTime-Event-Recurrence c8 perl-Module-Install-GithubMeta c8 perl-Set-Infinite c8 perl-strictures c8 perl-Sub-Quote c8 perl-Test-XML c8 <p></p> <p>External Build List #97:</p> Package Name CentOS git Branch perl-Class-ReturnValue c8 perl-Data-ICal c8 perl-DateTime-Event-ICal c8 perl-DateTime-Set c8 perl-File-Find-Object-Rule c8 perl-Moo c8 perl-Text-vFile-asData c8 perl-Tie-DataUUID c8 perl-UNIVERSAL-require c8 perl-XML-Fast c8 perl-XML-Spice c8 <p></p> <p>External Build List #98:</p> Package Name CentOS git Branch atf c8 javapoet c8 perl-Class-Inner c8 perl-Convert-Base64 c8 perl-CPAN-Changes c8 perl-Data-ICal-TimeZone c8 perl-DateTime-Format-ICal c8 perl-File-LibMagic c8 perl-Net-DAVTalk c8 perl-Text-LevenshteinXS c8 perl-Text-VCardFast c8 rubygem-coderay c8 tesla-polyglot c8 <code>--with jp_minimal</code> <p></p> <p>External Build List #99:</p> Package Name CentOS git Branch auto c8 beakerlib c8 centos-bookmarks c8 console-setup c8 datefudge c8 docbook5-style-xsl c8 eclipse-license2 c8 fasterxml-oss-parent c8-stream-10.6 felix-gogo-parent c8 felix-gogo-runtime c8 fonttools c8 gcab c8 imaptest c8 javapackages-tools c8-stream-201902/javapackages-tools-5.3.1-7.module+el8.2.0+5555+73059ce4 latexmk c8 libabigail c8 lutok c8 objectweb-asm (7.2) c8-stream-201902 objectweb-asm (7.3) c8-stream-rhel8 <code>--without junit5</code> (needed to build byte-buddy) opentest4j c8 pam_wrapper c8 perl-BSD-Resource c8 perl-Config-IniFiles c8 perl-Font-TTF c8 perl-Mail-IMAPTalk c8 perl-Mail-JMAPTalk c8 perl-Math-Int64 c8 perl-Net-CalDAVTalk c8 perl-NNTPClient c8 perl-PerlIO-gzip c8 perl-Test-Inter c8 perl-Test-Unit c8 perl-XML-Generator c8 polkit-gnome c8 psutils c8 python3-mallard-ducktype c8 python-blinker c8 python-cryptography-vectors c8 python-httpretty c8 python-pretend c8 rubygem-kramdown c8 sassc c8 shrinkwrap c8 ttembed c8 ttfautohint c8 tycho-extras c8 univocity-parsers c8 wordnet c8 xmlgraphics-commons c8-stream-rhel8 (requires workaround setting JAVA_HOME ) xpp3 c8 <p></p> <p>External Build List #100:</p> Package Name CentOS git Branch apache-commons-el c8 apiguardian c8 base64coder c8 batik c8-stream-rhel8-bootstrap byte-buddy c8-stream-201902 cbi-plugins c8 decentxml c8 ecj c8 eclipse-ecf c8 <code>--with bootstrap</code> eclipse-emf c8 <code>--with bootstrap</code> felix-gogo-command c8 felix-gogo-shell c8 felix-scr c8 golang-github-cpuguy83-go-md2man c8-stream-1.0 google-gson c8 hamcrest c8-stream-201902 icu4j c8-stream-rhel8 jackson-parent c8-stream-10.6 jboss-modules c8 jetty c8 <code>--with jp_minimal</code> junit5 c8 kyua c8 kxml c8 lucene c8 <code>--with jp_minimal</code> msv c8-stream-10.6 ocaml-fileutils c8 perl-File-MMagic c8 perl-List-Pairwise c8 perl-File-Slurp-Tiny c8-stream-5.26 perl-Module-Install-ExtraTests c8 sat4j c8 xml-maven-plugin c8 <p>External Build List #101:</p> Package Name CentOS git Branch catch c8 catch1 c8 ceres-solver c8 classloader-leak-test-framework c8 eclipse c8 <code>--with bootstrap</code> glassfish-jax-rs-api c8-stream-10.6 glslang c8 jackson-bom c8-stream-10.6 jarjar c8 java-comment-preprocessor c8 jboss-logmanager c8 maven-verifier-plugin c8 mdds (1.3) c8 mdds (1.4) c8s (-b imports/c8s/mdds-1.4.3-1.el8) mingw-w64-tools c8 mingw-libxml2 c8 mingw-pdcurses c8 mockito (2) c8-stream-201902 ocaml-calendar c8 ocaml-csv c8 ocaml-curses c8 ocaml-gettext c8 ocaml-libvirt c8 ocaml-xml-light c8 passivetex c8 PEGTL c8 perl-B-Hooks-EndOfScope c8 perl-DateTime-Format-IBeat c8 perl-Devel-Hide c8 perl-Encode-IMAPUTF7 c8 perl-ExtUtils-Config c8 perl-ExtUtils-Helpers c8 perl-ExtUtils-InstallPaths c8 perl-File-ShareDir-Install c8 perl-Test-File-ShareDir c8 perl-IO-CaptureOutput c8 perl-Crypt-OpenSSL-Guess c8 perl-Module-Install c8 perl-Module-Install-AuthorRequires c8 perl-Module-Install-AutoLicense c8 perl-Module-Install-ManifestSkip c8 perl-Module-Build-Tiny c8 perl-Module-Package c8 perl-Module-Manifest-Skip c8 perl-Net-CardDAVTalk c8 perl-Net-DNS-Resolver-Mock c8 perl-Net-DNS-Resolver-Programmable c8 perl-Net-IDN-Encode c8 perl-Net-LibIDN c8 perl-Object-Deadly c8 perl-Test-FailWarnings c8 perl-Test-File-ShareDir c8 perl-Test-InDistDir c8 perl-Test-MockModule c8 perl-Test-Needs c8 perl-Test-RequiresInternet c8 perl-Test-Without-Module c8 perl-Test2-Plugin-NoWarnings c8 perl-XML-XPathEngine c8 prometheus-simpleclient-java c8 properties-maven-plugin c8 python-bottle c8 python-hs-dbus-signature c8 python-pluggy c8-stream-3.8 <code>--without tests</code> python-sphinx c8 qt5-doc c8 relaxngcc c8-stream-10.6 replacer c8 screen c8 SFML c8 snakeyaml c8s spirv-headers c8 tesseract c8 ucpp c8 unicode-emoji c8 python-docutils c8 rapidjson c8-stream-8.0 rubygem-thread_order c8 perl-Expect c8-stream-5.26 perl-Perl-Version c8-stream-5.26 perl-Sort-Versions c8-stream-5.26 perl-Test-Output c8-stream-5.26 tycho c8-stream-rhel8-bootstrap (required a spec patch to build )"},{"location":"archive/legacy/koji_bootstrap/","title":"Koji Bootstrap (setup)","text":"<p>Usually builds use the internal Koji repository to satisfy dependencies. To start with, there are no packages so we need to bootstrap (as some packages needs themselves to build themselves).</p>"},{"location":"archive/legacy/koji_bootstrap/#tags-and-build-tags","title":"Tags and build tags","text":"<p>Create new tags that will be the new distribution. Let's call them rocky. <pre><code>koji add-tag dist-rocky8\nkoji add-tag --parent dist-rocky8 --arches=i686,x86_64,ppc64le,aarch64 -x mock.yum.module_hotfixes=1 dist-rocky8-build\nkoji add-target dist-rocky8 dist-rocky8-build dist-rocky8\n</code></pre></p>"},{"location":"archive/legacy/koji_bootstrap/#external-repositories","title":"External repositories","text":"<p>Repositories from Sherif: <pre><code>koji add-external-repo -m bare -t dist-rocky8-build centos-8-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/","title":"Overview","text":"<p>This how-to is WIP and based on https://docs.pagure.org/koji/</p> <p>The setup is as follows: * CentOS-8 installed * Firewall allowing communication between the hosts * Public network for access and private network for koji and kerberos communication between hosts * koji.gnulab.org/10.10.10.2 hosts koji, kojiweb, koji-hub,kojira, kerberos server, kerberos workstation \"for testing\" * builder1.gnulab.org/10.10.10.3 hosts kojid building daemon and kerberos workstation \"for testing\" * Your location machine should have kerberos workstation as well and a browser configured to use kerberos * SSL is setup for web facing services using let's encrypt, you need to sort this one out</p>"},{"location":"archive/legacy/koji_setup/#getting-kerberos-up-and-running","title":"Getting kerberos up and running","text":"<p>!!!THIS IS A QUICK GUIDE FOR TESTING ONLY!!!</p> <p>You will need to install kerberos for this setup, however I assume IPA will be in place and will be used</p> <p>On the koji.gnulab.org machine do the following: * Install he needed packages: <code>dnf install krb5-server.x86_64 krb5-workstation.x86_64 -y</code> * Edit /etc/krb5.conf to look like that <pre><code># To opt out of the system crypto-policies configuration of krb5, remove the\n# symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.\nincludedir /etc/krb5.conf.d/\n\n[logging]\n    default = FILE:/var/log/krb5libs.log\n    kdc = FILE:/var/log/krb5kdc.log\n    admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    renew_lifetime = 7d\n    forwardable = true\n    rdns = false\n    pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt\n    spake_preauth_groups = edwards25519\n    default_realm = GNULAB.ORG\n    default_ccache_name = KEYRING:persistent:%{uid}\n\n[realms]\n GNULAB.ORG = {\n     kdc = koji.gnulab.org\n     admin_server = koji.gnulab.org\n }\n\n[domain_realm]\n .gnulab.org = GNULAB.ORG\n gnulab.org = GNULAB.ORG\n</code></pre> Where GNULAB.ORG is your realm * Create kerberos DB and create your super secrete password for the DB: <code>kdb5_util create -s</code> * Edit kerberos ACL /var/kerberos/krb5kdc/kadm5.acl to look as follows: <pre><code>*/admin@GNULAB.ORG  *\n</code></pre> * Create the local admin: <code>kadmin.local -q \"addprinc admin/admin\"</code> * Start you services: <code>systemctl enable krb5kdc --now &amp;&amp; systemctl enable kadmin --now</code></p>"},{"location":"archive/legacy/koji_setup/#the-principles","title":"The principles","text":"<p>koji needs few principles in kerberos for authentication as follows:</p> <ul> <li>host/kojihub@GNULAB.ORG: Used by the koji-hub server when communicating with the koji client</li> <li>HTTP/kojiweb@GNULAB.ORG: Used by the koji-web server when performing a negotiated Kerberos authentication with a web browser. This is a service principal for Apache\u2019s mod_auth_gssapi.</li> <li>koji/kojiweb@GNULAB.ORG: Used by the koji-web server during communications with the koji-hub. This is a user principal that will authenticate koji-web to Kerberos as \u201ckoji/kojiweb@GNULAB.ORG\u201d. Koji-web will proxy the mod_auth_gssapi user information to koji-hub (the ProxyPrincipals koji-hub config option).</li> <li>koji/kojira@GNULAB.ORG: Used by the kojira server during communications with the koji-hub</li> <li>compile/builder1.gnulab.org@GNULAB.ORG: Used on builder1 to communicate with the koji-hub. This is a user principal that will authenticate koji-builder to Kerberos as \u201ccompile/builder1.gnulab.org@GNULAB.ORG\u201d. Each builder host will have its own unique Kerberos user principal to authenticate to the hub.</li> <li>snagy@GNULAB.ORG: for my testing and package owner</li> <li>HTTP/koji.gnulab.org@GNULAB.ORG: to allow the client to use HTTP \"I am not sure\"</li> </ul> <p>And we can start creating the needed principles: * run <code>kadmin.local</code> then the following: <pre><code>addprinc host/kojihub@GNULAB.ORG\naddprinc HTTP/kojiweb@GNULAB.ORG\naddprinc koji/kojiweb@GNULAB.ORG\naddprinc koji/kojira@GNULAB.ORG\naddprinc HTTP/koji.gnulab.org@GNULAB.ORG\naddprinc snagy@GNULAB.ORG\naddprinc kojiadmin@GNULAB.ORG\n</code></pre></p> <ul> <li>Now we will need to create keytab, keytab is used for non-password auth, also I guess once you do that, you won't be able to use passwords, but that is okay since most of those are services principals, not that you can use multiple files if you need to, run <code>kadmin.local</code> and then: <pre><code>    ktadd   -k /etc/koji.keytab host/kojihub@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab HTTP/kojiweb@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab koji/kojira@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab koji/kojiweb@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab HTTP/koji.gnulab.org@GNULAB.ORG\n</code></pre></li> <li>Validation done by running <code>klist -k -t /etc/koji.keytab</code></li> <li>Run change permissions: <code>chmod 644 /etc/koji.keytab</code> <pre><code>root# klist -k -t /etc/koji.keytab\nKeytab name: FILE:/etc/koji.keytab\nKVNO Timestamp           Principal\n---- ------------------- ------------------------------------------------------\n   2 12/19/2020 15:00:53 koji/kojira@GNULAB.ORG\n   2 12/19/2020 15:00:53 koji/kojira@GNULAB.ORG\n   2 12/19/2020 15:01:08 koji/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:08 koji/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:14 HTTP/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:14 HTTP/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:20 host/kojihub@GNULAB.ORG\n   2 12/19/2020 15:01:20 host/kojihub@GNULAB.ORG\n   2 12/19/2020 15:38:52 HTTP/koji.gnulab.org@GNULAB.ORG\n   2 12/19/2020 15:38:52 HTTP/koji.gnulab.org@GNULAB.ORG\n</code></pre></li> </ul>"},{"location":"archive/legacy/koji_setup/#setting-up-koji-echosystem","title":"Setting up koji echosystem","text":"<p>We will start by setting up the DB, koji-hub, kojiweb and then kojira</p>"},{"location":"archive/legacy/koji_setup/#the-database","title":"The Database","text":"<p>On the main server koji.gnulab.org, do the following: * We need to install postgreqsl: <code>dnf install postgresql-server -y</code> * Init postgresql db: <code>postgresql-setup --initdb --unit postgresql</code> * Start the service: <code>systemctl enable postgresql --now</code> * Adding Koji user: <pre><code>useradd koji\npasswd koji\n</code></pre> and set a random complex password * Lets create koji DB user: <pre><code>su - postgres\ncreateuser --no-superuser --no-createrole --no-createdb koji\ncreatedb -O koji koji\npsql -c \"alter user koji with encrypted password 'mysupercomplexpassword';\"\n</code></pre> * Let's setup koji: <code>dnf install koji -y</code> * load the DB into postgresql:     <code>su - koji   psql koji koji &lt; /usr/share/doc/koji*/docs/schema.sql</code> * Postgresql permissions Since my koji server lives with the postgresql, I am using socket communication instead of TCP/IP * Edit /var/lib/pgsql/data/pg_hba.conf as follows \"Order is important\": <pre><code># \"local\" is for Unix domain socket connections only\nlocal   koji        koji                    trust\nlocal   all             all                                     peer\n</code></pre> * Reload postgresql: <code>systemctl reload postgresql</code> * Create koji authenticiation for kerberos: <pre><code>su - koji\n\npsql &lt;&lt;EOF\nwith user_id as (\ninsert into users (name, status, usertype) values ('kojiadmin', 0, 0) returning id\n)\ninsert into user_krb_principals (user_id, krb_principal) values (\n(select id from user_id),\n'kojiadmin@GNULAB.ORG');\nEOF\n</code></pre> * Give the user admin permissions: <pre><code>    su - koji\n    psql\n    koji=&gt; select * from users;\n    koji=&gt; insert into user_perms (user_id, perm_id, creator_id) values (\"id of user inserted above\", 1, \"id of user inserted above\");\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/#mntkoji-and-nfs","title":"/mnt/koji and NFS","text":"<ul> <li>Create the koji file system skeleton:</li> <li>Setup NFS and apache : <code>dnf install nfs-utils httpd -y</code> <pre><code>cd /mnt\nmkdir koji\ncd koji\nmkdir {packages,repos,work,scratch,repos-dist}\nchown apache.apache *\n</code></pre></li> <li>Start the service: <code>systemctl enable --now nfs-server</code></li> <li>Edit /etc/exports as follows: <pre><code>/mnt/koji 10.10.10.3(ro,sync,no_all_squash,root_squash)\n</code></pre></li> <li>Export the filesystem: <code>exportfs -ra</code></li> <li>View current state: <code>exportfs -v</code></li> <li>On the client install the NFS client packages: <code>dnf install nfs-utils nfs4-acl-tools -y</code></li> <li>Create the local dir: <code>mkdir /mnt/koji</code></li> <li>Mount the NFS: <code>mount -t nfs 10.10.10.2:/mnt/koji /mnt/koji</code></li> </ul>"},{"location":"archive/legacy/koji_setup/#kojihub","title":"Kojihub","text":"<ul> <li>Install kojihub <code>dnf install koji-hub mod_ssl -y</code></li> <li>Enable postgresql sweep function: <code>systemctl enable --now koji-sweep-db.timer</code></li> <li>Enable kerberos auth in /etc/httpd/conf.d/kojihub.conf by uncomment the section below as follows: <pre><code># uncomment this to enable authentication via GSSAPI\n &lt;Location /kojihub/ssllogin&gt;\n         AuthType GSSAPI\n         AuthName \"GSSAPI Single Sign On Login\"\n         GssapiCredStore keytab:/etc/koji.keytab\n         Require valid-user\n &lt;/Location&gt;\n</code></pre></li> <li>koji-hub configurations as follows in /etc/koji-hub/hub.conf: <pre><code>[hub]\n\nDBName = koji\nDBUser = koji\nKojiDir = /mnt/koji\nAuthPrincipal = host/kojihub@GNULAB.ORG\nAuthKeytab = /etc/koji.keytab\nProxyPrincipals = koji/kojiweb@GNULAB.ORG\nHostPrincipalFormat = compile/%s@GNULAB.ORG\nLoginCreatesUser = On\nKojiWebURL = https://koji.gnulab.org/koji\nNotifyOnSuccess = True\n</code></pre></li> <li>Install selinux policyutils: <code>dnf install policycoreutils-python-utils -y</code></li> <li>Lets fix some selinux stuff: <pre><code>    setsebool -P allow_httpd_anon_write=1\n    setsebool -P httpd_can_network_connect 1\n    setsebool -P httpd_use_nfs=1\n    semanage fcontext -a -t public_content_rw_t \"/mnt/koji(/.*)?\"\n    restorecon -r -v /mnt/koji\n  ```\n## Configure koji cli client\n* edit **/etc/koji.conf** as follows:\n</code></pre> [koji]</li> </ul> <p>server = https://koji.gnulab.org/kojihub weburl = https://koji.gnulab.org/koji topurl = https://koji.gnulab.org/ topdir = /mnt/koji authtype = kerberos krb_rdns = false plugins = runroot use_fast_upload = yes <pre><code>* restart httpd: ```systemctl restart httpd```\n* Test by running the following on koji server:\n    * kinit -p kojiadmin@GNULAB.ORG\n    * koji moshimoshi\n</code></pre> [root@koji ~]# kinit -p kojiadmin@GNULAB.ORG Password for kojiadmin@GNULAB.ORG: [root@koji ~]# koji moshimoshi hyl\u00f4, kojiadmin!</p> <p>You are using the hub at https://koji.gnulab.org/kojihub Authenticated via GSSAPI <pre><code>## Kojiweb\n* Install kojiweb: ```dnf install koji-web -y```\n* Edit **/etc/httpd/conf.d/kojiweb.conf** to allow kerberos:\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/#uncomment-this-to-enable-authentication-via-kerberos","title":"uncomment this to enable authentication via Kerberos","text":"<p>      AuthType GSSAPI      AuthName \"Koji Web UI\"      GssapiCredStore keytab:/etc/koji.keytab      Require valid-user      ErrorDocument 401 /koji-static/errors/unauthorized.html  </p> <p><pre><code>* Edit Kojiweb configuration **/etc/kojiweb/web.conf**\n</code></pre> [web] SiteName = koji</p> <p>KojiHubURL = https://koji.gnulab.org/kojihub KojiFilesURL = https://koji.gnulab.org/kojifiles</p> <p>WebPrincipal = koji/kojiweb@GNULAB.ORG WebKeytab = /etc/koji.keytab WebCCache = /var/tmp/kojiweb.ccache KrbService = koji.gnulab.org KrbServerRealm = GNULAB.ORG LoginTimeout = 72 Secret = asdasdf12313ewdasfq234f LibPath = /usr/share/koji-web/lib LiteralFooter = True <pre><code>* restart apache: ```systemctl reload httpd```\n## Setting up the builder / kojid / koji-builder\nThis will configuration will be on the building node(s)\n\n* Install koji-builder: ```dnf install koji-builder -y```\n* Edit **/etc/kojid/kojid.conf** as follows:\n</code></pre> [kojid]</p> <p>topdir=/mnt/koji workdir=/tmp/koji server=https://koji.gnulab.org/kojihub topurl=https://koji.gnulab.org/kojifiles ; those are for building package from git.c.o and Mustafa's git allowed_scms=git.centos.org:/:off:get_sources.sh gitlab.rockylinux.bycrates.org:/:off:/bin/sh,/usr/bin/srpmproc_wrapper host_principal_format=compile/%s@GNULAB.ORG <pre><code>On koji main server, run the following commands:\n* Add the new builder:  ```koji add-host builder1.gnulab.org  x86_64```\n* Add the createrepo channel: ```koji add-host-to-channel builder1.gnulab.org createrepo```\n* I did adjust the capacity since it is a small machine: ```koji edit-host --capacity=8 builder1.gnulab.org```\n* Note, by default kojid uses DNS to talk to koji-hub, so you need to have SRV record in your DNS as follows:\n</code></pre> _kerberos._udp    IN SRV  10 100 88 kerberos.GNULAB.ORG. <pre><code>* Kojid looks for **/etc/kojid/kojid.keytab** by default, so you need to create a file with compile principle as above and place it in the right location on builder node(s)\n</code></pre> kadmin.local addprinc compile/builder1.gnulab.org@GNULAB.ORG ktadd -k /tmp/kojid.keytab compile/builder1.gnulab.org@GNULAB.ORG <pre><code>On the builder node, restart kojid: ```systemctl enable kojid --now```\n\n## Kojira\n\n* Install koji-utils: ```dnf install koji-utils -y```\n* Add kojira user and give it permission for repo\n</code></pre> koji add-user koji/kojira koji grant-permission repo koji/kojira <pre><code>* Edit **/etc/kojira/kojira.conf** as following:\n</code></pre> [kojira]</p> <p>server=https://koji.gnulab.org/kojihub topdir=/mnt/koji logfile=/var/log/kojira.log principal = koji/kojira@GNULAB.ORG keytab = /etc/koji.keytab <pre><code>* Start Kojira service: ```systemctl enable kojira --now```\n\n# Koji bootstrapping\n\nI went with the external repo method to bootstrap the setup, so I added external repos and create the following tags and targets, this work is based on: https://docs.pagure.org/koji/external_repo_server_bootstrap/\n\nOn the main node, run the following:\n* Add your final dist tag: ```koji add-tag dist-rocky8```\n* Create the build tag:\n```koji add-tag --parent dist-rocky8 --arches \"x86_64\" -x mock.yum.module_hotfixes=1 dist-rocky8-build```\n\n* Add the external repos, I hard coded the ARCH, but you can use \\$arch instaed of x86_64 in the repo URL:\n</code></pre> koji add-external-repo -m bare -t dist-rocky8-build centos-8-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os koji add-external-repo -m bare -t dist-rocky8-build centos-8-debuginfo-external http://debuginfo.centos.org/8/\\$arch/ <pre><code>* I also created a small package for centospkg-minimal and srpmproc and create local repo, so adding that too:\n</code></pre> koji add-external-repo -m bare -t dist-rocky8-build centos-8-local-repo-external https://koji.gnulab.org/localrepo/\\$arch/ <pre><code>* Add the targets: ```koji add-target dist-rocky8 dist-rocky8-build dist-rocky8```\n* Create the bootstrapping groups for build and srpm-build\n</code></pre> koji add-group dist-rocky8-build build koji add-group dist-rocky8-build srpm-build <pre><code>* Add the bootstrapping packages:\n</code></pre> koji add-group-pkg dist-rocky8-build build bash buildsys-macros-el8 bzip2 centos-release centpkg-minimal coreutils cpio diffutils findutils gawk gcc gcc-c++ grep gzip info make module-build-macros patch redhat-rpm-config rpm-build scl-utils-build sed shadow-utils tar unzip util-linux which xz git srpmproc koji add-group-pkg dist-rocky8-build srpm-build bash buildsys-macros-el8 centos-release centpkg-minimal git redhat-rpm-config rpm-build scl-utils-build shadow-utils system-release srpmproc <pre><code>* Regenerating the repos ```koji regen-repo dist-rocky8-build```\n\n# Running a test\n\nI ran the following test to build package from git.centos.org:\n\n```koji add-user snagy```\n```koji add-pkg --owner snagy dist-rocky8 python36``` \"need to check if this is needed\"\n</code></pre> koji build dist-rocky8 'git+https://git.centos.org/git/rpms/python36.git?#f900ab6403fbd9c22e59f5d463fee210b3278fb3' ``` *  Results at: https://koji.gnulab.org/koji/taskinfo?taskID=321</p>"},{"location":"archive/legacy/mbs_installation/","title":"Overview","text":"<p>This how-to is WIP and based on https://pagure.io/fm-orchestrator</p> <p>The setup is as follows: * Currently we are testing mbs 2.32 * CentOS-8 installed * Firewall allowing communication between the hosts * Public network for access and private network for koji, psql and kerberos communication between hosts * mbs.gnulab.org/10.10.10.4 hosts mbs and fedmsg * SSL is setup for web facing services using let's encrypt and there is a directory services setup, you need to sort this one out</p>"},{"location":"archive/legacy/mbs_installation/#installing-mbs-and-fedmsg","title":"Installing mbs and fedmsg","text":"<p>!!!THIS IS A QUICK GUIDE FOR TESTING ONLY!!! * Currently we are installing using pip from the source, however the latest version is available at: https://copr.fedorainfracloud.org/coprs/nalika/rockylinux-tools/packages/ * Enable the current temp rockylinux-tools repo by running <code>dnf copr enable nalika/rockylinux-tools</code> * Install the needed packages: <code>dnf install epel-release -y &amp;&amp; dnf install fedmsg python3-gssapi git httpd mod_ssl python3-mod_wsgi python3-solv python3-pungi python3-psycopg2 mod_auth_gssapi -y</code> <pre><code>git clone https://pagure.io/fm-orchestrator.git\ncd fm-orchestrator\ngit checkout v2.32.0\npip3 install .\n</code></pre></p>"},{"location":"archive/legacy/mbs_installation/#starting-fedmsg","title":"Starting fedmsg","text":"<p>We need fedmsg-hub and fedmsg-relay to get things up and running \"as far as I can tell\" but I disable fedora's incoming messages and message signing * Edit /etc/fedmsg.d/endpoints.py and comment out <code>\"tcp://hub.fedoraproject.org:9940\"</code> * Edit /etc/fedmsg.d/module_build_service.py as following \"leave everything else as is\": <pre><code>            # \"tcp://stg.fedoraproject.org:9940\"\n        ]\n    },\n    # Start of code signing configuration\n    'sign_messages': False,\n    'validate_signatures': False,\n</code></pre> * Edit /etc/fedmsg.d/ssl.py and make sure validate_signatures is set to false <pre><code>config = dict(\n    sign_messages=False,\n    validate_signatures=False,\n</code></pre> * Edit /etc/fedmsg.d/base.py and set the <code>topic_prefix=\"org.gnulab\"</code> and <code>environment=\"prod\"</code> * Start fedmsg-hub and fedmsg-relay service <pre><code>systemctl enable fedmsg-hub --now\nsystemctl enable fedmsg-relay --now\n</code></pre></p>"},{"location":"archive/legacy/mbs_installation/#apache-configuration-for-mbs-frontend","title":"Apache configuration for mbs-frontend","text":"<ul> <li>Create a new file /etc/httpd/conf.d/mbs.conf with the following: <pre><code>&lt;IfModule mod_ssl.c&gt;\n&lt;VirtualHost *:443&gt;\n  ServerName mbs.gnulab.org\n  WSGIDaemonProcess mbs user=mbs group=mbs threads=5\n    WSGIScriptAlias / /etc/module-build-service/mbs.wsgi\n  WSGIPassAuthorization on\n    &lt;Directory /etc/module-build-service&gt;\n        WSGIProcessGroup mbs\n        WSGIApplicationGroup %{GLOBAL}\n        Require all granted\n    &lt;/Directory&gt;\n    &lt;Location /&gt;\n        AuthType GSSAPI\n        AuthName \"GSSAPI Single Sign On Login\"\n        GssapiCredStore keytab:/etc/koji.keytab\n        Require valid-user\n    &lt;/Location&gt;\n\n\nSSLCertificateFile /etc/letsencrypt/live/mbs.gnulab.org/fullchain.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/mbs.gnulab.org/privkey.pem\nInclude /etc/letsencrypt/options-ssl-apache.conf\n&lt;/VirtualHost&gt;\n&lt;/IfModule&gt;\n</code></pre></li> <li>Create the wsgi file /etc/module-build-service/mbs.wsgi as follows: <pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\nfrom module_build_service import app as application\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#kerberos-settings","title":"Kerberos settings","text":"<ul> <li>Make sure that /etc/krb5.conf as the correct realm and settings as following: <pre><code># To opt out of the system crypto-policies configuration of krb5, remove the\n# symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.\nincludedir /etc/krb5.conf.d/\n\n[logging]\n    default = FILE:/var/log/krb5libs.log\n    kdc = FILE:/var/log/krb5kdc.log\n    admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    renew_lifetime = 7d\n    forwardable = true\n    rdns = false\n    pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt\n    spake_preauth_groups = edwards25519\n    default_realm = GNULAB.ORG\n    default_ccache_name = KEYRING:persistent:%{uid}\n\n[realms]\n GNULAB.ORG = {\n     kdc = koji.gnulab.org\n     admin_server = koji.gnulab.org\n }\n\n[domain_realm]\n .gnulab.org = GNULAB.ORG\n gnulab.org = GNULAB.ORG\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#general-mbss-setup","title":"General mbs's setup","text":"<ul> <li>Create mbs user and set a password for it as following: <pre><code>useradd mbs\npasswd mbs\n</code></pre></li> <li>Fix the permissions for /etc/module-build-service/ to mbs: <code>chown -R mbs:mbs /etc/module-build-service/</code></li> </ul>"},{"location":"archive/legacy/mbs_installation/#postgresql-configuration","title":"Postgresql configuration","text":"<p>I am using the same database server for koji which is hosted on koji.gnulab.org * Create the required access by editing /var/lib/pgsql/data/pg_hba.conf as the following: <pre><code># IPv4 local connections:\nhost    mbs             mbs             10.10.10.4/32           md5\nhost    all             all             127.0.0.1/32            ident\n</code></pre> * Edit /var/lib/pgsql/data/postgresql.conf to allow listening on network <code>listen_addresses = 'localhost,10.10.10.2'</code> * Create mbs pgsql user and database <pre><code>createuser --no-superuser --no-createrole --no-createdb mbs\ncreatedb -O mbs mbs\npsql  -c \"alter user mbs with encrypted password 'mysupersecretepasswordmbs';\"\n</code></pre> * Restart pgsql <code>systemctl restart postgresql</code></p>"},{"location":"archive/legacy/mbs_installation/#mbs-configuration","title":"mbs configuration","text":"<ul> <li>Edit /etc/module-build-service/koji.conf as the follows: <pre><code>[koji]\n\n;configuration for koji cli tool\n\n;url of XMLRPC server\nserver = https://koji.gnulab.org/kojihub\n\n;url of web interface\nweburl = https://koji.gnulab.org/koji\n\n;url of package download site\ntopurl = https://koji.gnulab.org/\nauthtype = kerberos\nkrb_rdns = false\nuse_fast_upload = true\n\n[staging]\nserver = https://koji.gnulab.org/kojihub\nweburl = https://koji.gnulab.org/koji\ntopurl = https://koji.gnulab.org/\nauthtype = kerberos\nkrb_rdns = false\nuse_fast_upload = true\n</code></pre></li> <li>Edit /etc/module-build-service/config.py as follows: <pre><code># -*- coding: utf-8 -*-\n# SPDX-License-Identifier: MIT\nfrom os import environ, path\n\n# FIXME: workaround for this moment till confdir, dbdir (installdir etc.) are\n# declared properly somewhere/somehow\nconfdir = path.abspath(path.dirname(__file__))\n# use parent dir as dbdir else fallback to current dir\ndbdir = path.abspath(path.join(confdir, \"..\")) if confdir.endswith(\"conf\") else confdir\n\n\nclass ProdConfiguration(object):\n    DEBUG = True\n    # Make this random (used to generate session keys)\n    SECRET_KEY = \"74d9e9f9cd40e66fc6c4c2e9987dce48df3ce98542529126\"\n    #SQLALCHEMY_DATABASE_URI = \"sqlite:///{0}\".format(path.join(dbdir, \"module_build_service.db\"))\n    SQLALCHEMY_DATABASE_URI = 'postgresql://mbs:mysupersecretepasswordmbs@koji.gnulab.org/mbs'\n    SQLALCHEMY_TRACK_MODIFICATIONS = True\n    # Where we should run when running \"manage.py run\" directly.\n    HOST = \"0.0.0.0\"\n    PORT = 5000\n\n    # Global network-related values, in seconds\n    NET_TIMEOUT = 120\n    NET_RETRY_INTERVAL = 30\n\n    #DISTGITS = {\"git+https://git.centos.org\": (\"git clone {repo_path}\", \"get_sources.sh\")}\n    SYSTEM = \"koji\"\n    MESSAGING = \"fedmsg\"  # or amq\n    MESSAGING_TOPIC_PREFIX = [\"org.gnulab.prod\"]\n    KOJI_CONFIG = \"/etc/module-build-service/koji.conf\"\n    KOJI_PROFILE = \"koji\"\n    ARCHES = [\"x86_64\"]\n    ALLOW_ARCH_OVERRIDE = False\n    KOJI_REPOSITORY_URL = \"https://koji.gnulab.org/kojifiles/repos\"\n    KOJI_TAG_PREFIXES = [\"module\", \"scrmod\"]\n    KOJI_ENABLE_CONTENT_GENERATOR = True\n    CHECK_FOR_EOL = False\n    PDC_URL = \"https://pdc.fedoraproject.org/rest_api/v1\"\n    PDC_INSECURE = False\n    PDC_DEVELOP = True\n    SCMURLS = [\"git+https://git.centos.org/\", \"https://git.centos.org/\"]\n    YAML_SUBMIT_ALLOWED = False\n\n    # How often should we resort to polling, in seconds\n    # Set to zero to disable polling\n    POLLING_INTERVAL = 600\n\n    # Determines how many builds that can be submitted to the builder\n    # and be in the build state at a time. Set this to 0 for no restrictions\n    NUM_CONCURRENT_BUILDS = 5\n\n    ALLOW_CUSTOM_SCMURLS = False\n\n    RPMS_DEFAULT_REPOSITORY = \"git+https://git.centos.org/rpms/\"\n    RPMS_ALLOW_REPOSITORY = False\n    #RPMS_DEFAULT_CACHE = \"http://pkgs.fedoraproject.org/repo/pkgs/\"\n    RPMS_ALLOW_CACHE = False\n\n    MODULES_DEFAULT_REPOSITORY = \"git+https://git.centos.org/modules/\"\n    MODULES_ALLOW_REPOSITORY = False\n    MODULES_ALLOW_SCRATCH = True\n    ALLOW_ONLY_COMPATIBLE_BASE_MODULES = True\n\n\n    ALLOWED_GROUPS_TO_IMPORT_MODULE = set()\n\n    # Available backends are: console and file\n    LOG_BACKEND = \"file\"\n\n    # Path to log file when LOG_BACKEND is set to \"file\".\n    LOG_FILE = \"/tmp/module_build_service.log\"\n\n    # Available log levels are: debug, info, warn, error.\n    LOG_LEVEL = \"debug\"\n\n    # Allow stream override\n    ALLOW_STREAM_OVERRIDE_FROM_SCM = True\n\n    # Settings for Kerberos\n    KRB_KEYTAB = \"/etc/mbs.keytab\"\n    KRB_PRINCIPAL = \"mbs@GNULAB.ORG\"\n\n    # AMQ prefixed variables are required only while using 'amq' as messaging backend\n    # Addresses to listen to\n    AMQ_RECV_ADDRESSES = [\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.koji\",\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.module_build_service\",\n    ]\n    # Address for sending messages\n    AMQ_DEST_ADDRESS = \\\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.module_build_service\"\n    AMQ_CERT_FILE = \"/etc/module_build_service/msg-m8y-client.crt\"\n    AMQ_PRIVATE_KEY_FILE = \"/etc/module_build_service/msg-m8y-client.key\"\n    AMQ_TRUSTED_CERT_FILE = \"/etc/module_build_service/Root-CA.crt\"\n\n    # Disable Client Authorization\n    NO_AUTH = False\n    AUTH_METHOD = \"kerberos\"\n    LDAP_URI = \"ldap://koji.gnulab.org\"\n    LDAP_GROUPS_DN = \"ou=group,dc=gnulab,dc=org\"\n    ADMIN_GROUPS = {\"packageradmin\"}\n    ALLOWED_GROUPS = {\"packager\"}\n    KOJI_CG_DEVEL_MODULE = True\n    KOJI_PROXYUSER = True\n    REBUILD_STRATEGY = 'only-changed'\n    REBUILD_STRATEGY_ALLOW_OVERRIDE = True\n    KOJI_CG_BUILD_TAG_TEMPLATE = \"{}-modular-updates-candidate\"\n    KOJI_CG_DEFAULT_BUILD_TAG = \"modular-updates-candidate\"\n    # Extra options set for newly created Koji tags\n    KOJI_TAG_EXTRA_OPTS = {\n        \"mock.package_manager\": \"dnf\",\n        # This is needed to include all the Koji builds (and therefore\n        # all the packages) from all inherited tags into this tag.\n        # See https://pagure.io/koji/issue/588 and\n        # https://pagure.io/fm-orchestrator/issue/660 for background.\n        \"repo_include_all\": True,\n        # Has been requested by Fedora infra in\n        # https://pagure.io/fedora-infrastructure/issue/7620.\n        # Disables systemd-nspawn for chroot.\n        \"mock.new_chroot\": 0,\n        # Works around fail-safe mechanism added in DNF 4.2.7\n        # https://pagure.io/fedora-infrastructure/issue/8410\n        \"mock.yum.module_hotfixes\": 1,\n    }\n    # DEFAULT_DIST_TAG_PREFIX = 'module_'\n</code></pre></li> <li>Create the logging file /tmp/module_build_service.log and set the correct permission: <pre><code>touch /tmp/module_build_service.log\nchown mbs:fedmsg /tmp/module_build_service.log\nchmod 664 /tmp/module_build_service.log\n</code></pre></li> <li>Restart services : <pre><code>systemctl restart fedmsg-hub\nsystemctl restart fedmsg-relay\nsystemctl restart httpd\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#testing-the-module-build-service","title":"Testing the module build service","text":"<p>We will need to create a few tags for this to work, so on the koji admin machine, run the following commands: * Creating tags: <pre><code>koji add-tag module-centos-8.2.0-build\nkoji add-tag module-centos-8.3.0-build\n</code></pre> * Adding the external mirrors for the build tags: <pre><code>koji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-sheriflocalrepo-external https://koji.gnulab.org/localrepo/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-sheriflocalrepo-external https://koji.gnulab.org/localrepo/\\$arch/\n</code></pre> * Add mbs user: <pre><code>koji add-user mbs\n</code></pre> * Fix the content generating for koji On Koji server, run the follwing commands <pre><code>koji call addBType module\nkoji grant-cg-access mbs module-build-service --new\n</code></pre></p> <p>Now, on mbs server, we will need to do the following: * Upgrade mbs db <code>mbs-manager db upgrade`` * Download the platform modules</code>git clone https://git.centos.org/modules/platform<code>* Switch to the needed branche and loading it <pre><code>git branch -a\ngit checkout c8-stream-el8.2.0\nmbs-manager import_module platform.yaml\ngit checkout c8-stream-el8.3.0\nmbs-manager import_module platform.yaml\n</code></pre> * Create the module build json file, for example **redis.json** <pre><code>  {\n    \"scmurl\": \"https://git.centos.org/modules/redis.git?#f042b198bcbc0fe410be219f27cd041deea7bcc3\",\n    \"branch\": \"c8-stream-5\"\n  }\n</code></pre> * Generate your kerberos ticket</code>kinit snagy<code>* Submit the job</code> curl -X POST -H \"Content-Type: application/json\" -u : --negotiate -d @redis.json https://mbs.gnulab.org/module-build-service/1/module-builds/``` * Check Tasks on koji</p>"},{"location":"archive/legacy/mock_building_guide/","title":"Mock building guide","text":""},{"location":"archive/legacy/mock_building_guide/#title-build-order-effort-how-to-help","title":"title: Build Order Effort:  How to Help","text":"<p>If you're interested in helping with Rocky Linux packaging effort, we could use you!  One of the critical things we need done is to figure out which order the packages need to be built, and determine any outside/external build dependencies.  Read more to see what we mean:</p>"},{"location":"archive/legacy/mock_building_guide/#what-needs-to-be-done","title":"What Needs to be Done?","text":"<p>Many source packages in RHEL/CentOS will not build properly by themselves.  Often, you need some RPMs produced from other packages built first, and available as dependencies.</p> <p>Our Mission: is to help the release engineering team by identifying these chains of dependencies, and figuring out which order we need to build things in.  Additionally, we need to identify any external dependencies that the package builds require.  All of this information must be documented so we can build the initial version of Rocky Linux (Based on RHEL/CentOS 8.3).</p> <p>We are building a complete copy of CentOS 8.3 (from the CentOS repositories) and taking notes on it.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#types-of-package-dependenciesfailures","title":"Types of Package Dependencies/Failures","text":"<p>1:  Devel dependencies within the distro</p> <p>These dependencies (often in the form of \"-devel\" RPMs) are not available in the regular CentOS repositories (BaseOS, AppStream, PowerTools), but must be produced by first building other packages.  For example, the package curl requires libmetalink-devel to build properly.   The libmetalink-devel RPM is not available in the default repositories, you must produce it by taking the libmetalink source RPM and compiling it. </p> <p>2:  Dependencies outside the distro</p> <p>Some packages require packages at build-time which are not in the CentOS/RHEL repositories at all.  These must be identified, compiled to RPMs, and made available to our build process.  Fortunately, these \"external\" dependencies are all located at https://git.centos.org .  They can be checked out with the proper branch and compiled to SRPMs and then RPMs. </p> <p>3:  Build time failures</p> <p>Some packages just fail to build for other reasons when using the default Mock build settings.   We must investigate these failures and figure out workarounds.  And most importantly, take notes on how we solved the issues.</p> <p>For example, some RPMs related to the Java maven tool will refuse to build without a <code>/etc/maven.conf</code> file present.  We can set our Mock tool up to create a blank maven.conf and work around this requirement.  We need to make a note of this, because it's something extra that needs to be done in order for the build to succeed.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#how-do-we-do-this","title":"How do we do this?","text":"<p>Building RPM packages in the modern era is done via the mock build tool.   ( https://github.com/rpm-software-management/mock )  Mock creates a blank chroot and installs a minimal system inside it.  It then builds the source RPMs via classic rpmbuild tool inside the chroot.</p> <p>This guarantees that only the packages that are actually required for the build process are present, and no extra dependencies accidentally creep in.</p>"},{"location":"archive/legacy/mock_building_guide/#using-and-installing-mock","title":"Using and Installing Mock","text":"<p>Mock is a simple tool written in Python, and is widely available.  It's in the EPEL repo under CentOS/RHEL 8, and is even available in some Debian based distros.  We are using Mock version 2.6 (default in EPEL 8) for our research builds here.</p> <p>Mock is easy to use: <code>mock -r /etc/mock/myconfig.cfg  --nocheck   --resultdir=/path/to/results    curl-7.61.1-14.el8.1.src.rpm</code></p> <p>The mock configuration lets you specify what gets put in your minimal chroot, and what repositories DNF will use when setting up the build.  Fortunately, we have a standardized mock config you can download and use yourself (linked below), so you don't have to go through and set everything up yourself.</p> <p>Log files will be written to your results path during the build.  If the build was successful, the resulting RPMs will also be present there.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#reading-mock-output","title":"Reading Mock Output","text":"<p>Mock produces log files with standard/consistent names during each build.  The most important ones that we care about are: root.log and build.log.</p> <p>Root.log details the process that was used to set up the chroot environment.  It shows what commands were issued, and especially what packages were installed.  A missing dependency will usually show up here, when mock will attempt to dnf install a dependency and not find it.</p> <p>Build.log details the actual package build process.  This includes the compilation step(s) for whatever langauge the packaged software was written in (C, C++, Java, Rust, etc.).  It also includes any other steps/scripts outlined in the .spec file that get performed.  Build failures that don't involve dependencies usually show up in here.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#links-and-next-steps-how-to-start-helping","title":"Links and Next Steps (How to Start Helping!)","text":"<p>We are tracking the results of this effort on the Wiki.  If you click \"Browse\" in the top left, and navigate to Development -&gt; Build_Order , you'll see many pages that refer to \"Build passes\".</p> <p>A build pass is very simple:</p> <ol> <li>Use mock to attempt to build all ~3000 packages in CentOS, using only the default BaseOS, AppStream, and PowerTools repositories.</li> <li>Record which packages passed, and which ones failed to build.  As well as what RPM files were produced from doing the build pass. (this is what is in those wiki pages)</li> <li>Take the produced RPMs and add them to repositories, so the next build pass can use them as dependencies.</li> <li>DO IT AGAIN! (and again, and again...)</li> <li>Once we've built everything, we will use these pages as a reference.  We now know what order we need to feed these</li> </ol> <p>Fortunately, Skip Grube has a server and is executing these build passes.  We need help troubleshooting individual packages.  Read on...</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#where-we-need-help","title":"Where we need help:","text":"<p>We've done enough build passes now that we have most (but not all) of the dependencies lined up in order.  We need to investigate the remaining failed packages and determine why they are failing.</p> <p>We must answer questions like: Is the package failing because it needs a dependency?  Is it external, or will it be automatically produced in one of the build passes?  Is it failing because of some other error?</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#how-you-can-help-exactly-with-links","title":"How you can help exactly (with links!):","text":"<p>Step 0: Get familiar with the Mock build tool and its configuration.  Learn how to build SRPMs, and how to check out branches from git.centos.org, turn them into SRPMs, and compile them with Mock. </p> <p>Step 1: The latest build pass (as of this document) is #10.  So here are the build failures: https://wiki.rockylinux.org/en/team/development/Build_Order/Build_Pass_10_Failure</p> <p>Pick one to investigate, and make sure it's NOT on this list of packages we have already solved: https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking </p> <p>Step 2: You can view the Mock build logs for that failed package under here:  https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/ (sorted by repo and package name). </p> <p>Step 3: Once you've investigated the log(s), try to build the package yourself, in your own mock.  Our exact Mock configurations are available here: https://rocky.lowend.ninja/RockyDevel/mock_configs/ (sorted by build pass number), and SRPMs are available from CentOS here: https://vault.centos.org/8.3.2011/ (sorted by repo) </p> <p>Step 4: This is the tricky part, and involves troubleshooting skills.  Why exactly is the package failing?  How do you get the build to succeed?  This may involve hunting dependencies, fiddling with the .spec file in the SRPM, or playing with mock options. </p> <p>Step 5: If you solve one, please TELL US ABOUT IT!  Hop over to chat.rockylinux.org .  We hang out in the #Dev/Packaging channel, and are always listening!  Ping @Skip Grube  or  @Michael Young and let us know how you fixed it!  We'll add it to our knowledge base as soon as we can, and thanks!</p>"},{"location":"archive/legacy/modularity/","title":"Modularity","text":"<p>There are some packages that utilise a functionality called streams. Modularity makes it possible to have multiple versions of the same package in the same repository and enables version switching. To be able to build module packages, we are using something called <code>Module Build Service</code>, <code>MBS</code> for short. It is also called <code>fm-orchestrator</code>.</p> <p>Packages that have modular entries should not be built directly from their <code>dist/</code> repository as that will not tag that package correctly as a stream.</p> <p>The correct <code>{name}.yaml</code> file is generated during import with <code>srpmproc</code> and is derived from <code>SOURCES/modulemd.src.txt</code>.</p>"},{"location":"archive/legacy/modularity/#koji-setup","title":"Koji setup","text":"<p>MBS should be able to use content generators so Koji can manage artifacts. To enable content generation run the following queries against the database: <pre><code>insert into content_generator (name) values ('module-build-service');\ninsert into btype (name) values ('module');\n</code></pre></p> <p>Grant the <code>mbs</code> user on koji <code>cg-access</code> with: <pre><code>koji grant-cg-access mbs module-build-service\n</code></pre></p> <p>Also create a tag named <code>modular-updates-candidate</code> with: <pre><code>koji add-tag modular-updates-candidate\n</code></pre></p> <p>Modular packages should be added to this tag.</p>"},{"location":"archive/legacy/modularity/#mbs","title":"MBS","text":"<p>Latest MBS version is required. Version 2.32 lacks the <code>mock.yum.module_hotfixes=1</code> flag on the tags and DNF fail-safe mechanisms break the build.</p> <p>More info on Modularity here and how we utilise MBS</p>"},{"location":"archive/legacy/module_build_order/","title":"Module Build Order","text":"<p>Analysis of when to build the various modules:</p> <p>Modules consist of packages, some which require building non-modular packages (or even other modules) first. This is an attempt to group modules with a build order list, to ensure all the packages in a given stream will build.</p> <p></p> <p>Methodology: This list is produced by comparing a list of raw packages in a module, and the lists of succeeding packages in the build order pass lists.</p> <p>When all the packages in a module complete their build, we take a note of the last/latest package to build, and which build pass that was.</p> <p>The module should be built with the packages in that build pass, as that is when all packages are guaranteed to complete. (all dependencies fulfilled)</p> <p></p>"},{"location":"archive/legacy/module_build_order/#module-build-order-list","title":"Module Build Order List","text":"<p>(These modules have all their packages building successfully, and they will build properly in the listed build pass/batch)</p> <p>Build Pass 1: - 389-ds : 1 - freeradius : 1 - go-toolset : 1 - httpd : 1 - mailman : 1 - mercurial : 1 - perl-App-cpanminus : 1 - perl-DBD-MySQL : 1 - perl-DBD-Pg : 1 - perl-DBD-SQLite : 1 - perl-DBI : 1 - perl-FCGI : 1 - perl-YAML : 1 - php : 1 - python36 : 1 - redis : 1 - squid : 1 </p> <p>Build Pass 2: - inkscape : 2 - javapackages-runtime : 2</p> <p></p> <p>Build Pass 3: - gimp : 3</p> <p></p> <p>Build Pass 4: - ant : 4 - mod-auth-openidc : 4 - postgresql : 4</p> <p></p> <p>Build Pass 6: - mariadb : 6</p> <p></p> <p>Build Pass 9: - mysql : 9 - parfait : 9 - perl-IO-Socket-SSL : 9 - perl-libwww-perl : 9</p> <p></p>"},{"location":"archive/legacy/module_build_order/#unsure-modules","title":"Unsure Modules","text":"<p>(These modules still have packages failing, so we are not 100% sure which build pass they should go in) <pre><code>container-tools : unsure\nidm  : 6...?\njavapackages-tools : 9+\njmc : 9+\nllvm-libs : 1, but i686 packages failed (should be ok w/ MBS?)\nmaven : 9+\nnginx : 2?  (only 1 version not building)\nnodejs : almost nothing built yet\nperl : 10+ (most built by 9)\npki-core : 8+ (just a few failing)\npki-deps : 10+ (just a few failing)\npython27 : 4 (just a couple docs pkgs missing)\npython38-devel : 1 (1 pkg failing)\npython38 : 2 (1 pkg failing)\nrhncfg : ?\nruby : ?\nsatellite-5-client : ?\nscala : 10+ (1 pkg failing)\nswig : ?\nvirt-devel : 10+ (1 pkg failing)\n</code></pre></p> <p></p>"},{"location":"archive/legacy/module_build_order/#broken-modules","title":"Broken Modules","text":"<p>(These modules have NO packages completing their build, or very few.  They require more investigation) <pre><code>389-directory-server : N/A (investigate?)\navocado : N/A (?)\ncobbler : N/A\ndwm\nlibselinux-python.txt\nlibuv\nmariadb-devel (?)\nnextcloud\nrust-toolset\nsubversion\nvarnish\nzabbix\n</code></pre></p>"},{"location":"archive/legacy/mqtt_bus/","title":"CentOS MQTT message bus","text":"<p>Danger</p> <p>As of 2023-06-21, updates are no longer published to git.centos.org. This page will eventually be replaced with documentation on the Fedora MessageBus which contains the events for publishing into gitlab.com/redhat/centos-stream, and how we have implemented inside our build system.</p> <p>As such, the information below should be considered historical and may move to the Archive at some time in the future. Proceed with caution.</p> <p>CentOS provides a message bus which can be used for subscribing to certain messages on their git repository.</p> <p>More information, and setup on subscribing to their message bus can be found at https://wiki.centos.org/Sources?highlight=%28mqtt%29#Message_Broker_.28MQTT.29.</p>"},{"location":"archive/legacy/mqtt_bus/#example-message","title":"Example message","text":"<pre><code>git.centos.org/git.receive\n{\n  \"forced\": false,\n  \"agent\": \"pgreco\",\n  \"repo\": {\n    \"custom_keys\": [],\n    \"name\": \"kernel\",\n    \"parent\": null,\n    \"date_modified\": \"1553617543\",\n    \"access_users\": {\n      \"owner\": [\n        \"centosrcm\"\n      ],\n      \"admin\": [],\n      \"ticket\": [],\n      \"commit\": []\n    },\n    \"namespace\": \"rpms\",\n    \"priorities\": {},\n    \"close_status\": [],\n    \"access_groups\": {\n      \"admin\": [],\n      \"commit\": [],\n      \"ticket\": []\n    },\n    \"milestones\": {},\n    \"user\": {\n      \"fullname\": \"CentOS Sources\",\n      \"name\": \"centosrcm\"\n    },\n    \"date_created\": \"1553617543\",\n    \"fullname\": \"rpms/kernel\",\n    \"url_path\": \"rpms/kernel\",\n    \"id\": 918,\n    \"tags\": [],\n    \"description\": \" The Linux kernel \"\n  },\n  \"old_commit\": \"dbbb1cc79ab5878344c3e3df4b53b7ac7acdddfc\",\n  \"branch\": \"c7-sig-altarch-lts-5-4\",\n  \"authors\": [\n    \"Pablo Greco\"\n  ],\n  \"total_commits\": 1,\n  \"start_commit\": \"b7d48e1265407b755f7827d0245547847cdba375\",\n  \"end_commit\": \"b7d48e1265407b755f7827d0245547847cdba375\"\n}\n</code></pre>"},{"location":"archive/legacy/package_debugging/","title":"How to Help - Getting Started with Package Debugs","text":""},{"location":"archive/legacy/package_debugging/#intro-what-needs-to-be-done","title":"Intro - What needs to be done","text":"<p>The area we need help the most right now, and the easiest way to contribute, is to help troubleshoot failing package builds.</p> <p>We're rebuilding CentOS 8.3 as \"practice\", so we can figure out any issues that crop up with our official Rocky build ahead of time.  We are documenting any errors we find in the packages and how to fix them (to make it build).  This documentation will help our release engineering team when it comes time to do official builds.</p>"},{"location":"archive/legacy/package_debugging/#get-familiar-with-the-mock-build-tool","title":"Get Familiar with the <code>mock</code> build tool:","text":"<p>Check out the wiki on <code>mock</code>'s GitHub repository for some starter information that links out to additional reading at the bottom.</p> <p>The biggest and most relevant technical/intro page for our package debugging effort can be found on our Mock Building Guide here on the wiki.</p> <p>We are using the <code>mock</code> program to perform our builds, just like the real Rocky infrastructure will.  You should install it and get very used to it. Please use this guide to get started, and explain a bit about what we hope to achieve and why we have to build all these packages in a specific order.</p> <p>Please read those carefully, and maybe dip your toe in the water by feeding your mock an SRPM or 2 and compiling some things.</p> <p>Mock is really great, as it's an easy-to-call program that constructs an entire system inside a chroot to perform the build, then cleans it up afterwards.</p> <p>If you'd like a reference for Mock config files to look at or play with, there are some published here (that correspond with the \"Build Passes\" being done to test package builds). More information about the passes can be found here on the wiki at: <code>/team/development/Build_Order/Build_Pass_{1..X}_{Artifacts,Failure,RPMs,Successful}</code> ... (which will definitely be cleaned up later, we just want to avoid breaking any existing links at such a critical juncture).</p> <p>Once you're familiar with <code>mock</code> (and especially digging through its output logs), we have a list of failing packages that we need to investigate and come up with explanations and/or fixes for.</p>"},{"location":"archive/legacy/package_debugging/#helping-with-the-debug-effort","title":"Helping with the debug effort:","text":"<p>Once you are familiar with Mock, and especially with debugging its output, you can begin looking at failing packages. Some of this information is also on the Mock Build Howto page.</p> <ol> <li> <p>Find a failing package on the newest build pass failures page (currently Build Pass 10).</p> </li> <li> <p>Make sure the package hasn't already been looked at and/or fixed:  https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking</p> </li> <li> <p>Let other debuggers know what you're working on!  We don't want to duplicate effort.  Hop on the ~Dev/Packaging channel on mattermost!</p> </li> <li> <p>Set your mock program up with the most recent configs that we are using.  You can use it to attempt the build in the same way as we do (with external dependencies, extra repos, etc.)</p> </li> <li> <p>Investigate the error(s):  You can use your own mock, as well as the log files from when the build failed, located here:  https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/</p> </li> <li> <p>Figure out what's going on, and how to fix it.  It may take the form of special mock settings, or a patch added to the program + specfile.  Report your findings to the ~Dev/Packaging channel, and someone will record them on the Wiki Package_Error_Tracking page page.</p> </li> <li> <p>The idea is to shrink the Build Failures, and grow the Package_Error_Tracking page.  If necessary, we will commit build fixes to our patch repo for the different packages.</p> </li> </ol>"},{"location":"archive/legacy/package_error_tracking/","title":"Package Build Issues Tracking","text":"<p>This page is for tracking packages that are failing in the Rocky Linux Koji build system (dev/staging): https://kojidev.rockylinux.org .</p> <p>There are 2 tables.  The upper one is for packages currently under investigation.  The lower table is for packages that have been \"solved\".</p> <p>A package must be successfully built in Koji before it can be moved to the \"solved\" table.  This is to prevent confusion about potential fixes.  Koji is the ultimate arbiter of whether a package has been fixed or not.</p> <p>Note: the old package error tracking page centered around Skip G.'s CentOS \"practice builds\" is still available if you need to look at its notes: https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking_older</p> <p></p>"},{"location":"archive/legacy/package_error_tracking/#methodology","title":"Methodology","text":"<p>The builds being done on kojidev are quite literally real-time progress as the Rocky Linux project races towards a beta release.</p> <p>To get there, we need to ensure that all of our packages build successfully.  Koji has a list of builds that have failed here:  https://kojidev.rockylinux.org/koji/builds?state=3&amp;order=-build_id  (You can also go to Koji, click on builds, and select \"State: Failed\" from the drop-down menu)</p> <p>You can select a package from the failing list that interests you, then click the \"task\" link that takes you to the failing details page, then click the failing part of the \"Descendants\" list.</p> <p>Now you can see the raw Mock build logs from the official build, and investigate. (root.log and build.log are usually the most interesting for debug purposes)  See if you can get the build to work on your system with Mock, and take notes on how you did it (patch, needs a dependency or different version of dependency, etc.)  When you have results, go back to the Dev/Packaging channel on chat.rockylinux.org , and report your findings.  Someone will update this page with the findings.</p> <p>It goes without saying that the more you know about using the Mock build tool, and the RPM package compilation process in general, the better you'll be able to help.  If you need more information about how to build/troubleshoot RPM packages for Rocky Linux, you'll probably want to start with our how to help guide (and read the other guides/material linked from there): https://wiki.rockylinux.org/en/team/development/Packaging_How_to_Help .</p> <p></p>"},{"location":"archive/legacy/package_error_tracking/#communication","title":"Communication","text":"<p>Most coordination of these efforts is done over the Mattermost packaging chat channel. (https://chat.rockylinux.org/rocky-linux/channels/dev-packaging , or if you prefer IRC: #rockylinux-devel-packaging on Freenode)</p> <p>If you're looking at a failing package, please tell everyone there!  That way we can avoid duplication of effort.  When you have a fix, or have discovered information that will help, someone with Wiki access will be happy to take your findings and publish them here.</p> <p> </p>"},{"location":"archive/legacy/package_error_tracking/#packages-being-investigated","title":"Packages Being Investigated:","text":"<p>This is a list of failing builds from kojidev.rockylinux.org that have been looked at, and notes added.</p> <p>This list is not grouped according to repo.</p> Package Notes bolt-0.9-1.el8 Using simple mock chroot (<code>isolation=simple</code>) solves permission issues, but there are still 2 tests that fail with signal 5 (SIGTRAP).  Investigation still ongoing graphviz-2.40.1-40 Fixed if <code>module_hotfixes=1</code> is turned off.  It pulls in the latest Ruby 2.7 and not the default Ruby 2.5 stream, which breaks the build marisa Probably caused by module_hotfixes being on. (Succeeded locally for Leigh + tjyang.  More investigation...?) python-requests Missing dependency 'python3-pytest-mock' (Succeeded locally for Leigh + tjyang.  More investigation...?) python-psycopg2 Failed locally also.  https://bugzilla.redhat.com/show_bug.cgi?id=1909674  Possible patch required?  https://src.fedoraproject.org/rpms/python-psycopg2/c/89f4b65570783ea763c37311e974296d3ff40d90?branch=master scrub <code>x86_64 passed</code>, aarch64 failed on tests (Succeeded locally for Leigh + tjyang.  More investigation...?) uglify-js Fixed if <code>module_hotfixes=1</code>. Fails when \u2018module_hotfixes\u2019 is enabled. This is caused by newer versions of NodeJS. Found a patch that is in newer versions of uglify-js which fixes this for any version of NodeJS.(Succeeded locally for Leigh + tjyang.  More investigation...?) <p> </p>"},{"location":"archive/legacy/package_error_tracking/#packages-that-have-been-fixed","title":"Packages that have been fixed:","text":"<p>These packages have been successfully built in Koji after investigation.  They are cut/pasted down here from the upper list once they succeed in Koji.  We are keeping their notes here intact in case of future issues.</p> Package Notes"},{"location":"archive/legacy/package_error_tracking_older/","title":"Package Build Issues Tracking","text":"<p>NOTE: This page is deprecated, and refers to Skip's CentOS 8.3 \"practice\" build.  It is being kept as a reference in case there are similar issues with the listed packages.</p> <p>The actual build is in progress, and Koji build errors are tracked on the main error tracking page: https://wiki.rockylinux.org/e/en/team/development/Package_Error_Tracking</p> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#_1","title":"Package Build Issues Tracking","text":"<p>This page details packages that have failed to build, or which something \"special\" had to be done to achieve a build.</p> <p>For example, a package which fails when building with the newest version of a dependency, and requires the forced-downgrade to the older build dependency would go here.</p> <p>This page is NOT for dependency issues, or tracking which order to build dependent packages in.  That information is being tracked under Development/Build_Order/ in this wiki.</p>"},{"location":"archive/legacy/package_error_tracking_older/#repositoriesbuilds","title":"Repositories/Builds","text":"<p>This page tracks build failures from these sources:</p> <ul> <li>CentOS BaseOS</li> <li>CentOS AppStream</li> <li>CentOS PowerTools</li> <li>External Dependencies</li> </ul> <p>\"External Dependencies\" means packages that are downloaded and built from git.centos.org , and don't belong in an official repository.  Many packages from the official repositories depend on these external dependency packages.</p>"},{"location":"archive/legacy/package_error_tracking_older/#methodology-and-links","title":"Methodology and Links","text":"<p>Right now, build passes are done from CentOS 8.3 SRPMs and Skip's build server: ( https://rocky.lowend.ninja/RockyDevel/ )</p> <p>Official Koji/MBS infrastructure is nearly complete and will of course be the official location for Rocky builds.  This unofficial work is being done to gather information that will help the official build go smoothly.</p> <p>All build \"passes\" are done via Mock, and their results are added to a repository on the build server.  These repositories are available to subsequent builds, so more packages get their dependencies and successfully build.</p>"},{"location":"archive/legacy/package_error_tracking_older/#links","title":"Links:","text":"<ul> <li>Build Result Repositories:  https://rocky.lowend.ninja/RockyDevel/ {BaseOS_final, BaseOS_devel, AppStream_final, AppStream_devel, PowerTools_final, PowerTools_devel, External_Deps}  (Repos are separated into what goes in the official repo, and other build artifacts produced from the build that aren't in the official repo)</li> <li>Mock Configurations:  https://rocky.lowend.ninja/RockyDevel/mock_configs/  - The mock config files used for each Build Pass.</li> <li>Mock Build logs and RPMs: https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/ - Logs and result RPMs from the mock builds.  Separated by repo and package name/version.  Dig into here to find error logs and match them with build results listed in the wiki.</li> <li>Summarized build results: https://rocky.lowend.ninja/RockyDevel/deliverables/ - Results from each build pass.  What new packages succeeded, which ones failed, and what RPM files were created as a result of the build.  This information gets copied to the Wiki under Development/Build_Order/ for easy viewing, but is available in raw form here.</li> </ul>"},{"location":"archive/legacy/package_error_tracking_older/#a-note-on-modularity","title":"A Note on Modularity","text":"<p>The current method for package testing is very simplistic, and doesn't take into account modular-stream packages (new feature in RHEL 8).  While we don't produce modular metadata with this method to create proper modules, it's still possible to compile modular packages and use modular dependencies.</p> <p>Our Mock config uses the option <code>module_hotfixes=1</code> in the DNF repo config files, which causes DNF to consider all packages for build dependencies in Mock, even ones from modules that are not enabled.</p> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#package-build-tips-discovered-so-far","title":"Package Build Tips Discovered so far:","text":"<ul> <li> <p>Perl: Build everything (especially external dependencies!) against the default Perl 5.26 stream, NOT the latest available 5.30 stream.  Perl packages higher up the chain depend on 5.26.</p> </li> <li> <p>Maven:  Create blank maven.conf file : <code>config_opts['files']['/etc/java/maven.conf'] = \" \"</code> by changing mock config.  Maven-related packages have a script that checks for it and will fail if it's not present</p> </li> <li> <p>Various(SystemD): SystemD changed its version string output from a simple \"239\" to a more complicated \"239 (239-41.el8_3.1)\" starting with the listed version.  Breaks several package scripts.</p> </li> <li> <p>javapackages-tools: In order to produce \"maven-local-openjdk8\", you need a specific commit, more info under External Dependencies page.</p> </li> </ul> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#the-new-list","title":"The New List","text":"<p>This is a list of failing builds from kojidev.rockylinux.org that need help.  We're now focusing development efforts on helping the real builds, and not doing \"practice\" builds of CentOS.</p> <p>This list is not grouped according to repo.</p> Package Notes bolt-0.9-1.el8 Using simple mock chroot (<code>isolation=simple</code>) solves permission issues, but there are still 2 tests that fail with signal 5 (SIGTRAP).  Investigation still ongoing graphviz-2.40.1-40 Fixed if <code>module_hotfixes=1</code> is turned off.  It pulls in the latest Ruby 2.7 and not the default Ruby 2.5 stream, which breaks the build marisa Succeeded locally for Leigh + tjyang.  More investigation...? python-requests Succeeded locally for Leigh + tjyang.  More investigation...? python-psycopg2 Failed locally also.  Possible patch required?  https://src.fedoraproject.org/rpms/python-psycopg2/c/89f4b65570783ea763c37311e974296d3ff40d90?branch=master scrub Succeeded locally for Leigh + tjyang.  More investigation...? uglify-js Succeeded locally for Leigh + tjyang.  More investigation...?"},{"location":"archive/legacy/package_error_tracking_older/#the-old-list","title":"The (old) List","text":"<p>The following is a list of the packages we have investigated.  Notes are kept about why they failed, and any workarounds used to build them successfully.  Expect this to get updated as we gather more information!</p> <p>CentOS 8 BaseOS Repository:</p> Package Notes ~~efibootmgr-16-1.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/efibootmgr~~ ~~fwupdate-11-3.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/fwupdate~~ ~~libkcapi-1.2.0-2.el8~~ ~~Will not build in the default Mock systemd-nspawn container.  MUST use <code>mock --isolation=simple</code> option to build in traditional chroot~~ ~~libusbx-1.0.23-4.el8~~ ~~Patch: https://github.com/elguero/centos8-libusbx/commit/daaad4ad85e7306ad0f111558bb143a2e9700b6d (mock should already have git-core available~~ ~~python-cffi-1.11.5-5.el8~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~tpm2-abrmd-2.1.1-3.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/tpm2-abrmd~~ <p></p> <p>CentOS 8 AppStream Repository:</p> Package Notes ~~abattis-cantarell-fonts-0.0.25-4.el8~~ ~~Patched fontforge to fix segfault issue.  Builds fine using the patched fontforge in its BuildRequires~~ ~~apache-commons-logging-1.2-13.module_el8.0.0+39+6a9b6e22~~ ~~Needs to be built <code>--without avalon</code>~~ ~~brltty-5.6-28.el8~~ ~~Needs patch to change location of asoundlib.h in newer version of alsa. https://github.com/sjpp/centos8-brltty/commit/388ddcf6493d50ce34542c8badb1a54a9f811950 (see https://bugzilla.redhat.com/show_bug.cgi?id=1716389, https://src.fedoraproject.org/rpms/brltty/c/897ad85a69cd7fb53cabcbac2fbc7c0ca1719da7?branch=master)~~ ~~ceph-12.2.7-9.el8~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~cobbler-2.0.7.1-6.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~cogl-1.22.2-10.el8~~ ~~Fix was committed to Rocky Git. Possible fix: https://github.com/elguero/centos8-cogl/commit/a8b47440f5c7290d96d0b8786f48f323a8a950f9. Got further in the build by force-including these packages in buildroot: <code>libdrm-devel libXxf86vm-devel  mesa-libGL-devel mesa-libEGL-devel xml-common mesa-khr-devel</code> (matches centos koji build).  Still fails though.~~ ~~cyrus-imapd-3.0.7-19.el8~~ ~~Hidden dependencies added to the list, <code>perl-Encode-IMAPUTF7</code>. Will build once dependencies are satisfied.~~ ~~egl-wayland-1.1.4-1.el8~~ ~~We are unable to use the SRPM in vault.centos.org for <code>egl-wayland</code> due to a newer version of <code>mesa-libEGL-devel</code> being present (See https://github.com/NVIDIA/egl-wayland/commit/4a343a4b563e84c6258efbddf1d910f9dd6e0300). Building <code>egl-wayland</code> was resolved by checking out the latest code from git.centos.org (produces same version 1.1.4-1) that now contains a patch to fix this.~~ ~~gegl04-0.4.4-6.el8~~ ~~Need to patch SPEC file. Change <code>BuildRequires: pkgconfig(exiv2) &gt;= 0.25</code> to <code>BuildRequires: compat-exiv2-026</code>.~~ ~~gcc-toolset-9-dyninst~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-9-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-9'</code>~~ ~~gcc-toolset-9-gcc~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-9-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-9'</code>~~ ~~gcc-toolset-10-dyninst~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~gcc-toolset-10-gcc~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~gcc-toolset-10-systemtap~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~google-guice-4.2.2-4.module_el8.~~ With javapackages-tool from branch c8-stream-201902 built without forcing anything into buildroot. ~~Hidden dependency (newer version): <code>objectweb-asm-7</code> added to list 101. Built successfully by forcing <code>plexus-utils-3.3.0-3.el8.noarch objectweb-asm-7.2-2.el8_3.noarch</code> into buildroot, and setting the _without macros found in the maven modules.~~ ~~grafana~~ ~~Tries to download dependencies. No network available in mock (normally unless enabled).  Crossing off list because latest version builds correctly.~~ ~~gstreamer1-plugins-base~~ ~~Dependency: <code>egl-wayland-devel</code>. Already fixed and should build during next pass~~ ~~HdrHistogram-2.1.11-2.module_el8.2.0+460+6583c1d0~~ ~~Hidden dependency: <code>replacer</code>. Already been added and should build in next pass.~~ httpcomponents-client-4.5.5-4.module_el8.0.0+39+6a9b6e22 Built using <code>--without memcached</code> and <code>--without ehcache</code> httpcomponents-client-4.5.10-* Successfully built. Needs <code>mockito-3.1.2-2.el8_3</code> - Added to list 101 (<code>byte-buddy</code> added to list 100, <code>hamcrest</code> added to list 100 and <code>objectweb-asm-7</code> (v7.3) added to list 99) httpcomponents-core-4.4.12-* Successfully built. Needs <code>mockito-3.1.2-2.el8_3</code> - Added to list 101 (<code>byte-buddy</code> added to list 100, <code>hamcrest</code> added to list 100 and <code>objectweb-asm-7</code> (v7.3) added to list 99) ~~istack-commons~~ ~~Dependency: <code>dom4j</code> - Need to get dom4j built.  Also had to force <code>plexus-utils-3.3.0-3.el8.noarch</code> into build root (override version 3.1)~~ ~~jackson-annotations~~ ~~Hidden dependency: <code>jackson-parent</code> (added to list 101)~~ ~~jackson-core~~ ~~Hidden dependency: <code>jackson-bom</code>. (added to list 101)~~ ~~jackson-databind~~ ~~Hidden dependency: <code>jackson-bom</code>. (added to list 101)~~ ~~jackson-jaxrs-providers~~ ~~Hidden dependency: <code>glassfish-jax-rs-api, jackson-bom</code>. (added to list 101)~~ ~~jackson-module-jaxb-annotations~~ ~~Hidden dependency: <code>jackson-parent</code> (added to list 101)~~ ~~jline~~ ~~Needs to be built against <code>jansi-1.17*</code>. Completed build by forcing jansi-1.17 and <code>plexus-utils-3.3.0-3</code> into the buildroot.  Should be ok when the module is built, as it specifies these in modulemd src.~~ ~~jmc~~ ~~Hidden dependency: <code>eclipse-pde</code>, provided by building <code>eclipse</code> which has its long list of hidden dependencies. (added to list 101)~~ ~~jolokia-jvm-agent~~ ~~Hidden dependency: <code>json-simple</code> (added to list 101)~~ ~~jss~~ ~~Patch committed to staging: https://git.rockylinux.org/staging/patch/jss~~ ~~liborcus-0.14.1-1.el8~~ ~~Hidden dependency: <code>mdds-1.4</code> is in branch <code>c8s</code> and is a specific tag, <code>imports/c8s/mdds-1.4.3-1.el8</code> (added to list 101)~~ libreoffice-6.3.6.2-3.el8 Should build once <code>liborcus-0.14-1-1.el8</code> is able to built. See above. ~~libucil~~ ~~Newer <code>alsa-libs</code> has moved the location of <code>asoundlib.h</code>. Patch: https://github.com/elguero/centos8-libucil/commit/cd15a416fc10456bab7a2ae67b2073d4a12a4b8c~~ ~~libvirt-python-4.5.0-2.module_el8.2.0+320+13f867d7~~ ~~Newer version is present.~~ ~~mariadb-java-client-2.2.5~~ ~~Hidden dependency: <code>replacer</code> (added to list 101)~~ ~~maven-3.5.4-5.module_el8.0.0+39+6a9b6e22~~ ~~Built <code>--without logback</code>.  Also disabled module_hotfixes and enabled maven-3.5 module to build.  Should be fine under MBS we think(?)~~ ~~maven-3.6.2-4.module_*~~ ~~Built <code>javapackages-tools</code> from c8-stream-201902 and was able to then build maven. ~~Hidden dependencies: <code>slf4j-sources</code> (artifact of building slf4j), <code>modello</code>, <code>mockito-core</code> (which has dependencies too, <code>byte-buddy</code> (needs <code>objectweb-asm-7</code>) and <code>hamcrest-core</code>), <code>xmlunit</code>.  Needed to disable module_hotfixes and enable maven:3.6 stream in mock, should build automatically using MBS~~ ~~maven-wagon-3.1.0-1.module_el8.0.0+39+6a9b6e22~~ ~~Built <code>--without scm</code> and <code>--without ssh</code>. Dependencies displayed in build pass 10 were not used in koji build which indicates that it was built without them by using these conditionals (https://koji.mbox.centos.org/pkgs/packages/maven-wagon/3.1.0/1.module_el8.0.0+39+6a9b6e22/data/logs/noarch/root.log)~~ ~~mesa-libGLU-9.0.0-15.el8~~ ~~Patch: https://github.com/elguero/centos8-mesa-libGLU/commit/87fc0e63afb3ac0eb65ff480ee6e616979f39927~~ ~~mod_wsgi~~ ~~Need to <code>--define 'python3_pkgversion 38'</code> macro (as specified in python38 module)~~ ~~mutter-3.32.2~~ Needed <code>pkgconfig(wayland-eglstream)</code> .  Appears to work after that is satisfied. ~~numpy-1.14.2-*~~ ~~These are part of the python27 module, and must be built <code>--with python2</code> and <code>--without python3</code> .  Should be fine when the module is built by MBS.~~ perl-File-HomeDir-1.00-14.module_el8.1.0+229+cd132df8 Missing <code>BuildRequires: perl(Module::Install)</code> (maybe ok when built as a module?) perl-JSON-2.97.001-2.el8 ~~Missing <code>BuildRequires: perl-tests</code>~~ No longer able to reproduce error. ~~perl-Module-Build-0.42.29-4.module_el8.3.0+406+78614513~~ ~~Needs <code>--define 'perl_bootstrap 1'</code> to build without the need for dependencies that have been removed from RHEL8~~ ~~perl-URI-1.7~~ ~~Needs <code>--define 'perl_bootstrap 1'</code> to build without the need for dependencies that have been removed from RHEL8~~ ~~pesign~~ ~~https://github.com/elguero/centos8 pesign/commit/8e0b2ac48129cfe51dd1d53531e77dbc34317dc7~~ plexus-containers Built now that javapackages-tool from c8-stream-201902 is present. ~~<code>[ERROR] COMPILATION ERROR : [INFO] ------------------------------------------------------------- [ERROR] /builddir/build/BUILD/plexus-containers-plexus-containers-2.1.0/plexus-component-metadata/src/main/java/org/codehaus/plexus/metadata/ann/AnnReader.java:[38,18] cannot find symbol  symbol:   variable ASM7 location: interface org.objectweb.asm.Opcodes</code>~~ ~~plexus-build-api-0.0.7-20.module_el8.0.0+30+832da3a1~~ ~~Newer version in Git should build properly~~ ~~plexus-interpolation-1.26-3.module_el8.~~ ~~Needs <code>JAVA_HOME</code> set. <code>config_opts['files']['/etc/profile.d/mystuff.sh'] = \"\"\" export JAVA_HOME=/ \"\"\"</code>~~ postgresql-jdbc-42.2.3-* Built fine localy ?? Maybe next build will pass. ~~prometheus-jmx-exporter-0.12.0-5.el8~~ ~~Hidden dependencies: <code>prometheus-simpleclient-java</code> and <code>snakeyaml</code> (added to list 101). <code>snakeyaml</code> depends on <code>base64coder</code> (added to list 100).  Build is successful~~ ~~prometheus-jmx-exporter-0.12.0-5.el8~~ ~~One of the hidden dependencies is <code>snakeyaml</code>. This version depends on <code>snakeyaml 1.26-2</code> which is in branch <code>c8s</code>.~~ ~~python-cups-1.9.72-21.el8.0.1~~ ~~Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~python-systemd~~ ~~Possible fix: https://github.com/elguero/centos8-python-systemd/commit/b015bd9c2673939465162cd8a03003222d00327e   Affected by version string in new Systemd running longer (\"239\" vs. \"239 (239.4-rhel)\"  Reference:  https://github.com/systemd/python-systemd/issues/90~~ ~~pytz-2019.*~~ ~~Need to <code>--define 'python3_pkgversion 38'</code> - part of the python38 module, so should be fine in MBS~~ ~~qt5-qtdoc-5.12.5-1.el8~~ ~~Hidden dependency <code>qt5-qtbase-doc</code>. Build <code>qt5-doc</code> from git.centos.org to satisfy.~~ ~~qt5-qtwayland-5.12.5-1.el8~~ ~~Missing <code>BuildRequires:  libXext-devel</code>. Fixed in git already.~~ ~~rhncfg-5.10.120-10.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~rust-1.41.1-1.module_el8.2.0+322+d7f93ccc~~ ~~Outdated SRPM - use rust-1.47 from CentOS repo (OK, removed from Skip's build server)~~ scipy-1.3.1-4* Need to <code>--define 'python3_pkgversion 38'</code> - otherwise it grabs python3 packages which does not satisfy dependency ~~SLOF~~ ~~Needs to be built for <code>ppc64le</code>. Spec requires that target arch.~~ ~~spacewalk-backend-2.8.48-4.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~spacewalk-usix-2.8.1-5.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~subversion-~~ ~~Needs to be build <code>--without kwallet</code>. CentOS Koji logs shows kwallet is not present.~~ ~~varnish-6.0{2-1, 6-2}.~~ ~~Needs to be built <code>--with python3</code> and <code>--without python2</code>~~ ~~varnish-modules-0.15.0-~~ ~~Needs to be built <code>--with python3</code> and <code>--without python2</code>~~ ~~velocity-1.7-24.module_*~~ ~~Needs to be built <code>_without_hsqldb=1</code>, and point to jdk instead of jre in profile.d: <code>export JAVA_HOME=/usr/lib/jvm/java/</code> .  Both likely work when building the module.~~ ~~xdg-desktop-portal-gtk-1.6.0-1.el8~~ ~~It looks like it succeeded in build pass 10 (dependencies fulfilled)~~ ~~xorg-x11-docs-1.7.1-7.el8~~ ~~Hidden dependency: <code>passivetex</code>, built hidden dependency from branch c8. Dependecy satisfied and built.~~ ~~xorg-x11-server-1.20.{6-3, 8-6, 8-6.1}~~ ~~Dependency on <code>egl-wayland</code>, which is currently failing to build. We are unable to use the SRPM in vault.centos.org for <code>egl-wayland</code> due to a newer version of <code>mesa-libEGL-devel</code> being present (See https://github.com/NVIDIA/egl-wayland/commit/4a343a4b563e84c6258efbddf1d910f9dd6e0300). Building <code>egl-wayland</code> was resolved by checking out the latest code from git.centos.org (produces same version 1.1.4-1) that now contains a patch to fix this. Once <code>egl-wayland</code> was built, <code>egl-wayland-devel</code> is present to satisfy the dependency.~~ <p></p> <p>CentOS 8 PowerTools Repository:</p> Package Notes apache-commons-logging Builds using <code>--without avalon</code> ~~apache-ivy~~ ~~Enabled javapackages-tools-201801 module, and turned on javapackages-tools-201801 macros.  Should build fine with MBS.~~ assertj-core Builds using <code>--without memoryfilesystem</code> bsh Builds when using <code>--without desktop</code> ~~compat-guile18~~ ~~Incorrect syntax for <code>Obsoletes</code> in spec file. Patch: https://github.com/N3WWN/rocky-debranding/tree/master/compat-guile18/ROCKY/CFG~~ dejagnu Hidden dependency: <code>screen</code> (added to list 101) jaxen Built using <code>--without dom4j</code> Note: We have dom4j now in our externals repo and it builds fine with that as well. The original packge was built without dom4j. I would recommend building without dom4j if we want to match the package available from CentOS. maven-doxia Builds using <code>--without itext</code>, <code>--without markdown</code> and <code>--without fop</code> maven-doxia-sitetools Builds using <code>--without markdown</code> and <code>--without fop</code> maven-invoker-plugin Builds using <code>--without groovy</code> maven-plugin-testing Depends on <code>maven-wagon</code> from PowerTools. See below. Built successfully using maven-wagon in local repo with priority over RockyDevExternals maven-script-interpreter Builds using <code>--without groovy</code> maven-wagon Builds using <code>--without scm</code> and <code>--without ssh</code> ~~mingw-cairo~~ ~~Hidden dependencies: <code>mingw-w64-tools , mingw-libxml2</code>~~ ~~mingw-gstreamer1~~ ~~Hidden dependencies: <code>mingw-w64-tools , mingw-libxml2</code>~~ ~~mingw-harfbuzz~~ ~~Hidden dep: <code>mingw-w64-tools</code>~~ ~~mingw-sqlite~~ ~~Hidden dependency: <code>mingw-pdcurses</code>~~ pandoc Need to bootstrap Haskell compiler + dependencies (worked on...) ~~perl-B-Hooks-EndOfScope~~ ~~Hidden dependency: <code>perl-Devel-Hide</code>~~ ~~perl-DateTime-Format-Builder~~ ~~Hidden dependency: <code>perl-DateTime-Format-IBeat</code>~~ ~~perl-DateTime-Locale~~ ~~Hidden dependency: <code>perl-File-ShareDir-Install</code>, <code>perl-Test-File-ShareDir</code>~~ ~~perl-Devel-CheckLib~~ ~~Hidden dependency: <code>perl-IO-CaptureOutput</code>~~ ~~perl-JSON-XS~~ ~~Worked for me with above deps (gmk)~~ ~~perl-MIME-Charset~~ ~~Worked for me with above deps (gmk)~~ ~~perl-Module-Install-ReadmeFromPod~~ ~~Hidden dependency: <code>perl-Module-Install</code>, <code>perl-Module-Install-AuthorRequires</code>, <code>perl-Module-Install-AutoLicense</code>, <code>perl-Test-InDistDir</code>~~ ~~perl-Params-ValidationCompiler~~ ~~Hidden dependency: <code>perl-Test2-Plugin-NoWarnings</code>, <code>perl-Test-Without-Module</code>~~ ~~perl-Readonly~~ ~~Hidden dependency: <code>perl-Module-Build-Tiny</code>, <code>perl-ExtUtils-Config</code>, <code>perl-ExtUtils-Helpers</code>, <code>perl-ExtUtils-InstallPaths</code>~~ ~~perl-Term-Size-Any~~ ~~Worked for me with above deps (gmk)~~ ~~perl-Unicode-EastAsianWidth~~ ~~Hidden dependency: <code>perl-Module-Package</code>, <code>perl-Module-Install-ManifestSkip</code>, <code>perl-Module-Manifest-Skip</code>~~ ~~perl-XML-Twig~~ ~~Hidden dependency: <code>perl-XML-XPathEngine</code>~~ perl-gettext Incorrect syntax for <code>Obsoletes</code> in spec file. Patch: https://github.com/N3WWN/rocky-debranding/tree/master/perl-gettext/ROCKY/CFG perl-DateTime-Locale Hidden dependency: <code>perl-Test-File-ShareDir</code> (added to list 101) perl-Module-Install-ReadmeFromPod Hidden dependency: <code>perl-Module-Install-AuthorRequires</code> and <code>perl-Test-InDistDir</code> (added to list 101) pytest Built by using <code>--define 'python3_pkgversion 38'</code>, Hidden dependency: <code>python-pluggy</code> &gt;= 0.12 (added to list 101 along with build note) rubygem-rspec-core Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) rubygem-rspec-mocks Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) rubygem-rspec-support Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) testng Builds with <code>--without groovy</code> and <code>--without snakeyaml</code> xbean Built <code>--without equinox</code>, <code>--without spring</code> and <code>--without groovy</code> xmvn Built <code>--without gradle</code> <p></p> <p>External Dependencies:</p> Package Notes dom4j Wacky package.  It must be built using a <code>jaxen</code> package that is built with dom4j support, which is not present in CentOS.  We had to bootstrap the dom4j build using <code>jaxen</code> from Fedora 29, which is compiled with dom4j support. perl-* Be SURE to build against Perl-5.26 (default stream), NOT Perl-5.30 (latest version available).  Required disabling module_hotfixes=1 option to force default Perl.  Maybe fixed by MBS...? maven-* Requires presence of an /etc/maven.conf , fails if not found.  Added a blank one in mock: <code>config_opts['files']['/etc/java/maven.conf'] = \" \"</code> as a workaround <p></p> <p>Older SRPM Errors These failures were looked at, but are older versions of the packages, and likely not needed:</p> Package Notes device-mapper-multipath-0.8.3-3.el8 Newest version of systemd gives extra information about version number - \"239 (239-41.el8_3.1)\" vs. the plain old \"239\".  So a script fails.  Will build against older versions of Systemd.  We have a newer version of this package that works, it may be Ok to skip. device-mapper-multipath-0.8.3-3.el8_2.3 Newest version of systemd gives extra information about version number - \"239 (239-41.el8_3.1)\" vs. the plain old \"239\".  So a script fails.  Will build against older versions of Systemd.  We have a newer version of this package that works, it may be Ok to skip. samba-4.11.2-13.el8 Requires python3-ldb version lower or equal to 2.0.999, however actual python3-ldb version is 2.1.3. We have a newer version of this package that works, it may be Ok to skip. (samba-4.12.3) sssd-2.2.3-20.el8 ERROR: sssd -&gt; requires pam_wrapper rpm (https://git.centos.org/rpms/pam_wrapper.git) We have a newer version of this package that works, it may be Ok to skip. bcc-0.11.0-2.el8 Unable to find clang-libs even though the dependency that should satisfy this is installed.  Only works with clang 9 or lower, but newer bcc with clang 10 seems ok.  Probably fine to skip. tigervnc-1.9.0-15.el8_1 <code>xorg-server 1.20.7+</code> requires the impelementation of a ddxInputThreadInit function. A patch that fixes this is in the latest version at git.centos.org and works with <code>xorg-server 1.20.8-6</code>. This is what is currently in the repo. (https://git.centos.org/rpms/tigervnc/c/4a81f2fc8757bea7ff2c1d8b1fd881a2bed6803c?branch=c8) The version in vault.centos.org was built against <code>xorg-server 1.20.3-11</code>. Suggest skipping this package. sbd-1.4.1-3.el8 Build error is being caused by a change in Pacemaker (https://bugzilla.redhat.com/show_bug.cgi?id=1850078). This has been fixed in newer versions. Suggest skipping. xorg-x11-drv-intel-2.99.917-38.20180618.el8 Missing in spec file <code>BuildRequires: libXv-devel</code>. Added it to chroot install. CentOS Koji logs show that this hidden dependency was installed for their build (https://koji.mbox.centos.org/pkgs/packages/xorg-x11-drv-intel/2.99.917/38.20180618.el8/data/logs/i686/root.log) webkit2gtk3-2.24.4-2.el8_1 Looks like a build error that is being caused by <code>libglvnd</code> being present. The original build used different subpackages which contained header files. These packages have been removed and appear to be in libglvnd. (See https://bugs.webkit.org/show_bug.cgi?id=204108) <code>webkit2gtk3-2.24.4-2.el8_1</code> &lt;--- This version was built against an older version of mesa and libglvnd. Newer versions have been rebased to <code>webkit2gtk3 2.28</code>. I would recommend skipping this package since there is a newer one present which works with the latest libraries. ~~spirv-tools-2019.5-1.20200129.git97f1d48.el8~~ ~~The <code>spirv headers</code> have changed and this no longer builds against the latest version present. Suggest skipping since there are newer versions that build fine.~~ spice-gtk-0.37-1.el8 Missing <code>BuildRequires: libdrm-devel</code> in spec file. Is present in subsequent updates. Added <code>libdrm-devel</code> to chroot install and was built. vulkan-tools-1.2.131.1-1.el8 Looks like a lot of newer vulkan headers and dependencies, like spirv, have been updated. Building against newer headers and libraries results in a build failure. Found a Debian post where someone was trying to rebuild the same version that we are trying to rebuild and the resolution was that newer versions have fixed the build issue. Suggest skipping since newer version is present. vulkan-validation-layers-1.2.13{1, 5}.* Same issue as vulkan-tools. Newer vulkan headers and dependencies being present results in a build failure with this older version.  Suggest skipping."},{"location":"archive/legacy/packaging/","title":"Packaging","text":"<p>This page details the packaging efforts for the Rocky Linux project.</p>"},{"location":"archive/legacy/packaging/#git-branching","title":"Git Branching","text":"<p>Currently git.c.o has a very specific branch system for packages on the site. This is what we understand so far about it:</p> Name Description c8 \"Stable Branch\" c8-stream \"Stable Modules\" c8s* Stream only <p>With this in mind, our focus should be on the c8 and c8-stream branches. We are currently unsure of the plans for 2022 with RHEL 9's release on how the branches will look or if the git system will change entirely. But for now, this is what we are working with.</p>"},{"location":"archive/legacy/packaging/#original-proposal","title":"Original Proposal","text":"<p>The original idea was to pull directly from Red Hat. There may be a case where we should still be watching RHEL's releases and try to match them with what's going on with with git.c.o to make sure things are consistent. If they are, git.c.o may be the correct route.</p>"},{"location":"archive/legacy/packaging/#repositories","title":"Repositories","text":"<p>Below will likely be the base repositories for Rocky Linux</p> Repo Name Usage Enabled by default Notes BaseOS Base packages Yes AppStream Modularity Yes Devel Devel packages No BuildRoot contexts + missing devel packages CodeReady PowerTools/CodeReady No extras Extras Yes isos ISO No RockyTools No Possibly mix into Devel <p>Repositories that are likely SIG's that may be implemented.</p> Repo Name HighAvailibility cloud configmanagement messaging nfv opstools storage virt desktop"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to the project. There are many ways you can contribute to Rocky Linux, such as helping users on forums, Mattermost/IRC, mail lists to debugging packages, hunting bugs, and finding fixes. Other ways to contribute may be joining a Special Interest Group.</p> <p>See below for the some of the ways you can contribute.</p>"},{"location":"contributing/#helping-other-users","title":"Helping other users","text":"<p>As with most online and/or open source communities, getting started usually begins at the \"joining\" phase and just participating in topics that interest you. Here's some basic things you can do to get you going:</p> <ul> <li> <p>Join our Mattermost and search for channels that interest you</p> </li> <li> <p>Join our Matrix Space or IRC channels</p> </li> <li> <p>Join our IRC channels, which are bridged with Matrix and Mattermost.</p> </li> <li> <p>Check out our forums and reddit</p> </li> </ul>"},{"location":"contributing/#helping-with-bug-hunting-finding-fixes","title":"Helping with bug hunting &amp; finding fixes","text":"<p>There are occasions that Rocky Linux users may find problems that may or may not be reproducible on our upstream distribution RHEL. We encourage users to to use our bug tracker to file bugs. Note that this is not meant to be a support system. We encourage users to ask for support on our forums, Mattermost, IRC, or Matrix.</p>"},{"location":"contributing/#helping-with-general-testing","title":"Helping with general testing","text":"<p>In the same vein as bug hunting, the Testing Team is one of the most active groups in the project, with all communication in Mattermost. They work together on testing various aspects of Rocky Linux, including refining their openQA system and their various methods of testing to find bugs and test functionality. They are always open to more users that can help them with these efforts.</p>"},{"location":"contributing/#help-with-or-join-the-epel-effort","title":"Help with or join the EPEL Effort","text":"<p>EPEL (or Extra Packages for Enterprise Linux) is a special interest group within the Fedora Project that maintains and manages a set of additional packages for Enterprise Linux such as Red Hat Enterprise Linux, Rocky Linux, and many others. It is a very common repository that many users enable and start using right away to get access to quality packages that are not found in the base distribution.</p> <p>Getting involved with EPEL is a great way to make Rocky Linux (and other Enterprise Linux distributions) more useful. Check out their help guide for more information. You can also participate in their Matrix and IRC channels.</p>"},{"location":"contributing/#join-a-special-interest-group","title":"Join a Special Interest Group","text":"<p>Joining a Special Interest Group can help augment Rocky Linux in many ways, such as additional packages, certain hardware or architecture support (such as SBC hardware), and much more. Joining a SIG can be rewarding and overall beneficial to the Enterprise Linux ecosystem.</p> <p>You can join a Special Interest Group in Rocky Linux, CentOS, or even the Fedora Project (such as the aforementioned EPEL SIG).</p> <p>If you are wanting to join a Rocky Linux Special Interest Group: We highly encourage reading the getting started guide as well as the Special Interest Group of the wiki if you are looking to join a Rocky Linux SIG.</p> <p>If you are wanting to join a CentOS Special Interest Group: Check out their SIG Wiki page for some information on their SIG's, which may contain information on how to participate. Participating in a CentOS SIG helps all Enterprise Linux distributions, not just CentOS Stream. Most SIG packages in CentOS should work and be applicable to Rocky Linux and other Enterprise Linux distributions.</p>"},{"location":"contributing/#other-participation-and-contribution-information","title":"Other Participation and Contribution Information","text":"<p>For a more detailed guide on getting started for general contributions, see our getting started guide.</p>"},{"location":"contributing/rosca/","title":"Rocky Open Source Contributor Agreement","text":"<p>This Open Source Contributor Agreement (\"Agreement\") is between you (as defined below) and Rocky Enterprise Software Foundation (\"we\" or \"us\"). This Agreement applies to all Contributions (as defined below) submitted by you to a project owned or managed by us (each, a \"Project\"). By clicking submit on our applicable Project portal, you agree to the terms and conditions of this Agreement. Your assent to this Agreement is a prerequisite to contributing to any Project.</p> <ol> <li> <p>Definitions. The terms \"you\" (or \"your\") shall mean the copyright owner or the individual or legal entity authorized by the copyright owner that is granting the licenses under this Agreement. For legal entities, the term \"you\" includes any entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity. \"Contribution\" means any work of authorship, including any software (in object code or source code), image, audiovisual work, or documentation, and any modifications or additions to an existing work, submitted by you in connection with any product or other item developed managed or maintained by a Project (collectively, such software and other items, \"Work\").  The term \"submitted\" means any act of sent to a Project or its representatives, including communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by or on behalf of a Project.  uploading, submitting or distribution</p> </li> <li> <p>IP License. You hereby grant to the Rocky Enterprise Software Foundation (RESF) and those who receive or contribute software or other materials distributed or managed by a Project, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license under any applicable intellectual property rights in the Contributions, to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute the Contributions and any derivative works thereof, including as part of the Work or any other software or materials arising out of or related to the Project to which your Contribution was submitted.</p> </li> <li> <p>Authority. You represent that you are legally entitled to grant the licenses specified above. If your employer or other entity that you are associated with has rights to intellectual property that you create which includes your Contributions, you represent that you have received authorization to make Contributions and grant the foregoing licenses on behalf of that employer or entity in accordance with this Agreement.</p> </li> <li> <p>Notification. You will notify us of any facts or circumstances of which you become aware that would make the foregoing representations inaccurate in any respect or would call into question the grants of rights hereunder.</p> </li> <li> <p>Miscellaneous. This Agreement is the exclusive agreement between the parties with respect to the subject matter hereof. We may freely assign this Agreement. This Agreement shall be governed by the laws of the state of California. Nothing in this Agreement shall be construed to create an employment or agency relationship between you and us or any other recipients or contributors of products or other items distributed or managed by a Project.</p> </li> </ol>"},{"location":"contributing/start/","title":"Getting Started","text":"<p>Contributing to Rocky Linux should be easy and straight forward for any user who wishes to participate or would like to contribute in any way. This could be through a Special Interest Group, or it could just be to the core Rocky Linux distribution.</p>"},{"location":"contributing/start/#purpose","title":"Purpose","text":"<p>This page goes over the basic steps to signing up for an account with our Rocky Account Services and other basics with interacting with the Rocky ecosystem.</p>"},{"location":"contributing/start/#start-guide","title":"Start Guide","text":"<p>This section will go over the very basics of signing up for an account and filling in basic information in Rocky Account Services.</p>"},{"location":"contributing/start/#creating-an-account","title":"Creating an Account","text":"<p>Creating and managing your Rocky account starts at Rocky Account Services.</p> <ul> <li>Go to the Rocky Account Services page and click the register tab</li> <li>Fill in the necessary boxes presented, such as user name, first and last name, and email address, and click \"register\"</li> <li>You will receive an activation email. Activate your account.</li> <li>Login to your account on the Rocky Account Services page</li> </ul>"},{"location":"contributing/start/#profile-information","title":"Profile Information","text":"<p>When you login, you will be on your profile. Click \"Edit Profile\" below your email address to make changes to your profile.</p> <p>It is highly recommended that you fill out the following information on the \"Profile\" tab:</p> <ul> <li>Locale</li> <li>Timezone</li> <li>Chat nicknames (if applicable)</li> <li>Your github/gitlab username</li> </ul> <p>By default, if your email address has an account on libravatar, you will automatically have a profile picture assigned. If you do not, you can create one by clicking the \"Change Avatar\" button in the profile tab.</p> <p>It is highly recommended that you fill out the \"SSH &amp; GPG Keys\" tab. Your ssh keys should sync to both the Rocky Linux GitLab and RESF Git Service.</p> <p>It is highly recommended that you add an OTP to your account.</p>"},{"location":"contributing/start/#signing-agreements","title":"Signing Agreements","text":"<p>While editing your profile, there is an \"Agreements\" tab with all of the current agreements for Rocky. It is highly recommended that the following is reviewed and signed:</p> <ul> <li>Rocky Open Source Contributor Agreement</li> <li>Rocky Git Contributor Agreement</li> </ul> <p>See the details section for more information.</p>"},{"location":"contributing/start/#requesting-access-to-groupssigs","title":"Requesting Access to Groups/SIGs","text":"<p>In general, the baseline steps to requesting access comes down to this:</p> <ul> <li>Create your account in RAS</li> <li>Fill out your profile</li> <li>Sign the appropriate agreements</li> <li> <p>Find the group or groups you wish to join and find the sponsors</p> </li> <li> <p>Check out the Special Interest Group page</p> </li> <li> <p>Check out the IRC and Chat Page page</p> </li> <li> <p>Contact the sponsor directly or send a message to appropriate channel for the group</p> </li> </ul> <p>Each group/SIG will have different procedures for becoming part of the groups/SIGs within Rocky Account Services. Most groups will require agreement(s) to be signed, others may be on a request basis. Each group should have \"sponsors\" that can be contacted with information on joining the groups. They can be contacted in the mattermost.</p> <p>Some sponsors may have additional documents they'll send you from the main wiki or the SIG wiki that will detail the procedure they expect you to follow.</p>"},{"location":"contributing/start/#details","title":"Details","text":"<p>This section will go over a more detailed overview of various aspects of the Rocky Account Services as well as pieces of infrastructure you may interact with.</p>"},{"location":"contributing/start/#agreements","title":"Agreements","text":"<p>Agreements in Rocky Account Services are there to show that you understand and agree to the terms in how you are expected to use any Rocky-related service.</p> <p>You will find that 100% of the time, you will be required to sign at least one of the agreements, and that's the <code>Rocky Open Source Contributor Agreement</code>. If you plan on utilizing git.rockylinux.org or git.resf.org (as most contributors will), signing of the <code>Rocky Git Contributor Agreement</code> is a requirement.</p> <p>Before a sponsor or a team leader will add you to a group, they will have the ability to check your profile to verify that you have signed the appropriate agreements before proceeding. In the event your profile is set to private, this information may be requested from Core/RelEng. If you do not or cannot agree to the terms, you will not be able to contribute to any Rocky project. Even so, this does not stop you from contributing to github repositories at both the Rocky Linux github organization repositories of the RESF github organization repositories.</p>"},{"location":"contributing/start/#pull-requests","title":"Pull Requests","text":"<p>Should have:</p> <ul> <li>All commits GPG signed</li> <li>Head repo either branched from or rebased onto the development branch</li> <li>Any applicable Rocky Account Services agreements signed</li> </ul> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"guidelines/bug_tracker_guidelines/","title":"Bug Tracker Guidelines","text":"<p>These set of guidelines are what to expect using the Bug Tracker system. While we do not require contributors or bug reports to sign this as an agreement in account services nothing is stopping you from doing so to show confirmation that you have.</p>"},{"location":"guidelines/bug_tracker_guidelines/#preface","title":"Preface","text":"<p>Bugzilla is a core part of the Rocky Linux distribution and Rocky Enterprise Software Foundation as a whole. Whether you're a bug reporter, a contributor, or perhaps on the Release Engineering team, the Bug Tracker is a utility for everyone to be able to read and engage with others to find solutions to issues affecting the software that is shipped and available in Rocky Linux.</p>"},{"location":"guidelines/bug_tracker_guidelines/#general-guidelines","title":"General Guidelines","text":"<p>As a reporter, there are guidelines in which you (the user) and others must follow when reporting issues or bugs on the Bug Tracker. Below are some things to be aware of:</p> <ul> <li> <p>Moderation is enforced - As is done in the Rocky Linux MatterMost chat, it is   important to mind your language and word choice. Speak to others as you would   want them to speak to you.</p> </li> <li> <p>The Bug Tracker is not a place for support - The Bug Tracker is meant for   issues, bugs, and problems with the packages and software that is provided in   Rocky Linux. Tickets opened that are asking for support on the operating   system or software will be closed. You are encouraged to go to our subreddit,   Libera IRC channel (#rockylinux), mattermost, or our forums.</p> </li> </ul>"},{"location":"guidelines/bug_tracker_guidelines/#expectations","title":"Expectations","text":"<p>As a reporter, there are expectations in which you (the user) and others should adhere to in order to keep the queues clean and consistent, as well as the the reports readable so that the responsible party can address the issue in a proper manner.</p> <ul> <li> <p>Ensure your report goes to the correct project - There is a list of projects   that accept bug reports or issues. The drop down is on the top right. Choose   the one most appropriate to your issue.</p> </li> <li> <p>Ensure that you provide relevant information - When submitting a report that   may be a bug or issue, ensure that you provide relevant logs and output that   can help the responsible parties to address your issue. This includes:</p> <ul> <li>Logs from /var/log</li> <li>journalctl logs</li> <li>Console output in your shell/session</li> <li>An archive created by sosreport</li> <li>Patch files or workarounds</li> </ul> </li> <li> <p>Do not submit support questions - The Bug Tracker is not a support desk; as   such the tickets will be closed if they are asking for assistance or support.   You are recommended to go to our reddit, Freenode channel (#rockylinux), or   our forum.</p> </li> </ul>"},{"location":"guidelines/bug_tracker_guidelines/#types-of-tickets","title":"Types of Tickets","text":"<p>While reporting bugs and issues are common with bug trackers, the tracker also accepts other reports. Such as:</p> <ul> <li> <p>Account Removal - If you are requesting your account be removed or disabled,   this can be done in the Account Services section of the bug tracker.</p> </li> <li> <p>GitLab Request - There may be patch repos missing or something else may be   requested that involves a group or even a SIG.</p> </li> <li> <p>Rocky Services - This could be the bug tracker itself, the wiki, or other   pieces of infrastructure.</p> </li> </ul>"},{"location":"guidelines/git_guidelines/","title":"Git Guidelines","text":"<p>This document covers how the Rocky Enterprise Software Foundation (RESF) handles the use of Git in the ecosystem for the RESF and its projects such as Rocky Linux. It contains information about how various teams and the community interact and work with Git, as well as expectations and requirements.</p>"},{"location":"guidelines/git_guidelines/#contact-information","title":"Contact Information","text":"Owner SIG Core / Release Engineering Mattermost Contacts <code>@label</code> <code>@mustafa</code> <code>@skip77</code> <code>@sherif</code> <code>@pgreco</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~Dev/Packaging</code> <code>~Dev/General</code> IRC Contacts <code>Sokel</code> <code>neil</code> <code>tg</code>"},{"location":"guidelines/git_guidelines/#general-information","title":"General Information","text":"<p>Git is a core component of the Rocky Linux build ecosystem, RESF projects, and thus a mode of the development process for the distribution and available software.</p> <p>Gitea is used for the RESF, its projects, its code, mirrored repositories, and potentially other components.</p> <p>GitLab is the software currently used to storing mostly RPM spec files, patches, configurations for debranding/modification to packages, as well as some scripts/utilities. Generally source code does not live here with the exception of src-git scenarios.</p> <p>GitHub is used for the RESF and Rocky Linux project organizations, which may contain branding, scripts/tools/utilities, or a handful of other useful code (such as ansible). There may also be forks of upstream projects (such as mock) to handle upstreaming changes to the Fedora Project (like EPEL).</p>"},{"location":"guidelines/git_guidelines/#expectations","title":"Expectations","text":"<p>This section goes over the expectations of using a Git service.</p>"},{"location":"guidelines/git_guidelines/#general-expectations","title":"General Expectations","text":"<p>Most of this information is covered in our <code>Git Contributor Agreement</code>, which generally covers the RESF Git Service and Rocky Linux GitLab. However, we are duplicating the information here for all readers.</p> <ul> <li>Moderation is enforced - As is done in the Rocky Linux Mattermost chat, it is important to mind your language and word choice whether in Git issues or the Bug Tracker.</li> <li>A valid GPG key must be uploaded and used to sign your commits - Signed commits, as a general rule are recommended. Expect that most projects will have unsigned commits disabled.</li> <li>Do not treat git as an issue tracker - All issues for Rocky Linux should be tracked at our Bug Tracker. As of this writing, issues are opened for build issues.</li> <li>Do not perform your work or changes on a system that is owned by your employer.</li> <li>Creating personal projects are discouraged (see exceptions)</li> <li>Ensure that your software or work are of a valid open source license (see related links above)</li> </ul>"},{"location":"guidelines/git_guidelines/#dos-and-do-nots","title":"Do's and Do not's","text":"<p>Below are a list of do's and do not's as part of our Git, whether some are duplicated information above or below this subsection. They are placed here for further emphasis.</p> <p>DO:</p> <ul> <li>Fork repositories and create pull requests where needed</li> <li>Ensure software/source code brought into the Git services are of a valid open source license</li> <li>Upload a valid GPG key and sign your commits</li> </ul> <p>DON'T:</p> <ul> <li>Treat any Git service as a Rocky Linux issue tracker</li> <li>Create personal projects under your namespace (see exceptions)</li> <li>Perform your work or changes on a system that is owned by your employer</li> </ul>"},{"location":"guidelines/git_guidelines/#exceptions","title":"Exceptions","text":"<p>Exceptions to personal projects under your namespace would be for code that will be utilized in some way for the Rocky ecosystem, whether directly, indirectly (e.g., for people.rocky). This can also be the case of using Peridot as a COPR-like service.</p>"},{"location":"guidelines/git_guidelines/#source-code-for-sigs-or-other-software","title":"Source Code (for SIGs or other software)","text":"<p>To be populated.</p>"},{"location":"guidelines/git_guidelines/#sig-groups-projects","title":"SIG Groups + Projects","text":"<p>This section covers SIG groups and projects that exist within the Rocky Linux git service. SIGs may have RPM specs, scripts, or even their own software. The sections below will cover the format and expectations of these groups and projects.</p>"},{"location":"guidelines/git_guidelines/#general-overview","title":"General Overview","text":"<p>A SIG is a Special Interest Group(s). SIGs are smaller groups within the Rocky community that focus on a small set of issues or exist solely for the awareness or focus on topics. This section does not cover the requirements of a SIG's existence.</p> <p>It is typical that a SIG may end up having repositories with packages that can add-on to a Rocky Linux system. However, some SIGs do not function in this manner. In the case that they do function in this manner, they will typically have a section in Rocky Linux GitLab under the SIG group.</p> <p>A SIG will always have an organization at the RESF Git Service.</p>"},{"location":"guidelines/git_guidelines/#structure-packaging","title":"Structure (Packaging)","text":"<p>Using the RPM Structure as a guide, the general idea is the same. A <code>patch</code> group may not be needed, but could be useful. An example of how a SIG could set up their group could be like this:</p> <pre><code>.\n\u2514\u2500\u2500 SIG\n    \u2514\u2500\u2500 messaging\n        \u251c\u2500\u2500 modules\n        \u251c\u2500\u2500 rpms\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 somemq\n        \u2514\u2500\u2500 somemq\n</code></pre> <p>In this example, source code for the software <code>somemq</code> would be under the <code>messaging</code> subgroup under <code>SIG</code>. And then an RPM spec for that software, for that SIG, would sit under <code>rpms</code> as expected. However, you can further organize this further if you wish.</p> <pre><code>.\n\u2514\u2500\u2500 SIG\n    \u2514\u2500\u2500 messaging\n        \u251c\u2500\u2500 modules\n        \u251c\u2500\u2500 rpms\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 somemq\n        \u2514\u2500\u2500 sources\n            \u2514\u2500\u2500 somemq\n</code></pre> <p>This isn't a strict requirement, but could be good for organization purposes.</p>"},{"location":"guidelines/git_guidelines/#access-to-a-sig-group","title":"Access to a SIG Group","text":"<p>SIG group access is typically obtained by contacting a sponsor (as found in Account Services) and requesting access to be a part of the SIG. Once you have been added to the group as well as the <code>gitusers</code> group, you will be able to do work within the SIG.</p>"},{"location":"guidelines/git_guidelines/#other-groups","title":"Other Groups","text":"<p>Other groups generally will not exist in the Rocky GitLab instance. Rather, they will (and should) exist in the RESF Gitea instance instead. These groups could contain repos for:</p> <ul> <li>A team's source code</li> <li>A team's set of tools or scripts</li> <li>Other miscellanous metadata</li> </ul> <p>Examples of groups would be:</p> <ul> <li>Infrastructure -&gt; This group contains repositories related for rocky infrastructure</li> <li>releng -&gt; Release Engineering repositories and code</li> <li>sig_core -&gt; Core Special Interest Group specifically for code and items related to Rocky Linux development and infrastructure</li> </ul>"},{"location":"guidelines/git_guidelines/#rpm-system","title":"RPM System","text":"<p>This section goes over the RPM system, such as importing, patching, and how it ultimately gets built into a binary RPM. This happens on git.rockylinux.org.</p>"},{"location":"guidelines/git_guidelines/#current-rpm-structure","title":"Current RPM Structure","text":"<p>The current RPM structure is designed to allow the orchestrator tool to import sources and then patch them accordingly if required. It also allows AppStream modules to be supported and manageable with their required YAML files.</p> <p>There are four primary groups:</p> <ul> <li>original: contains RPM spec data that are from Rocky, such as release and logos</li> <li>staging: contains RPM spec data for the staging channel, such as testing the tools in that they operate and function correctly, and to test the build process.</li> <li>release: contains RPM spec data for the release channel, which would be the actual release that users will consume.</li> </ul> <pre><code>.\n\u251c\u2500\u2500 original\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 patch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 rpms\n\u251c\u2500\u2500 release\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 patch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 rpms\n\u2514\u2500\u2500 staging\n    \u251c\u2500\u2500 modules\n    \u251c\u2500\u2500 patch\n    \u2514\u2500\u2500 rpms\n</code></pre> <p>Each group has three subgroups:</p> <ul> <li> <p>modules group is used to store repos that hold YAML files. The YAML files define the module that will exist in the AppStream repository.</p> </li> <li> <p>patch group is used to hold the configuration for distrobuild to pick up and patch or perform other tasks as it pertains to the RPM.</p> </li> <li> <p>rpms group is used as the final output/import of the RPM spec file and patches after it has been patched (if applicable) and is then used/picked up to build the SRPM and send to koji for build.</p> </li> <li> <p>src group (though not required) can be where a package's source can exist to help create patches if need be.</p> </li> </ul> <p>Note that SIGs or projects that plan on using the build system should be following this methodology.</p>"},{"location":"guidelines/git_guidelines/#rpm-patching-structure","title":"RPM Patching Structure","text":"<p>For the patch configuration, the layout must be followed strictly to ensure a SPEC file or its sources are modified accordingly. Here's an example below.</p> <pre><code>.\n\u2514\u2500\u2500 ROCKY\n    \u251c\u2500\u2500 CFG\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 browser.cfg\n    \u2514\u2500\u2500 _supporting\n        \u251c\u2500\u2500 Bug-1238661---fix-mozillaSignalTrampoline-to-work-.patch\n        \u251c\u2500\u2500 Bug-1526653---fix_user_vfp_armv7.patch\n        \u2514\u2500\u2500 firefox-rocky-default-prefs.js\n</code></pre> <p>At the top level, the ROCKY folder will hold two additional folders, CFG and _supporting.</p> <p>The CFG directory will contain files that end in <code>.cfg</code> that tell the orchestrator what to do to the imports coming in the form of an action.</p> <pre><code>Action {\n    file: \"OriginalFile\"\n    with_file: \"ROCKY/_supporting/RockyReplaceFile\"\n}\n</code></pre> <p>This goes into further detail at our Debrand HowTo page.</p>"},{"location":"guidelines/git_guidelines/#branch-strategy","title":"Branch Strategy","text":"<p>Typically when making a patch repo, the <code>main</code> branch is where everything should be. However, there are cases where this is not sufficient, especially in the case of major release version differences. Here's a general idea/example of how the branches will work:</p> <ul> <li><code>main</code> is the universal branch that is always used during a patch</li> <li><code>r8</code> is the Rocky 8 branch, specific to patching the corresponding RPM specs/patches for 8</li> <li><code>r9</code> would be for Rocky 9</li> <li><code>r9-beta</code> would be for Rocky 9 beta</li> <li>etc...</li> </ul> <p>In practice when the patch process occurs, the <code>main</code> branch is parsed first and applied, and then if there is a corresponding <code>rX</code> branch, it would apply that next. There are cases too where <code>main</code> can be empty and you'll just have an <code>rX</code> branch. This is acceptable and will still work.</p> <p>Note that with this strategy, merging branches is never recommended in most circumstances. Try to keep them separated where as best as possible and where absolutely needed. The only time branches should be merged or force-pushed is when going from <code>rXlh</code> to <code>rX-beta</code> or <code>rX-beta</code> to <code>rX</code>.</p>"},{"location":"guidelines/git_guidelines/#submitting-a-potential-patch","title":"Submitting a Potential Patch","text":"<p>There are a few ways to submit a patch to fix build issues in the main distribution. This section will break down some examples of ways you can put in a fix request for review.</p>"},{"location":"guidelines/git_guidelines/#patch-repo-doesnt-exist","title":"Patch Repo Doesn't Exist","text":"<p>If there is a package failing, or you are looking to submit a patch for example to allow something to compile correctly on another architecture (e.g., <code>armv7</code>/<code>armhfp</code>), or perhaps you found a piece of the base that was not debranded properly, generally a bug report should be opened at our Bug Tracker with relevant information and logs. Opening a project under your namespace can be done and can eventually be transferred in into <code>staging</code> after review.</p>"},{"location":"guidelines/git_guidelines/#patch-repo-exists","title":"Patch Repo ExistsResources","text":"<p>If there is a package failing because of a failing current patch, or a new patch is required, perhaps debranding must occur, you generally:</p> <ol> <li>Fork the repo into your namespace</li> <li>Make the relevant changes</li> <li>Apply for a merge request/pull request</li> </ol> <p>An appropriate bug tracking ticket should be opened, if not opened already (or automatically) to ensure there is documentation for this change.</p> Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"guidelines/maillist_guidelines/","title":"RESF Mailing List Guidelines","text":""},{"location":"guidelines/maillist_guidelines/#before-posting-to-a-list","title":"Before Posting to a list","text":"<p>There are a number of ways you can find help within your system. If you don't find the answer there, try to look into the list archives before posting a question. This is a high volume list and chances are that someone has already had the same problem you are now trying to fix. See Useful Resources below for a list of places to try. Refer to this presentation on mail etiquette that you should follow.</p>"},{"location":"guidelines/maillist_guidelines/#still-stuck","title":"Still stuck?","text":"<p>If you cannot find an answer after searching the archives or by using the resources described below, then writing to the list is a good idea. The guidelines below were written and adapted to make sure your message gets the attention it needs to be read and answered.</p> <p>Keep in mind that while there may be many users on the lists, your post may go unanswered, even when following these guidelines. (See section below re: nudging) Posting to the list should not be considered a guaranteed method of receiving support.</p>"},{"location":"guidelines/maillist_guidelines/#posting-guidelines","title":"Posting Guidelines","text":""},{"location":"guidelines/maillist_guidelines/#be-courteous","title":"Be Courteous","text":"<p>Be courteous and polite to fellow members in the list. Never swear or be rude to anyone. When you interact with people on any of the RESF mailing lists (or indeed on any communication platform), you are expected to act in accordance with our Community Charter and its values.</p>"},{"location":"guidelines/maillist_guidelines/#keep-it-short","title":"Keep it Short","text":"<p>Most RESF Lists maintain a maximum message length of 40 kilobytes. Remember that your message will be copied potentially thousands of times when being delivered into people's mailboxes. It is wise to keep your messages as short as possible.</p> <p>Avoid including log output (select only the most relevant lines, or place the log on a website or in a pastebin instead) or excessively quoting previous messages in the thread (trim the quoted text down to the most recent/relevant messages only).</p>"},{"location":"guidelines/maillist_guidelines/#no-attachments","title":"No attachments","text":"<p>Attachments to email make the messages much bigger. They create an enormous amount of extra Internet traffic when a mailing list sends the message and attachments to thousands of people worldwide. They also can create problems for the recipients, who may be limited to low-bandwidth connections. A reader may not know they are downloading an email with a very large attachment until it is too late, and they might be blocked from getting other mail until they finish that download, which makes them frustrated.</p> <p>Don't use attachments to your email. Instead, post a file in a pastebin, or elsewhere on the web, and include a URL to that file in your email, not the file itself.</p> <p>Lastly, we have to store the attachments. We don't want to store too many :-)</p>"},{"location":"guidelines/maillist_guidelines/#starting-a-new-subject","title":"Starting a New Subject","text":"<p>When you send in a new topic, do not start by replying to an existing message, but rather, start a new message to \"rocky@lists.resf.org\". This keeps messages organized by thread, for people who like to use threads (on high-volume mailing lists like this one, threads can be a great convenience).</p> <p>Furthermore, please do not recycle messages. Recycling messages is replying to an existing thread by changing the thread name. This creates confusion and diverts the number of people replying to the topic.</p> <p>For details see https://web.archive.org/web/20070219193422/http://mm.bbspals.org/message-recycling/</p>"},{"location":"guidelines/maillist_guidelines/#write-a-good-subject-line","title":"Write a Good Subject Line","text":"<p>Make a subject line that clearly tells us what you need. This is a point that can't be overemphasized. Try \"Crash after setting up disks in Rocky 8.5\" instead of \"Can't install!!\" Why? So that people with certain skills, looking for someone to help, will notice your message. That helps you get help from the right people quickly.</p> <p>On a high volume lists, many people just skim through the subject lines and only read the messages that catch their interest. So, by creating a good subject line, you increase the chances that your message is actually going to be read and eventually answered.</p>"},{"location":"guidelines/maillist_guidelines/#if-you-are-replying-to-a-message","title":"If You Are Replying to a Message","text":"<p>Make sure we can tell what you are replying to. Place each part of your reply after the text it addresses (i.e., NO Top-Posting, please see \"Wikipedia - Top Posting\" and links therein for more on this). Most mail readers automatically put a '&gt;' character in front of each replied-to line. It gives a conversational flow to the text, and people know what you're replying to. Trim irrelevant material. It makes it easier to read your reply and helps the reader to stay on subject. Using bottom, interleaved posting is recommended as it is more organised.</p> <p>The fact that you're sending the email from a smart-phone or similar device doesn't invalidate those guidelines. Please consider sending the reply at a later time when you have access to your regular email system or send a private reply instead.</p>"},{"location":"guidelines/maillist_guidelines/#replying-to-digests","title":"Replying to Digests","text":"<p>In a some high volume lists, you may choose to receive mails in digested mode. However when replying to such messages, please avoid just hitting the reply button. This creates meaningless messages like \"Re: Rocky-Mirror Digest, Vol 7, Issue 193\" which does not reflect what you are talking about. Please do the following:</p> <ol> <li>edit the subject to reflect what topic you are talking about</li> <li>snip out all the irrelevant parts of the digest other than the post to which you are directly replying</li> </ol>"},{"location":"guidelines/maillist_guidelines/#let-us-know-when-your-question-is-answered","title":"Let Us Know When Your Question is Answered","text":"<p>When you get a solution to your question (or find it yourself after posting to the list), reply to your original e-mail describing what solved your problem, adding a [SOLVED] to the end of the subject line. This will let people know that you don't need help any more with this and can look for other posts to help. Also, it makes a search in the archives easier when someone has a related problem in the future.</p>"},{"location":"guidelines/maillist_guidelines/#commercial-messages","title":"Commercial messages","text":"<p>Commercial messages, including job postings, are not currently allowed on the RESF mailing lists.</p>"},{"location":"guidelines/maillist_guidelines/#behavioral-guidelines","title":"Behavioral guidelines","text":"<p>If a mail has offended you personally, please send a private message to the person expressing how you feel, instead of sending it to the mailing list.</p> <p>Please remember that we have members from all genders and nationalities. No gender abuse is allowed on the list, and do not include any gender specific slang in your posts. Also do not indulge in racial or regional criticism. This is a very serious violation.</p> <p>Be careful when using sarcasm and humour. Without face to face communications your joke may be viewed as criticism. When being humourous, use emoticons (smileys) to express humour. (tilt your head to the left to see the emoticon smile) :-) = happy face for humour.</p> <p>Behave in a professional manner in the mailing lists. Any mistake could put you under the scanner and at the receiving end of much rebuke.</p> <p>While uncommon, list moderators and administrators do monitor the lists and will take action on users found to be in violation of these guidelines.</p>"},{"location":"guidelines/maillist_guidelines/#do-not-cross-post","title":"Do not Cross Post","text":"<p>Avoid posting to multiple lists simultaneously. Pick a mailing list that is most suitable for your post and just use that. CC'ing multiple lists should be avoided.</p> <p>Post to the the mailing list that is most suited to your purpose and then just copy the link to that page or mailing list and paste to all the other mailing lists you want to post to. This will reduce the amount of data duplicated - only one copy will be accessed by all who read it.</p> <p>http://en.wikipedia.org/wiki/Crossposting</p>"},{"location":"guidelines/maillist_guidelines/#stay-on-topic","title":"Stay on-topic","text":"<p>Make sure your topic is relevant to the chosen mailing list. For example, sending a political petition not related to the purpose of the list. In turn, replying on list to an off-topic post tends to magnify the problem.</p>"},{"location":"guidelines/maillist_guidelines/#unsubscribing","title":"Unsubscribing","text":"<p>To unsubscribe from the list you can visit the web page for the list at https://lists.resf.org or by sending an email to <code>$listname-leave@lists.resf.org</code></p>"},{"location":"guidelines/maillist_guidelines/#use-the-common-language","title":"Use the common language","text":"<p>Unless you are a RESF mailing list that is dedicated to users speaking that particular language, communicate in English. Other languages might be ignored merely because the users in these lists might only know English or use it as their common language. Refer to the Communicating and getting help page for more information on other mailing lists.</p> <p>Use standard language and not colloquial or regionally accepted abbreviations. Visit http://www.jargon.org for more such acronyms.</p> <p>Use the universally accepted standard English. Always do a spell check before mailing to the list. Grammar doesn't matter as long as one is understood. Do not use SMS language. Do not use dots(\".....\") to conclude the sentences as is common across social networks.</p>"},{"location":"guidelines/maillist_guidelines/#avoid-long-signatures-and-disclaimers","title":"Avoid long signatures and disclaimers","text":"<p>We find value in your main content rather than signatures. One or two lines would be optimal to convey messages that must be included in your signature and avoid huge disclaimers describing how your mail is private and confidential while sending things to the mailing list.</p>"},{"location":"guidelines/maillist_guidelines/#no-chain-letters","title":"No chain letters","text":"<p>Never send chain letters to the mailing list. A mail simultaneously sent to more than 10 users will not reach the list. This is to eliminate possible spammers/bulk mailers to reach the list.</p>"},{"location":"guidelines/maillist_guidelines/#do-not-use-all-capitals","title":"Do not use ALL CAPITALS","text":"<p>Using capital letters in your sentences is considered shouting. It is considered as being rude. If you want to emphasize on something use this or this.</p>"},{"location":"guidelines/maillist_guidelines/#avoid-repetitive-posting","title":"Avoid repetitive posting","text":"<p>Often people helping on the mailing lists are volunteers who, just like you, have busy lives. If you do not get a response within a few minutes or hours, avoid re-posting the same question repeatedly. Give a minimum of 24-48 hours for an answer, and if you don't have one by then, give a \"nudge\" to the list by replying to (not re-posting) your original message.</p> <p>Please read all your mails before replying to a mail. Someone may have already answered it.</p>"},{"location":"guidelines/maillist_guidelines/#useful-resources","title":"Useful resources","text":""},{"location":"guidelines/maillist_guidelines/#getting-help-from-your-system","title":"Getting Help From Your System","text":"<p>There are many ways to get information from your system. Get a terminal window by right clicking on the desktop. In the window type one of the following (without the '$', and substitute application-name with the name of the application you are having trouble with).</p> <pre><code>$ man application-name\n$ info application-name name\n$ locate stuff-you-want-to-know-about\n$ rpm -qd packagename\n</code></pre>"},{"location":"guidelines/maillist_guidelines/#documentation","title":"Documentation","text":"<p>The Rocky Linux Documentation Team is working hard to provide excellent documentation for the project. You can see their efforts in:</p> <ul> <li>Rocky Linux Documentation Index</li> <li>Rocky Linux Release Notes</li> <li>Rocky Linux Installation Guide</li> <li>Rocky Linux Migration Guide</li> </ul> <p>Rocky Linux is also based on Red Hat Enterprise Linux, so RHEL documentation should be helpful for users of EL distributions like Rocky.</p> <ul> <li>Red Hat Documentation Index</li> <li>Red Hat Enterprise Linux Manuals</li> </ul>"},{"location":"guidelines/maillist_guidelines/#list-archives","title":"List Archives","text":"<p>Mailing list archives can be browsed using Hyperkitty at the link below:</p> <ul> <li>Lists.resf.org Archives</li> </ul>"},{"location":"guidelines/maillist_guidelines/#mailing-list","title":"Mailing List","text":"<p>If you encounter any issues or problems regarding a mailing list setup or its operation, please contact the list administrators rather than posting to the list about the problem. For lists on resf.org, you may reach the list owners at $listname-owner@lists.resf.org. There is a link to the -owner address at the bottom of the listinfo page for each list.</p>"},{"location":"guidelines/maillist_guidelines/#search-it","title":"Search It!","text":"<ul> <li>https://duckduckgo.com</li> <li>https://google.com</li> </ul> <p>Try to narrow down search terms using a list name (e.g. <code>rocky users</code>) or by including site:lists.resf.org in your search query, which would search all the archives.</p>"},{"location":"guidelines/maillist_guidelines/#acknowledgements","title":"Acknowledgements","text":"<p>This document includes (in part or in whole) content adapted from Fedora's Mailing List Guidelines. We thank them for their continued work on these guidelines and commitment to nettiquite. Please see their own acknowledgements for more information</p>"},{"location":"include/content_bottom/","title":"Content bottom","text":"Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/releng/resources_bottom/","title":"Resources bottom","text":"Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"include/releng/version_table/","title":"Version table","text":"Rocky Linux 8Rocky Linux 9 Version Release Kernel Release Date End of Life Supported 8.4 4.18.0-305 June 21, 2021 November 15, 2021 NO 8.5 4.18.0-348 November, 15 2021 May 15, 2022 NO 8.6 4.18.0-372.9.1 May 15, 2022 November 11, 2022 NO 8.7 4.18.0-425.3.1 November 11, 2022 May 20, 2023 NO 8.8 4.18.0-477.10.1 May 20, 2023 November, 2023 Yes Version Release Kernel Release Date End of Life Supported 9.0 5.14.0-70.13.1 July 14, 2022 November 26, 2022 NO 9.1 5.14.0-162.6.1 November 26, 2022 May 16, 2023 NO 9.2 5.14.0-284.11.1 May 16, 2023 November, 2023 Yes"},{"location":"include/testing/qa_content_example_only/","title":"Qa content example only","text":"<p>CONTENT EXAMPLE ONLY</p> <p>Content on this page may be copy-pasta from Fedora Quality Assurance documents and needs to be replaced and/or reviewed before publishing for applicability for Rocky Linux.</p>"},{"location":"include/testing/qa_data_loss_warning/","title":"Qa data loss warning","text":"<p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"include/testing/qa_setup_boot_to_media/","title":"Qa setup boot to media","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"include/testing/qa_testcase_bottom/","title":"Qa testcase bottom","text":"Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/testing/qa_testcase_supported_systems/","title":"Qa testcase supported systems","text":"Supported Systems and Hardware Classes x86_64aarch64ppc64s309x <p>TBD</p> <p>TBD</p> <p>TBD</p> <p>TBD</p>"},{"location":"include/testing/rc_content_bottom/","title":"Rc content bottom","text":"Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Release Requirements documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/testing/rc_content_example_only/","title":"Rc content example only","text":"<p>CONTENT EXAMPLE ONLY</p> <p>Content on this page may be copied from Fedora Release Requirements documentation and needs to be replaced and/or reviewed before publishing for applicability for Rocky Linux.</p>"},{"location":"rocky/","title":"Rocky Linux General Information","text":"<p>This section of the wiki goes over general information for Rocky Linux. Treat this part of the wiki as a general resource area for frequently requested information. Please see the left hand side for the primary topics/pages.</p>"},{"location":"rocky/bugs/","title":"Reporting Bugs and RFE's","text":"<p>The Rocky Linux Project has several ways of reporting issues or requesting enhancements, depending on what the issue is and who it pertains to. This page aims to try to steer you in the right direction on where to go.</p>"},{"location":"rocky/bugs/#rocky-linux-core-distribution","title":"Rocky Linux (core distribution)","text":""},{"location":"rocky/bugs/#bugs","title":"Bugs","text":"<p>Bugs are an inevitable part of any Linux distribution. Users may find problems and want a way to report the bug.</p> <p>All bug reports (which includes packages from Special Interest Groups) should be reported at our Bug Tracker.</p> <p>When reporting bugs, ensure you have read the Bug Tracker Guidelines so you can make a proper bug report.</p> <p>Note</p> <p>You may be asked to reproduce the issue on Red Hat Enterprise Linux. If the issue is reproducible on RHEL, you are encouraged to also open a bug report at the Red Hat Jira. The assignee on your bug report can do this for you also if you wish.</p>"},{"location":"rocky/bugs/#rfe-request-for-enhancement","title":"RFE (Request for Enhancement)","text":"<p>Requests for Enhancements to packages<sup>1</sup> are typically handled at the Bug Tracker. In some cases, this may not apply. A Special Interest Group may ask that an RFE be submitted elsewhere. See the SIG section later in this page.</p>"},{"location":"rocky/bugs/#rocky-linux-infrastructure-and-services","title":"Rocky Linux Infrastructure and Services","text":"<p>Rocky Linux Infrastructure have responsibility over several areas. Below is just some of what is maintained:</p> <ul> <li>Mirror Manager</li> <li>Account Services</li> <li>RESF Git Service</li> <li>Rocky Linux Git Service</li> <li>Mail List</li> <li>General Special Interest Group requests (such as resources)</li> </ul> <p>Infrastructure and Services encourages issues and requests to be submitted to their Infrastructure Meta tracker.</p>"},{"location":"rocky/bugs/#rocky-linux-special-interest-groups-sig","title":"Rocky Linux Special Interest Groups (SIG)","text":"<p>Each Special Interest Group may do things a bit differently from the next. In majority of cases, a SIG will receive a group at the RESF Git Service and a \"meta\" repository. However, a SIG can choose not to use this and note on their wiki of where to go.</p> <p>Examples of SIG's that use \"meta\" are below:</p> <ul> <li>SIG/Core</li> <li>SIG/AltArch</li> </ul>"},{"location":"rocky/bugs/#other-resources","title":"Other Resources","text":"<p>If you have reproduced a bug or an issue in RHEL (or even Stream), or you would like to request something for a future Enterprise Linux version (that will make it to Rocky Linux in a future version), you are encouraged to submit a report to the Red Hat Jira. Below are some quick links for submitting such requests.</p> <ul> <li>Red Hat Enterprise Linux - For RHEL bugs found in both Rocky Linux and RHEL</li> <li>CentOS Stream - Bugs or RFE's for CentOS Stream</li> </ul> <ol> <li> <p>Packages may be for a core Rocky Linux package or a Special Interest Group package. Note that if an RFE is put in for a Rocky Linux core package, it will most likely be rejected and you may be encouraged to request it upstream to CentOS Stream. If the RFE is to a package that contains <code>rocky-</code> in the name or it is a package that we actively patch, it may be considered. RFE's to prepare for upcoming features from Stream to RHEL (e.g. to prepare for said feature) is encouraged.\u00a0\u21a9</p> </li> </ol>"},{"location":"rocky/errata/","title":"Rocky Linux Errata","text":"<p>This page goes over general information about the Rocky Linux errata and its backend system.</p>"},{"location":"rocky/errata/#errata-resources","title":"Errata Resources","text":"<ul> <li>Errata Browser</li> <li>Errata API Endpoint</li> <li>Errata API Endpoint OpenAPI Specs</li> <li>Errata RSS Endpoint</li> </ul>"},{"location":"rocky/errata/#general-errata-information","title":"General Errata Information","text":"<p>Errata is generated via a system called \"Apollo\" together with the build system peridot. The Apollo system replaces the old errata system \"secparse\" and effectively generates the updateinfo.xml data that will appear in repositories. This provides information such as:</p> <ul> <li>Security advisories (RLSA)</li> <li>Bugfix advisories (RLBA)</li> <li>Enhancement advisories (RLEA)</li> </ul> <p>This information generally attempts to match the advisories provided by Red Hat. Errata for your system can be found by running <code>dnf updateinfo</code>.</p> <pre><code># dnf updateinfo\nLast metadata expiration check: 1:41:31 ago on Thu 22 Sep 2022 10:00:23 PM MST.\nUpdates Information Summary: available\n    1 New Package notice(s)\n    5 Security notice(s)\n        4 Important Security notice(s)\n        1 Moderate Security notice(s)\n    1 Bugfix notice(s)\n    1 Enhancement notice(s)\nSecurity: kernel-core-4.18.0-372.19.1.el8_6.x86_64 is an installed security update\nSecurity: kernel-core-4.18.0-372.9.1.el8.x86_64 is the currently running version\n</code></pre> <p>You can also run <code>dnf updateinfo list</code> to see the full list that applies to your system. If you use EPEL, you may see <code>FEDORA-EPEL</code> advisories as well.</p> <pre><code># dnf updateinfo list\nRLSA-2022:6159              Moderate/Sec.  curl-7.61.1-22.el8_6.4.x86_64\nFEDORA-EPEL-2022-232803ed1b enhancement    distribution-gpg-keys-1.77-1.el8.noarch\nRLSA-2022:5564              Important/Sec. kernel-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-4.18.0-372.19.1.el8_6.x86_64\nRLSA-2022:5564              Important/Sec. kernel-core-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-core-4.18.0-372.19.1.el8_6.x86_64\nRLSA-2022:5564              Important/Sec. kernel-modules-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-modules-4.18.0-372.19.1.el8_6.x86_64\nFEDORA-EPEL-2022-42c9410b12 bugfix         koji-1.30.0-1.el8.noarch\nRLSA-2022:6159              Moderate/Sec.  libcurl-7.61.1-22.el8_6.4.x86_64\nFEDORA-EPEL-2022-42c9410b12 bugfix         python3-koji-1.30.0-1.el8.noarch\nFEDORA-EPEL-2022-42c9410b12 bugfix         python3-koji-cli-plugins-1.30.0-1.el8.noarch\nFEDORA-EPEL-2019-6adf1e0ef3 newpackage     python3-psutil-5.6.3-5.el8.x86_64\nRLSA-2022:6180              Important/Sec. rsync-3.1.3-14.el8_6.3.x86_64\nRLSA-2022:6206              Important/Sec. systemd-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-container-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-libs-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-pam-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-udev-239-58.el8_6.4.x86_64\n</code></pre>"},{"location":"rocky/image/","title":"Rocky Linux ISOs and Images","text":"<p>For a given Rocky Linux release, ISOs and images are generated and provided to the community, providing different means of installing Rocky Linux, whether that be a full DVD iso image, a boot iso, live desktop images, or even cloud images.</p> <p>It is important to note that the images provided and what they provide may differ between major releases (such as provided packages, installable/installed groups, and so on).</p>"},{"location":"rocky/image/#about-iso-images","title":"About ISO Images","text":"Version boot minimal dvd Architectures Rocky Linux 8 Yes Yes Yes x86_64, aarch64 Rocky Linux 9 Yes Yes Yes x86_64, aarch64, ppc64le, s390x <p>Every Rocky Linux release gets a set of ISO's. These ISO's are made by the tooling used to make and finalize the distribution. For a given Rocky Linux release, they will live in an <code>isos</code> directory at the root of a Rocky Linux release.</p> <p>There are three formats for the ISO's. See the notes below.</p>"},{"location":"rocky/image/#notes-about-multiple-iso-images-what-is-what","title":"Notes about: Multiple ISO images, what is what?","text":"<p>There are multiple templated formats for each ISO you may see.</p> Format Type Context Rocky-X.Y-ARCH-TYPE ISO File Day of release ISO Rocky-X.Y-DATE-ARCH-TYPE ISO File Rebuilt ISO Rocky-ARCH-TYPE Symlink Symlink to the latest ISO <ul> <li>X is the major version</li> <li>Y is the minor version</li> <li>ARCH is the architecture</li> <li>DATE will be the date the ISO was built (if applicable)</li> <li>TYPE will be the type of ISO (boot, dvd, minimal)</li> </ul> <p>The first format is the most common and is the day-of-release ISO.</p> <p>The second format is in the case of rebuilt ISO's, typically in the case of addressing a bug or providing updated images (in the case of a newer kernel, a new secure boot shim, and so on).</p> <p>The third format is a symlink to the \"latest\" ISO. Currently, this is not advertised on the main site but may be in the future. This unversioned image is for these cases:</p> <ul> <li>A pre-determined download location for users/mirrors/service providers who want an always available and deterministic download location, which can be easier to script</li> <li>osinfo database / libvirt use where if a user selects Rocky Linux X, it should be aware of and be able to download from that location. This should be fully supported in Rocky Linux 8.7 and 9.1, and future Fedora versions.</li> </ul>"},{"location":"rocky/image/#notes-about-what-does-each-iso-do","title":"Notes about: What does each ISO do?","text":"<p>Each ISO that is provided has a specific purpose.</p> <ul> <li>The <code>boot</code> image, or also known as the \"net install\" media, is used to perform Rocky Linux installations over the internet.</li> <li> <p>The <code>minimal</code> image is typically used to install a minimal Rocky Linux environment without downloading the entire DVD image or using the <code>boot</code> ISO to do so.</p> <ul> <li>The equivalent dnf group/environment would be <code>Minimal Install</code></li> <li>The equivalent dnf group/environment for a kickstart would be <code>@^minimal-environment</code> - This can also be used with dnf install as <code>@minimal-environment</code></li> </ul> </li> <li> <p>The <code>dvd</code> image, or also known as the \"everything\" or \"BaseOS\" media, contains everything needed to do a custom installation of Rocky Linux without needing an internet connection.</p> </li> </ul>"},{"location":"rocky/image/#notes-about-writing-the-isos","title":"Notes about: Writing the ISO's","text":"<p>There are many ways to write ISO's to a USB. See the below lists for what to and what not to use.</p>"},{"location":"rocky/image/#recommended","title":"Recommended","text":"<ul> <li> <p>Fedora Media Writer</p> <ul> <li>Windows</li> <li>MacOS</li> <li>On Fedora: <code>dnf install mediawriter</code></li> </ul> </li> <li> <p>dd for windows</p> </li> <li>Rawrite32</li> </ul>"},{"location":"rocky/image/#not-recommended-avoid","title":"Not Recommended (avoid)","text":"<p>The following are listed as do not use as they are known for breaking isohybrid images or causing other inconsistencies:</p> <ul> <li>rufus</li> <li>unetbootin</li> <li>multibootusb</li> <li>universal usb installer</li> </ul> <p>Rufus can only work for Rocky Linux images if you use \"dd mode\" only. Do not use ISO mode as it will result in a broken installer. It is recommended by Release Engineering that you use a writer from the recommended section.</p>"},{"location":"rocky/image/#about-cloud-images","title":"About Cloud Images","text":"<p>Every Rocky Linux release gets a set of cloud images that can be consumed into their cloud infrastructure as they see fit. They will live in an <code>images</code> directory at the root of a Rocky Linux release.</p> Version Generic Cloud EC2 Rocky Linux 8 Yes (x86_64, aarch64) Yes (x86_64, aarch64) Rocky Linux 9 Yes (x86_64, aarch64, others*) Yes (x86_64, aarch64) <p>There are two formats for the images:</p> Format Type Context Rocky-X-CLOUD{-TYPE}-X.Y-DATE-ARCH.FORMAT Image File Any given cloud image Rocky-X-CLOUD{-TYPE}.latest.ARCH.FORMAT Symlink Symlink to the latest image Rocky-X-CLOUD.latest.ARCH.FORMAT Symlink Symlink to the latest primary image <ul> <li>X is the major version</li> <li>Y is the minor version</li> <li>ARCH is the architecture</li> <li>DATE will be the date of when the image was produced</li> <li>CLOUD will the type of cloud image (e.g., GenericCloud)</li> <li>TYPE will be the type of image such as Base or LVM, if applicable</li> <li>FORMAT will be <code>raw</code> or <code>qcow2</code></li> </ul> <p>The first format will always be a constant. Cloud images will appear in this format in majority of cases and there may be more than one at any given time. Updates can occur for newer kernels or to address issues in previous versions.</p> <p>The second format is a symlink to the latest cloud image of that variant and type, if applicable.</p> <p>The third format is symlinked to the latest available image. This allows users/mirrors/service providers to have an always available and deterministic download location that can be scripted if they wish to always pull the latest available. This is typically the \"Base\" variant.</p>"},{"location":"rocky/image/#about-live-images","title":"About Live Images","text":"<p>Every Rocky Linux release provides a set of live images that a user can download, boot, use, and optionally install to their systems. The live images are desktop oriented images that are primarily for desktop use cases and try to closely match similarly to what Fedora provides for their releases.</p> Version GNOME / Workstation KDE XFCE Architectures Rocky Linux 8 Yes No* Yes x86_64 Rocky Linux 9 Yes Yes Yes x86_64, aarch64 <p>* This image is not available either due to image/package issues or issues with the desktop environment in that version of Rocky Linux.</p>"},{"location":"rocky/image/#notes-about-missing-architectures","title":"Notes about: Missing architectures","text":"<p>There are plans to potentially provide ppc64le live images, as there are some POWER workstations out in the wild.</p>"},{"location":"rocky/image/#notes-about-kickstarts","title":"Notes about: Kickstarts","text":"<p>The kickstarts that help generate these live images can be found at https://git.resf.org/sig_core/kickstarts and the mirror at https://github.com/rocky-linux/kickstarts.</p>"},{"location":"rocky/image/#about-pi-images-maintained-by-sigaltarch","title":"About Pi Images (maintained by SIG/AltArch)","text":"<p>The raspberry pi images are exactly what's labeled on the tin, images for the means of installing to an sd card to run Rocky Linux on a raspberry pi. These images are supported by SIG/AltArch community members.</p> <p>These are provided in the SIG directories.</p> <p>The git repository that contains the kickstart and other data related to the creation of these images are located at https://git.resf.org/sig_altarch/RockyRpi.</p> <p>For general quickstart information, checkout the readme for the images.</p> Version README (direct) Rocky Linux 8 for Raspberry Pi README Rocky Linux 9 for Raspberry Pi README"},{"location":"rocky/repo/","title":"Rocky Linux Repositories","text":"<p>There are several repositories that are provided by Rocky Linux and may differ between major releases. There are also community approved repositories as well, installable typically from the extras repository.</p>"},{"location":"rocky/repo/#about-enabled-and-disabled-repository-configuration-files","title":"About 'enabled' and 'disabled' repository configuration files","text":"<p>Please read <code>man 5 dnf.conf</code>, in particular the section of <code>enabled</code> under the <code>REPO</code> section. A line containing <code>enabled=0</code> or <code>enabled=1</code> will disable or enable a repository. This can also be modified using <code>dnf config-manager --set-enabled</code> or <code>--set-disabled</code>. When this is done, it is recommended to run <code>dnf clean all</code>.</p>"},{"location":"rocky/repo/#version-policy","title":"Version Policy","text":"<p>During a Rocky Linux minor release lifecycle as a package receives updates, the previous version will coexist in the repositories to allow a user to downgrade in case of a regression or other use cases (such as security only updates). Upon new minor release, all previous updates/versions that are not the latest are not carried over.</p> <p>Rocky Linux 9 does not currently support this policy and can be expected in a future Rocky Linux 9 version. Please see Peridot Issue #18.</p> <p>A more detailed explanation of the version policy can be found in our Version Guide.</p>"},{"location":"rocky/repo/#notes-on-difference-between-x-and-xy-in-mirrors","title":"Notes on: Difference between X and X.Y in mirrors","text":"<p>You may notice that on mirrors or our primary download location that there are X and X.Y directories. Rocky Linux sets the <code>releasever</code> dnf variable to the major version (e.g., 8, 9) rather than a minor version (8.6, 9.0, and so on). This effectively means that it will ask the mirror manager or configured baseurl for that version, which will always point to the latest available release at a given time. This helps simplify the user experience when installing software and updating systems throughout the life of a release.</p> <p>In the event a new release is available, the symlink is changed to point to the new directory, and mirror manager also undergoes changes to accomodate the new release, which should be transparent to most users.</p>"},{"location":"rocky/repo/#base-repositories","title":"Base Repositories","text":"<p>Each major release has a set of repositories that come default with the distribution. Below is a list of common repositories for each major release, including their repo id.</p> Repository repoid Rocky 8 Rocky 9 Enabled BaseOS baseos Yes Yes Yes AppStream appstream Yes Yes Yes PowerTools powertools Yes No No CRB crb No Yes No HighAvailability ha (8) / highavailibility Yes Yes No ResilientStorage rs (8) / resilientstorage Yes Yes No"},{"location":"rocky/repo/#notes-on-crb","title":"Notes on: CRB","text":"<p>CRB is \"Code Ready Builder\" - PowerTools was a carryover from CentOS, which is still the equivalent of CRB in RHEL. <code>crb</code> will be the repository name going forward in Rocky Linux and other derivatives starting with version 9. Rocky Linux 8 matches CentOS's use of PowerTools in order to be as compatible as possible with what users expect from a rebuild of version 8.</p>"},{"location":"rocky/repo/#notes-on-lack-of-updates-repo","title":"Notes on: Lack of \"updates\" repo","text":"<p>In older major versions, it was normal to have an \"updates\" repo. Fedora for example still follows this. However, in EL8, EL9, and likely so on, there is no \"updates\" repository. This means all updates happen as is in the same repository. So if <code>bash</code> receives an update, it will land in <code>baseos</code> as there is no updates repository.</p>"},{"location":"rocky/repo/#extra-repositories","title":"Extra Repositories","text":"<p>There are extra repositories offered by Rocky Linux.</p> Repository repoid Rocky 8 Rocky 9 Enabled Extras extras Yes Yes Yes Plus plus Yes Yes No RT (real time) rt Yes Yes No NFV nfv Yes Yes No SAP / SAP HANA sap / saphana No Yes No Devel / devel devel Yes Yes No"},{"location":"rocky/repo/#notes-on-extras","title":"Notes on: Extras","text":"<p>This repository contains packages that provide some additional functionality to Rocky without breaking upstream compatibility. For example, <code>rpaste</code> used for sending logs, configuration, or system information to our paste bin.</p> <p>These are not tested by upstream nor available in the upstream product.</p>"},{"location":"rocky/repo/#notes-on-plus","title":"Notes on: Plus","text":"<p>This repository contains packages that either:</p> <ul> <li>A) replace a core component via patched functionality</li> <li>B) build a component that was originally exclusive for one architecture (e.g., open-vm-tools built for x86_64 but not aarch64 in Rocky 8) or...</li> <li>C) providing packages that were built but not traditionally provided by upstream, and requested to be available by the community.</li> </ul> <p>Packages that fall under A and B will have a <code>.plus</code> added to their version tag. These are not tested nor available in the upstream product.</p>"},{"location":"rocky/repo/#notes-on-devel","title":"Notes on: Devel","text":"<p>The devel (development) repository are packages that are not normally provided in the base nor extra repositories for the purposes of providing dependencies or devel packages that may not be provided by upstream. As such, it is treated as a \"buildroot\" repository, as this repository may contain all packages that are provided for Rocky Linux. Additionally, the i686 architecture is provided for the cases of building multilib, as it is not a primary architecture released.</p> <p>This repository should only be enabled for package building/development purposes and should not be permanently enabled.</p>"},{"location":"rocky/repo/#notes-on-sig-repositories","title":"Notes on: SIG repositories","text":"<p>Some Special Interest Groups provide additional repositories that enhance the Enterprise Linux experience. These repositories are installable via <code>rocky-release-*</code> and <code>centos-release-*</code> packages found in the <code>extras</code> repository.</p> <p>All SIG repositories can be found here</p>"},{"location":"rocky/repo/#vault","title":"Vault","text":"<p>Previous releases, including ISOs and other images, are typically moved into a vault area of our tier 0 mirror once a new minor release version is available for at least a week. The vault can be found here.</p> <p>Note that these versions are not supported and not recommended for general use.</p>"},{"location":"rocky/repo/#community-approved-repositories","title":"Community Approved Repositories","text":"<p>As with Enterprise Linux and Fedora, there are additional community approved repositories for Rocky Linux. Below are repositories that are approved by Rocky Linux as well as the community.</p> Extra Packages for Enterprise Linux (EPEL) - EPEL is by for the most commonly used repository for Enterprise Linux. EPEL provides rebuilds of Fedora packages for every supported enterprise linux. Packages in this repository do not replace the base. You can install EPEL by running <code>dnf install epel-release</code> and the package will be installed from the extras repository. The package will automatically have EPEL enabled. Support for EPEL can be found in <code>#epel</code> on Libera. Community Enterprise Linux Repository (ELRepo) - ELRepo focuses on newer kernels and kmod driver packages to enhance hardware support for currently supported Enterprise Linux versions. This includes display, filesystem, network, storage drivers. You can install the necessary repo files by running <code>dnf install elrepo-release</code>. Note that the kernel repositories will have to be enabled. RPM Fusion - RPM Fusion provides software that the Fedora Project or Red Hat does not want to ship in Enterprise Linux and Fedora. These repositories do rely on EPEL. The policy is to not replace EPEL nor base packages. The free repository can be installed by running <code>dnf install rpmfusion-free-release</code>. Remi Repository - Remi maintains a large collection of RPMs, including latest versions of PHP, among other things. His FAQ can be found here. This is a collection of repositories. Using the <code>-safe</code> series of repositories will ensure that nothing from the base will be replaced or overwritten. However, be aware that these repositories do not play well with other third party repositories. You will need to use caution as you enable more repositories on your system. GhettoForge - GhettoForge provides packages not in other third party repositories. Packages that overwrite the base would be in the <code>gf-plus</code> repository. Please see usage for more information. Trinity Desktop Environment (TDE) - TDE provides Enterprise Linux packages for a KDE 3.5 style desktop environment. As of this writing, EL8 and EL9 repositories exist. You can find TDE support resources here. ZFS On Linux - The ZFS on Linux project is an implementation of OpenZFS, designed to work in a Linux environment. While this filesystem is very popular, it receives no testing or support from Rocky Release Engineering or Testing. Use at your own risk. Upstream centos-release-* - In the extras repository, there are <code>centos-release-*</code> packages that provide additional repositories from the Special Interest Groups of CentOS. As they are available in extras and should work on Rocky Linux, they are considered approved and community supported."},{"location":"rocky/repo/#notes-on-epel","title":"Notes on: EPEL","text":"<p>Using EPEL requires that the <code>CRB</code> or <code>PowerTools</code> repository is enabled on your system, as some EPEL packages depend on packages from that repo. There are multiple ways to enable the repository:</p> <ul> <li> <p>Using <code>dnf</code></p> <ul> <li>Rocky 8: <code>dnf config-manager --set-enabled powertools</code></li> <li>Rocky 9+: <code>dnf config-manager --set-enabled crb</code></li> </ul> </li> <li> <p>Modifying the repo files and setting <code>enabled=1</code></p> <ul> <li>Rocky 8: <code>/etc/yum.repos.d/Rocky-PowerTools.repo</code> under <code>[powertools]</code></li> <li>Rocky 9+: <code>/etc/yum.repos.d/rocky.repo</code> under <code>[crb]</code></li> </ul> </li> <li> <p>Running <code>dnf install epel-release</code> and then running <code>crb enable</code></p> </li> </ul> <p>We recommend checking out the EPEL Quickstart Guide for more information.</p>"},{"location":"rocky/repo/#notes-on-unlisted-repositories","title":"Notes on: Unlisted Repositories","text":"<p>If there is a repository that you use (or maintain) and you do not see it here, it is likely that we may not know of it. Unfortunately, this happens. If there are popular repositories that are used in the Enterprise Linux community that should be added to the list, you may drop us a line in Mattermost, IRC, or an issue to the wiki git repository.</p>"},{"location":"rocky/version/","title":"Rocky Linux Release Version Guide","text":"<p>This page goes over the Rocky Linux Release Versions, their support, timelines, and how it affects our users.</p>"},{"location":"rocky/version/#current-supported-releases","title":"Current Supported Releases","text":"<p>Below is a table of Rocky Linux versions, with accompanying general release and (planned or are planned) end of life dates.</p> Major Version Codename Release Date Active Support End of Life Latest Version Rocky Linux 8 Green Obsidian June 21, 2021 May 31, 2024 May 31, 2029 8.8 (May 30, 2023) Rocky Linux 9 Blue Onyx July 14, 2022 May 31, 2027 May 31, 2032 9.2 (May 20, 2023) <p>Click any of the tabs below to obtain more information about a current release.</p> Rocky Linux 8Rocky Linux 9 Version Release Kernel Release Date End of Life Supported 8.4 4.18.0-305 June 21, 2021 November 15, 2021 NO 8.5 4.18.0-348 November, 15 2021 May 15, 2022 NO 8.6 4.18.0-372.9.1 May 15, 2022 November 11, 2022 NO 8.7 4.18.0-425.3.1 November 11, 2022 May 20, 2023 NO 8.8 4.18.0-477.10.1 May 20, 2023 November, 2023 Yes Version Release Kernel Release Date End of Life Supported 9.0 5.14.0-70.13.1 July 14, 2022 November 26, 2022 NO 9.1 5.14.0-162.6.1 November 26, 2022 May 16, 2023 NO 9.2 5.14.0-284.11.1 May 16, 2023 November, 2023 Yes <p>See the timeline and release cadence sections below for more information on how these dates are determined.</p>"},{"location":"rocky/version/#timeline","title":"Timeline","text":"<p>For a major release of Red Hat Enterprise Linux and thus Rocky Linux, the following should be true:</p> <ul> <li>Major version is released with support of ten (10) years (exception is Rocky Linux 8, which started at 8.4)</li> <li> <p>Five (5) years of minor release updates</p> <ul> <li>There is generally one (1) major release with ten (10) minor release updates</li> <li>Minor releases come typically every six (6) months</li> <li>Minor releases generally come with new features, modules, and sometimes software rebases</li> </ul> </li> <li> <p>After five (5) years of minor releases, Enterprise Linux and derivatives go into maintenance only mode for the remainder of its life</p> </li> </ul>"},{"location":"rocky/version/#release-cadence","title":"Release Cadence","text":"<p>Based on the cadence set out by Red Hat, the months of May and November are generally when minor releases should be released. May is also generally when major releases arrive. Rocky Linux attempts to follow as closely as possible to this same cadence.</p> <p>Below is a general guideline (based on Red Hat documentation) for the \"full support\" cycle for an Enterprise Linux distribution.</p> Version Month .0 May .1 November .2 May .3 November .4 May .5 November .6 May .7 November .8 May .9 November .10 May <p>Upon a new minor release (<code>X.Y+1</code>), the previous Rocky Linux release is no longer supported and is moved to the vault.</p> <p>After <code>X.10</code> is released, the following may be true:</p> <ul> <li>Maintenance Mode starts for the next five (5) years</li> <li>No more minor releases; <code>X.10</code> is considered the final release version and only this receives updates until End of Life</li> <li>CentOS Stream X will cease development (likely before release)</li> </ul>"},{"location":"rocky/version/#version-policy","title":"Version Policy","text":"<p>Rocky Linux attempts to follow the same pattern as Red Hat Enterprise Linux. As such, releases aim to be as on time as possible as they are released upstream.</p> <p>For Rocky Linux 8, previous versions of packages will coexist in the repositories to allow a user to downgrade in case of a regression or other use cases (such as security only updates).</p> <p>Rocky Linux 9 does not currently support this policy and can be expected in a future Rocky Linux 9 version. Please see Peridot Issue #18.</p> <p>For all Rocky Linux versions: When a new minor release arrives, all previous updates/versions are not carried over.</p>"},{"location":"rocky/version/#general-update-timeline","title":"General Update Timeline","text":"<p>Updates for Rocky Linux are generally expected to be built and released between twenty-four (24) and fourty-eight (48) hours, assuming best effort allows the packages to build without any complications or unforeseen added dependencies by upstream mid-support cycle.</p> <p>Minor releases for Rocky Linux are generally expected to be built and released at least a week (7 days) after upstream, assuming best effort allows the packages to build without any complications and it passes the Testing Team OpenQA and general testing.</p>"},{"location":"rocky/version/#end-of-life-and-unsupported-release-policy","title":"End of Life and Unsupported Release Policy","text":"<p>A version of Rocky Linux is considered unsupported if:</p> <ul> <li>The Rocky Linux version has been superseded by another minor release or</li> <li>The Rocky Linux release is End of Life</li> </ul> <p>See the examples below.</p>"},{"location":"rocky/version/#example-an-unsupported-release","title":"Example: An Unsupported Release","text":"<p>When a new Rocky Linux minor release arrives (using version format <code>X.Y</code>, <code>Y+1</code> or an increment of <code>Y</code>) the following is true:</p> <ul> <li>The previous version is no longer supported by Release Engineering and the community</li> <li>This version is no longer updated and is moved to the vault</li> <li>This version does not receive bug fix nor security updates.</li> <li>You are recommended to update your system with <code>dnf update</code>.</li> </ul>"},{"location":"rocky/version/#example-an-end-of-life-release","title":"Example: An End of Life Release","text":"<p>When a Rocky Linux release has reached its End of Life date typically after ten (10) years (for example, May of 2029), the following is true:</p> <ul> <li>The release is no longer supported in full by Release Engineering and the community</li> <li>The final version is moved to the vault.</li> <li>This release no longer receives updates and thus no longer supported.</li> <li>You are recommended to install a supported Rocky Linux version and migrate your data.</li> </ul> <p>If you cannot install a new system and migrate and you still need support for your system or systems, you may be able to find a support provider. Note that support providers will maintain their own packages and policies outside of the Rocky Linux ecosystem, and thus their policies do not apply here. The release is still considered EOL and unsupported from the Rocky Linux point of view.</p>"},{"location":"rocky/version/#beta-to-stable-policy","title":"Beta to Stable Policy","text":"<p>Rocky Linux may release beta versions that are typically in line with the upstream Red Hat Enterprise Linux beta releases. These are released specifically to find bugs or issues in our build process as well as correlate the issues with the upstream beta in case they also have bugs. These are released typically to the Testing team members and others in the community (whether or not they're publicly announced) and are free to download and test by anyone else.</p> <p>When the stable version is released, updating from the beta to the stable version is not a supported nor recommended system setup.</p> <p>The following is unsupported:</p> <ul> <li>Updating from a stable release to beta release</li> <li>Updating from a beta release to stable release</li> </ul>"},{"location":"rocky/version/#upgrade-policy","title":"Upgrade Policy","text":"<p>Upgrades are not generally supported by Release Engineering nor most of the Rocky community. If you wish to perform upgrades between releases, there is a tool called ELevate that can help you. But as a note of caution, this has not been formally tested and we cannot provide official assistance.</p>"},{"location":"special_interest_groups/","title":"Special Interest Groups","text":"<p>Special Interest Groups are a core piece of the Rocky Linux community, in which various members of these groups can extend the Enterprise Linux experience, by way of packages, images, or other community engagement.</p> <p>For the case of the wiki, Special Interest Groups are recommended not to have direct wiki pages, but instead maintain their own set of Git generated pages in the form of a wiki (such as with mkdocs or hugo).</p> <p>This page and section will serve as an overview. See the SIG Guide section for specific information such as proposing a SIG, content management, and so on.</p>"},{"location":"special_interest_groups/#current-sigs","title":"Current SIGs","text":"<p>This section goes over the current SIGs that may have sponsors and are active or has community interest.</p>"},{"location":"special_interest_groups/#some-that-may-be-established-with-sponsorsmembers","title":"Some that may be established with sponsors/members","text":"SIG Purpose Core Rocky Linux maintainers, packagers, and developers. It is primarily a mix of Release Engineering and Infrastructure. Cloud Cloud images and infrastructure - May work upstream with Stream for openstack and others as well. AI Rocky Linux Ecosystem for AI, ML, Data Science &amp; BigData. AltArch Maintains alternative architectures that are not directly supported by Rocky Linux or maintains devices of primary architectures such as the raspberry pi Desktop Supports and maintains the desktop experience for Rocky Linux Embedded Embedded Systems Legacy Supports and maintains legacy hardware support for Rocky Linux HPC Maintains High Performance Computing support for Rocky Linux Hyperscale Hyperscale Computing"},{"location":"special_interest_groups/#some-that-have-community-interest-but-no-direct-sponsors-yet","title":"Some that have community interest, but no direct sponsors yet","text":"SIG Purpose Database Databases of all shapes, sizes, and use cases Kernel Kernels, mainline or otherwise Leapp Focuses on the leapp framework to facilitate upgrades between major versions of Rocky"},{"location":"special_interest_groups/#sig-requirements","title":"SIG Requirements","text":"<p>We expect SIGs to satisfy some basic requirements, such as:</p> <ul> <li>The group should be related to Rocky, a use-case for Rocky or Enterprise Linux, or related to Enterprise Linux as a whole</li> <li>There must be feedback and control into the Rocky community</li> <li>All communication as to the work of the SIG should be public - Some matters may have to be private, and as such should be out of band<ul> <li>It is expected that each SIG will have a public channel as <code>SIG/name</code> in mattermost. Optionally an IRC or Matrix channel can also be assigned.</li> </ul> </li> <li>Code produced within the SIG must be compatible with a FOSS license presently used by Rocky - If a new license is wanted, consult with Release Engineering/Core or the <code>~Legal</code> channel in mattermost.</li> <li>All documentation and information of the SIG should be on a wiki produced in the RESF Git Service.</li> <li>All documentation produced within the SIG must be a compatible documentation license</li> <li>Groups should be aware/watchful of the direction from the Release Engineering team/Core as it can affect how SIGs operate if they are producing compiled software.</li> </ul>"},{"location":"special_interest_groups/#sig-wiki","title":"SIG Wiki","text":"<p>Each SIG should have a wiki that will have documentation for their particular group as well as information on how the group operates. Required information should be as follows:</p> <ul> <li>An \"about\" section on the index that explains what the group does/a group description</li> <li>Mission Statement</li> <li>How to Contribute</li> <li>Meeting Information (time, location, other information that they feel is important)</li> <li>Policies and Resources, if applicable</li> </ul>"},{"location":"special_interest_groups/#sig-membership-and-participation","title":"SIG Membership and Participation","text":"<p>The following rules apply for SIG membership:</p> <ul> <li>Mailing lists of SIGs are open and can be joined freely</li> <li>SIG members are appointed/approved by SIG sponsors/leaders - The sponsors/leaders typically have write permissions to relevant wikis and git repos</li> <li>SIG sponsors/leaders may be asked to be a mailing list moderator</li> <li>SIG channels will be public under a name such as <code>SIG/name</code> with an optional IRC and Matrix channel to be bridged.</li> <li>Optionally: define if work with CentOS Stream will be applicable for the SIG</li> </ul>"},{"location":"special_interest_groups/#sig-reporting","title":"SIG Reporting","text":"<p>SIGs are expected to report at least quarterly, with a brief summary of what they've accomplished. A suggested outline:</p> <ul> <li>Membership update (members joined or parted, sponsor/leader changes)</li> <li>Releases in the current quarter (or previous quarter if no releases)</li> <li>General activity or health report</li> <li>Issues to address within the SIG</li> </ul>"},{"location":"special_interest_groups/#joining-a-sig","title":"Joining a SIG","text":"<p>Joining an established Special Interest Group should be simple. Each SIG will have its own process and outlines. Please see sponsors or other members of the Special Interest Group you're interested in if a wiki or other documentation is not available.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/","title":"SIG Guide Overview","text":"<p>Special Interest Groups are a core piece of the Rocky Linux community, in which various members of these groups can extend the Enterprise Linux experience, by way of packages, images, or other community engagement. Special Interest Groups are typically smaller groups within the main community for the distribution, with specific work on or awareness around a topic related to Rocky Linux and potentially the Enterprise Linux Community as a whole.</p> <p>This guide is for anyone in the Rocky community who are interested in starting, managing, working on/contributing to a Special Interest Group.</p> <p>Note that this guide is always evolving. Each guide page will have references to the resources at the bottom of each page. The list of pages in this guide are listed below:</p> <ul> <li>Proposing a SIG</li> <li>Managing Content</li> <li>Building Packages</li> <li>Automated Testing</li> <li>Releasing Packages</li> </ul> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/build/","title":"Building Packages","text":"<p>This section goes over building your packages/content in the Community Build System.</p>"},{"location":"special_interest_groups/sig_guide/build/#cbs-community-build-system","title":"CBS (Community Build System)","text":"<p>The Community Build System is an extension of Peridot, the build system that is used to build Rocky Linux. Users have an opportunity to use this build system for themselves (like OBS or Copr) or as part of a Special Interest Group.</p>"},{"location":"special_interest_groups/sig_guide/build/#building-in-the-cbs","title":"Building in the CBS","text":"<p>TBD</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/content/","title":"Managing Content","text":"<p>This section goes over how to manage content in git and the community build system.</p>"},{"location":"special_interest_groups/sig_guide/content/#importing-to-the-resf-git-service","title":"Importing to the RESF Git Service","text":"<p>All Special Interest Groups get an organization created in the RESF Git Service. Each organization will have a <code>meta</code> repository that can track issues or requests for the SIG as a whole. This is not a requirement and each SIG can dictate how issues or requests are handled.</p> <p>All Special Interest Groups also get a <code>wiki</code> repository in which they can manage their documentation and content for their <code>sig-X.rocky.page</code> website.</p> <p>There is no strict requirement on what repositories should and should not exist. It is up to the discretion of the SIG.</p>"},{"location":"special_interest_groups/sig_guide/content/#importing-to-the-rocky-linux-gitlab","title":"Importing to the Rocky Linux GitLab","text":"<p>Special Interest Groups that build and release packages will have a subgroup under <code>SIG</code>. This subgroup will have additional subgroups, <code>src</code>, <code>rpms</code>, <code>modules</code>.</p> <p>Additional Subgroups</p> <p>While this is the default layout, additional subgroups can be made at the root of the SIG group. It is expected that some SIG's may not have plans to build packages as they could have an entirely separate focus.</p> <p>Examples and Inspiration</p> <p>If you are ever confused on designing your imports and packages, you may look into other sig's or even Rocky Linux itself in the <code>staging</code> group.</p>"},{"location":"special_interest_groups/sig_guide/content/#src","title":"src","text":"<p>This area is typically for the rpm sources (spec file, metadata file, and so on), with support for dist-git/src-git coming soon. While this area is optional, it is highly likely you will be using it for managing rpm sources, and uploading the tarball sources to the lookaside.</p> <p>For the case of rpm sources, which is the most standard usage, imports start here. When an import occurs, these would appear in <code>rpms</code> as long as the peridot catalog configuration is made aware. Note that all rules from the <code>rpms</code> section below apply.</p> <p>rpm rules</p> <p>To repeat: All rules from the <code>rpms</code> section below apply. Please ensure that you read carefully.</p>"},{"location":"special_interest_groups/sig_guide/content/#rpm-format-rules","title":"RPM Format Rules","text":"<p>The expectation is that you will be designing repositories to be imported here in majority of cases. As this is likely, this is the expected format:</p> <p>The expected format is:</p> <ul> <li><code>SOURCES/...</code> -- light text files, scripts, patches, etc can come here (e.g., ones not in a tar ball)</li> <li><code>SPECS/name.spec</code> -- Your spec file comes here - note it should only be one spec file</li> <li><code>.name.metadata</code> -- Required, lists your source archives or otherwise that will be in lookaside. Empty if there are no sources to pull from lookaside.</li> </ul> <p>The metadata file format is expected to be:</p> <pre><code>SHA256SUM_STRING SOURCES/some_name\n</code></pre> <p>The left column is generally a hashed sum of the archive. This is the name of the file in lookaside. The right side is where the archive will be the location and name of where it will be copied to. For example, the <code>ipa</code> package source name is a sum in lookaside, and during processing, it will be renamed and copied to <code>SOURCES/freeipa-4.9.6.tar.gz</code>:</p> <pre><code>b7b91082908db35e4acbcd0221b8df4044913dc1 SOURCES/freeipa-4.9.6.tar.gz\n</code></pre> <p>Ensure that you are also using the correct branch names. See the <code>Branch Names</code> section later in this guide for further details.</p>"},{"location":"special_interest_groups/sig_guide/content/#rpms","title":"rpms","text":"<p>This area is specifically used for rpm sources (spec file, patches, light text files, and so on). This is where \"imports\" will occur and no manual intervention or manual commits are necessary. Any manual changes made will never be picked up by the build system.</p>"},{"location":"special_interest_groups/sig_guide/content/#modules","title":"modules","text":"<p>This area is specifically used for modularity. If you plan on maintaining multiple versions of a package and want to use modularity, this is the place to do it. The branch names should always match with rpms. For example, say your module is <code>idm</code> and you have a stream named <code>DL1</code>. The branch could be <code>rX-stream-DL1</code>.</p> <p>The name of the module does not necessarily have to match the actual package or package names. For example, the idm module. There is no package named <code>idm</code>, but each package as part of the module has the correct branch names as referenced in the source yaml for the module.</p> <p>The format expected:</p> <ul> <li><code>SOURCES/modulemd.src.txt</code> -- This is the initial module yaml data that will be transformed name.yaml. See this for an example.</li> <li><code>.name.metadata</code> - Just like rpms, a metadata file is required, even though it will be empty.</li> </ul> <p>As of this writing, the <code>name.yaml</code> file generated in the root may be done by the Rocky Automation account.</p>"},{"location":"special_interest_groups/sig_guide/content/#branch-names","title":"Branch Names","text":"<p>Branch naming is important. main is NOT an acceptable branch name under any cirumstances.</p> <p>You must use <code>rX</code> as the prefix, <code>X</code> being the major version number. All packages that are part of a SIG and will be in a peridot project together must have matching branch names.</p> <p>To support multiple versions, there will need to be multiple projects and branches need to be named appropriately. Multiple versions of a package cannot coexist in a single peridot project.</p>"},{"location":"special_interest_groups/sig_guide/content/#multiple-versions-multiple-projects","title":"Multiple Versions + Multiple Projects","text":"<p>There may be cases where:</p> <ul> <li>Multiple version of a package will exist in some form and/or</li> <li>Although the cases may be rare, sets of packages may not coexist with others and live in completely separate projects.</li> </ul> <p>If this applies to your SIG, you can use branch names and the proper configuration in peridot to make this separation possible. The names of the branches are used to separate packages if need be. See the ideal template:</p> <p><code>rX-sig-SIGNAME-VERSION</code></p> <ul> <li><code>rX-sig</code> is considered the SIG prefix</li> <li><code>SIGNAME</code> would be the name of the SIG (for example, <code>kernel</code>)</li> <li><code>VERSION</code> is required. This can be numerical or simply another name/acronym.</li> </ul> <p>Examples:</p> <pre><code>* Kernel SIG for kernel 5.15 (Rocky Linux 8): r8-sig-kernel-5.15\n* Kernel SIG for kernel 5.15 (Rocky Linux 9): r9-sig-kernel-5.15\n* Kernel SIG for kernel 6.1 on (Rocky Linux 8): r8-sig-kernel-6.1\n* Kernel SIG for kernel 6.1 on (Rocky Linux 9): r9-sig-kernel-6.1\n</code></pre>"},{"location":"special_interest_groups/sig_guide/content/#tagging","title":"Tagging","text":"<p>In the case of an rpm or a module, there should be tags associated, otherwise the build system may not pick up your builds. The general format for tags are as follows:</p> <ul> <li>RPM: <code>imports/rX[-SIGNAME-VERSION]/NEVR</code> (for example, <code>imports/r8/bash-4.4.20-2.el8</code> is acceptable)</li> <li> <p>Note: You cannot choose a tag/branch destined for one rocky release and build on another. Ensuring your tags and branches are in alignment will generally make things easier for you and other maintainers.</p> </li> <li> <p>Module: <code>imports/rX-stream-STREAM_NAME_OR_VERSION/MODULE_NAME-STREAM_NAME_OR_VERSION-X0Y00YYYYMMDDHHMMSS.ZZZZZZZZ</code></p> </li> <li>Note: X is the major version, Y is the minor version. MODULE_NAME and STREAM_NAME_OR_VERSION are required. Ensure you fill out the timestamp as appropriate. You may fill in the final Z's with a portion of the commit hash that you are using for the tag.</li> <li>Example: <code>imports/r8-stream-1.4/389-ds-1.4-8060020220204145416.ce3e8c9c</code></li> </ul>"},{"location":"special_interest_groups/sig_guide/content/#peridot-project-configuration","title":"Peridot Project Configuration","text":""},{"location":"special_interest_groups/sig_guide/content/#peridot-config-repository","title":"peridot-config repository","text":"<p>Each Special Interest Group will need a repository called <code>peridot-config</code> which will contain the content of the special interest group. This helps identify what repositories will exist and what exists in each repository. The default file is <code>catalog.cfg</code>. Below is just a simple example using SIG/Core.</p> <pre><code># kind: resf.peridot.v1.CatalogSync\npackage {\n  name: \"some-core-tool\"\n  type: PACKAGE_TYPE_NORMAL_SRC\n  repository {\n    name: \"core-common\"\n    include_filter: \"core-tool-mgt.noarch\"\n    include_filter: \"core-tool-keys.noarch\"\n  }\n}\n\npackage {\n  name: \"some-infra-tool\"\n  type: PACKAGE_TYPE_NORMAL_SRC\n  repository {\n    name: \"core-infra\"\n    include_filter: \"infra-tool-mgt.x86_64\"\n    include_filter: \"infra-tool-mgt.aarc64\"\n    include_filter: \"infra-tool-mgt.s390x\"\n    include_filter: \"infra-tool-mgt.ppc64le\"\n    include_filter: \"infra-tool-keys.noarch\"\n  }\n}\n</code></pre> <p>Below was a SIG/Cloud example.</p> <pre><code># kind: resf.peridot.v1.CatalogSync\nexclude_filter {\n  repo_match: \"^cloud-common$\"\n  arch {\n    key: \"*\"\n    glob_match: \"kernel-debug-devel-matched\"\n  }\n}\npackage {\n  name: \"kernel\"\n  type: 2\n  repository {\n    name: \"cloud-common\"\n    # use an include filter, then exclude same NA to force an empty repo\n    include_filter: \"kernel-debug-devel-matched.aarch64\"\n  }\n  repository {\n    name: \"cloud-kernel\"\n    include_filter: \"kernel-debug-devel-matched.aarch64\"\n    include_filter: \"kernel-debug-devel.aarch64\"\n. . .\n  }\n}\n</code></pre>"},{"location":"special_interest_groups/sig_guide/content/#dist-tags","title":"Dist Tags","text":"<p>It is expected that your SIG will have a \"shorthand\" name assigned to you (either by core or yourself during the proposal). This name will be part of the <code>dist</code> macro that gets applied to your builds in Peridot, which serve as identifiers of where the package was built and who the package was built for. Because of this, it is a requirement that the group project's packages all have it set for the entire scope of the group. For example, if the SIG's name is \"Messaging and Communication\", the shorthand would be \"mc\", and an example package would be named:</p> <p><code>erlang-22.0.7-1.el9.mc.x86_64.rpm</code></p> <p>Some single word SIGs can be abbreviated too. Like <code>hyperscale</code> can become <code>hs</code>. There may be cases where this isn't possible and exceptions can be granted. <code>cloud</code> is an example of this.</p> <p>Note: In majority of cases, this will be configured for the SIG and won't be user modifiable for consistency purposes.</p> <p>More examples of dist tags are below:</p> SIG Dist Tag altarch elX.altarch cloud elX.cloud core elX.core hyperscale elX.hs"},{"location":"special_interest_groups/sig_guide/content/#importing-to-s3","title":"Importing to S3","text":"<p>TBD. Please work with a member of Release Engineering or SIG/Core for assistance for now. In a future peridot version, there should be more capabilities to enable users further.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/proposal/","title":"Proposing a SIG","text":"<p>This page goes over proposing a Special Interest Group for the Rocky ecosystem. Anyone can propose or participate in a Special Interest Group.</p>"},{"location":"special_interest_groups/sig_guide/proposal/#proposal","title":"Proposal","text":"<p>Creating a new Special Interest Group requires participation from a member of the Rocky teams or a member of the Rocky Linux project board. A SIG must meet these requirements:</p> <ul> <li>The group should be related to Rocky or a use-case for Rocky or Enterprise Linux as a whole</li> <li>There must be feedback and control into the Rocky community</li> <li> <p>All communication as to the work of the SIG should be public - Some matters may have to be private, and as such should be out of band</p> <ul> <li>It is expected that each SIG will have a public channel as <code>SIG/name</code> in mattermost. Optionally an IRC channel can also be assigned.</li> </ul> </li> <li> <p>Code produced within the SIG must be compatible with a FOSS license presently used by Rocky and upstream - If a new license is wanted and is not available in the upstream list, consult with Release Engineering/Core or <code>~Legal</code> in Mattermost.</p> </li> <li> <p>All documentation produced within the SIG must be a compatible documentation license.</p> <ul> <li>The group will receive a wiki that they can manage their documentation and group information on the RESF Git Service (using <code>sig-X.rocky.page</code> domain)</li> </ul> </li> <li> <p>Groups should be aware/watchful of the direction from the Release Engineering team/Core as it can affect how SIGs operate if they are producing compiled software.</p> </li> <li>A member of the SIG should also come from the Core/RelEng team, in the case that the SIG produces packages for use on a Rocky system.</li> <li>General reports, requests, and communication, on at least a quarterly basis, will be required with the Rocky Linux project board</li> </ul> <p>It is also highly recommended to have packaged software (if applicable) to present in the proposal, e.g. on a Fedora Copr project or another setting.</p>"},{"location":"special_interest_groups/sig_guide/proposal/#proposal-process","title":"Proposal Process","text":"<p>It is up to the requestor to:</p> <ul> <li>Check and verify that the topic of interest is already covered by an existing Special Interest Group within Rocky or CentOS Stream</li> <li> <p>Post an introductory RFC message:</p> <ul> <li>As an email to the rocky-devel mailing list and ask for comments or...</li> <li>As a message to <code>SIG/general</code> in mattermost</li> </ul> </li> </ul> <p>Upon approval or general acceptance, it is up to the requestor or a Core/RelEng member to open a ticket for creating the initial resources at the SIG/Core Tracker using a predefined template. Click \"New Issue\" and then choose \"Get Started\" for \"Requests for SIG Proposal\", which will take you to the template to fill out, which includes:</p> <ul> <li>An introduction of yourself and the request for resources for the SIG</li> <li>The initial proposal (this can be a copy and paste of the original proposal or another version related to the original request)</li> <li>The initial asks, such as groups in Rocky Account Services, RESF Git Service Organization, channels in mattermost, and a release package if required</li> <li>A checklist, which includes that you have read this guide                                                                                                                                                        </li> </ul>"},{"location":"special_interest_groups/sig_guide/proposal/#acceptance","title":"Acceptance","text":"<p>Upon acceptance, the request for resources will be completed and the ticket will be closed out.</p> <p>(To be continued)</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/release/","title":"Releasing Packages","text":""},{"location":"special_interest_groups/sig_guide/release/#release","title":"Release","text":""},{"location":"special_interest_groups/sig_guide/release/#rocky-release-packages","title":"rocky-release packages","text":"<p>It is expected with Special Interest Groups that are delivering packages to have associated release packages that provide:</p> <ul> <li>Repo file(s) for dnf</li> <li>GPG key associated with the signing of your packages</li> </ul> <p>Key/Package Restrictions</p> <p>The Special Interest Group cannot submit a key nor can they have access to the private key. A SIG cannot submit their own release package.</p> <p>During the initial request process, a GPG key is assigned to you in the build system to be used to sign your packages. A release package must be requested to be built and submitted to the extras repository. In the event that a release package was not requested nor fulfilled during the initial request, a new request can be opened at SIG/Core Issues.</p> <p>When submitting the request, click on the \"New Issue\" button and then click \"Get Started\" for \"Requests for SIG Release Package\" and fill out the template as shown, which includes:</p> <ul> <li>An introduction of yourself and the request for the release package</li> <li>Number of repositories and names</li> <li>Note if there are plans for multiple versions of software</li> <li>Note if there are modularity repositories</li> <li>Which major versions you are targeting (Rocky Linux 8, 9, and so on)</li> <li>Other details if needed</li> </ul>"},{"location":"special_interest_groups/sig_guide/release/#releasing-packages-for-your-sig","title":"Releasing Packages for your SIG","text":"<p>TBD. As of now, releasing requires feedback to SIG/Core / Release Engineering to push out to mirrors.</p>"},{"location":"special_interest_groups/sig_guide/release/#directory-format-for-repositories-informational","title":"Directory Format for Repositories (Informational)","text":"<p>This is informational more than anything, but it is important for a SIG to know where their exported repositories will live.</p> <p>Repositories will be formatted as such:</p> <p><code>/pub/sig/MAJOR/NAME/ARCH/PKG_OR_REPO</code></p> <p>This basically means that the sig directory will live along side the main distribution directories, potentially at the root a mirror. At <code>/pub/rocky</code> you'll see each supported major version. At <code>/pub/sig</code> you'll also see major versions, with a different structure. Let's break it down.</p> <ul> <li><code>NAME</code> can be the name of the SIG or the abbreviation code (eg, cloud, kernel, mcs)</li> <li><code>MAJOR</code> is the major version that's being targeted (8, 9, so on)</li> <li><code>ARCH</code> is for the architecture</li> <li><code>PKG_OR_REPO</code> could be for the specific set of packages of just any repository. (For example, you could have a \"common\" directory alongside the others)</li> </ul> <p>Let's say for the sake of the example we need some repositories for mcs and we build for x86_64 and aarch64. It could look like this. This assumes the messaging and communication SIG has not only an ejabberd repository, but also a \"common\" repository that is perhaps shared with ejabberd and potentially another set of packages in the future.</p> <pre><code>.\n\u251c\u2500\u2500 rocky\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 8\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 9\n\u2514\u2500\u2500 sig\n    \u251c\u2500\u2500 8\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 aarch64\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 ejabberd\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs-common\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 x86_64\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 ejabberd\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 mcs-common\n    \u2502\u00a0\u00a0             \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0             \u2514\u2500\u2500 repodata\n    \u2514\u2500\u2500 9\n        \u2514\u2500\u2500 mcs\n            \u251c\u2500\u2500 aarch64\n            \u2502\u00a0\u00a0 \u251c\u2500\u2500 ejabberd\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n            \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs-common\n            \u2502\u00a0\u00a0     \u251c\u2500\u2500 Packages\n            \u2502\u00a0\u00a0     \u2514\u2500\u2500 repodata\n            \u2514\u2500\u2500 x86_64\n                \u251c\u2500\u2500 ejabberd\n                \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n                \u2514\u2500\u2500 mcs-common\n                    \u251c\u2500\u2500 Packages\n                    \u2514\u2500\u2500 repodata\n</code></pre>"},{"location":"special_interest_groups/sig_guide/release/#mirror-list-queries-informational","title":"Mirror List Queries (Informational)","text":"<p>Queries to a mirror list for SIG repositories will be like the standard calls, but repo names will have a format of <code>sig-NAME-MAJOR</code>. <code>NAME</code> can be a simple SIG name or abbreviate or a combination, for example, <code>sig-mcs-common</code> or <code>sig-cloud</code>.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/testing/","title":"Automated Testing","text":"<p>This page is currently TBD. The new build system is planned to have testing and the testing team may have options in the future.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"team/","title":"Teams","text":""},{"location":"team/#about","title":"About","text":"<p>This section of the wiki is for core team specific documentation pages. It is not meant for SIG documentation.</p> <p>Use the navigation bar to the left or the links below to find team specific documentation.</p> <p>Infrastructure Team</p> <p>Release Engineering Team</p> <p>Testing Team</p> <p>Design Team</p> <p>Community Team</p>"},{"location":"team/community/","title":"Community Team","text":""},{"location":"team/community/#about","title":"About","text":"<p>The Community Team is responsible for interacting with and maintaining the Rocky Linux Community, in accordance with the Charter and By-Laws of the project.</p> <p>Everyone who is part of Rocky Linux is a member of the Community team, and is charged with upholding the standard of our community, specifically: being curteous and treating all people--within and without the RESF--with respect. While discourse is often necessary in projects with multiple voices, it is our responsibility to remember we are all human and are working together for the good of the community overall.</p> <p>In addition to the above, the community team runs outreach for Rocky, including managing social channels, moderating mailing lists, and more. This is an area that is always in need of participation and we welcome anyone who would like to be part of it.</p>"},{"location":"team/community/#management","title":"Management","text":"<p>This team is lead by Brian Clemens and Gregory Curtzer, along with all the Team Leads.</p>"},{"location":"team/community/#contact","title":"Contact","text":""},{"location":"team/community/#email","title":"Email","text":"<p>hello@rockylinux.org</p>"},{"location":"team/community/#mattermost","title":"Mattermost","text":"<p>Community</p>"},{"location":"team/community/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Team Lead / Community Manager Krista Burdine krista@resf.org @grammaresque grammaresque Star Trek Meme Officer Neil Hanlon neil@resf.org @neil neil"},{"location":"team/community/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Community Team in any capacity above membership, we ask that you join and begin supporting the community. If you want to work on a specific task such as social media, outreach, or anything else you can think of, bring it up in chat and we'll work with you to help guide your contribution.</p>"},{"location":"team/design/","title":"Design Team","text":""},{"location":"team/design/#about","title":"About","text":"<p>The Design team handles Rocky Linux branding and design.</p>"},{"location":"team/design/#management","title":"Management","text":"<p>This team is lead by Michael Kinder.</p>"},{"location":"team/design/#contact","title":"Contact","text":""},{"location":"team/design/#email","title":"Email","text":"<p>design@rockylinux.org</p>"},{"location":"team/design/#mattermost","title":"Mattermost","text":"<p>Design</p>"},{"location":"team/design/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Design Team Lead Michael Kinder mkinder@rockylinux.org @ressonix ressonix"},{"location":"team/design/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Design Team as a Deputy, we ask that you start making contributions, engaging with the lead in the Mattermost channel, and engaging with the community.</p>"},{"location":"team/design/branding/","title":"Branding","text":""},{"location":"team/design/branding/#brand-kit","title":"Brand Kit","text":"<p>Download</p> <p>Please refer to the included Brand &amp; Trademark Usage Guide to ensure that you follow our brand and trademark policies. If you have questions, concerns, or comments, please send an email to design@rockylinux.org.</p>"},{"location":"team/design/branding/#trademark-usage-policy","title":"Trademark Usage Policy","text":"<p>This is a statement of Rocky Enterprise Software Foundation's (RESF) trademarks and its policy and guidelines relating to use of trademarks owned by RESF and used by projects under RESF.</p> <p>For purposes of this document, references to trademarks or marks include all trade and service marks and logos owned by the RESF legal entity. Projects operating as separately incorporated entities managed by RESF have their own trademarks, policies and usage guidelines.</p>"},{"location":"team/design/branding/#rocky-enterprise-software-foundations-trademarks","title":"Rocky Enterprise Software Foundation's Trademarks","text":"<p>Rocky Enterprise Software Foundation has registrations pending or trademarks in use for the following marks in the United States and/or other countries:</p> <ul> <li>Rocky Enterprise Software Foundation\u2122</li> <li>RESF\u2122</li> <li>Rocky Linux\u2122</li> </ul>"},{"location":"team/design/branding/#resf-trademark-usage-guidelines","title":"RESF Trademark Usage Guidelines","text":"<p>Trademarks are used to provide assurance to the community of consistency with respect to the quality of products or services with which the mark is associated. This policy attempts to strike the proper balance between two competing interests: 1) the need of the RESF to ensure that its trademarks remain reliable indicators of the qualities that they have been created to preserve and 2) the need of RESF to ensure that community members are able to discuss the projects with which RESF is associated and to accurately describe the relationship between RESF and the products and services offered by others.</p> <p>A trademark provides the owner with an exclusive right to authorize or control the use of the mark. Your right to use a mark of RESF is provided for in this policy and in the statement of permitted use, if any, that may accompany the trademark notice displayed on the website dedicated to the project. A copyright license, even an open source copyright license, does not include an implied right or license to use a trademark that may be related to the project developing the licensed software or other materials. Because open source licenses permit unrestricted modification of the copyrighted software, and RESF has no intention of interfering with that right, your right to use any specific trademark of RESF is not determined by your use of software made available under an open source license. Your right to use a mark is conditioned upon conforming to other requirements that are directly related to the qualities that the specific mark has been created to preserve.</p> <p>Proper use of RESF trademarks by following these trademark guidelines protects the value of RESF trademarks. Any use of or reference to RESF trademarks that is inconsistent with this trademark policy, or use of marks that are confusingly similar to trademarks of RESF, is prohibited. All uses of RESF trademarks, and all goodwill associated therewith, will inure solely to the benefit of RESF.</p>"},{"location":"team/design/branding/#rules-that-apply-to-trademarks-in-general","title":"Rules That Apply to Trademarks in General","text":"<p>There are some basic rules that apply to any use of any trade or service mark that you do not own, including any mark of RESF, without the express permission of the owner.</p> <ul> <li>A trademark should never be used as a verb or a noun. A trademark should be used only as an adjective followed by the generic name/noun.</li> <li>A trademark should not be used in the plural or possessive form.</li> <li>A trademark should not be altered or amended in any way. A mark should not be combined with any other mark, hyphenated, abbreviated or displayed in parts. A trademark that is depicted as two or more words should not be compressed into one word. A logo should not be displayed with color variations, or with other elements superimposed on top of the logo.</li> <li>A trademark should not be used as your domain name or as part of your domain name.</li> <li>A trademark should not be incorporated into your company\u2019s logos or designs.</li> <li>A trademark notice should be used on the most prominent and/or first appearance of each mark of RESF, and a trademark notice should not be changed. In particular, a \u2122 should not be changed to a \u00ae in a trademark notice by anyone other than the owner. Alternatively, or as a supplement to the \u00ae, \u2122, or common law notices, a footnote or text notice with one of the alternative statutory notices is good practice: \u201cX is a trademark of the Rocky Enterprise Software Foundation.\u201d If you are unsure about whether a mark of RESF is registered in your country, please contact us for additional guidance as to what trademark symbol you should use.</li> </ul> <p>There are also some basic rights that everyone has to use any trademark, which are often referred to as \"fair use,\" and RESF does not intend to restrict those rights. You may make fair use of word marks to make true factual statements. But fair use does not permit you to state or imply that the owner of a mark products, endorses, or supports your company, products, or services. Even when making fair use of a trademark, you should acknowledge the owner of the trademark with a trademark notice, such as the notice displayed on RESF project websites.</p>"},{"location":"team/design/branding/#rules-and-policies-applicable-to-marks-owned-by-resf","title":"Rules and Policies Applicable to Marks Owned by RESF","text":"<p>In addition to the generally applicable rules discussed above, there are a few specific rules that we ask everyone to follow when using trademarks owned by RESF.</p> <ul> <li>Use the full form of any trademark (e.g., \u201cRocky Enterprise Software Foundation\u201d) in the first reference in all documents of mass communication, including marketing collateral and web pages. You may then use any abbreviated or short form references (e.g. \u201cRESF\u201d) within the same document where the full form has already been used.</li> <li>Use RESF\u2019s trademarks in a form that distinguishes them from the text around them, such as by capitalization, bold or italic fonts, or with quotation marks. Any use of unregistered trademarks as listed in the Trademark List above should include a \u2122 immediately after the first usage (e.g., \u201cThe Rocky Linux\u2122 community seeks to secure\u2026\u201d)</li> <li>Do not use RESF trademarks in a manner that would disparage RESF or its projects (e.g., untruthful advertising, false/misleading promotional materials, etc.).</li> <li>Do not use a RESF logo on the cover of a book or magazine without written permission from RESF.</li> <li>Do not use a logo of RESF on posters, brochures, signs, websites, or other marketing materials to promote your events, products or services without written permission from RESF.</li> <li>Do not refer to a product or service as being certified under any of RESF\u2019s marks unless your company has successfully undergone the requisite compliance testing and has explicit authorization to use such terms from RESF.</li> <li>Do not attempt to claim or assert any ownership rights in any mark of RESF and do not attempt to register any RESF trademark as a trademark, trade name, domain name, or \u201cdoing business as\u201d name, alone or (unless specifically licensed) in combination with your own trademarks.</li> <li>Do not use any RESF trademark in metatags, search fields, hidden text, or any other form that has the purpose or effect of diverting or confusing consumers without RESF\u2019s prior written permission.</li> <li>Do not adopt marks or logos that are confusingly similar to any RESF trademarks.</li> <li>Do not use RESF trademarks for products or services for which they were not originally intended.</li> <li>Do not alter a RESF trademark in any way.</li> </ul> <p>RESF marks have been created and their use is expressly permitted for a specific purpose. Do not use logos or names of RESF in any commercial or marketing context other than as expressly permitted in this policy unless you have obtained explicit written permission from RESF to do so. RESF permits the use of its trademarks for private and personal use to make t-shirts, stickers, and caps for yourself and your friends (meaning people from whom you don't receive anything of value in return) in a manner that is consistent with the preservation of the goodwill and value of the mark. The goodwill, if any, derived from your use of any RESF trademarks exclusively inures to the benefit of and belongs to the RESF.</p> <p>You are also allowed to use a trademark or logo of RESF as a link to the home page of the applicable project or to a web page on the RESF web site that is relevant to the reference so long as the link is in a manner that is consistent with the preservation of the goodwill and value of the mark. The link and all other usage of a logo of RESF shall be done using the official versions of RESF logos obtained from RESF or its projects.</p> <p>For examples of incorrect uses of a logo of RESF, please refer to Section 1.3 (Logo Misuse) of our Brand &amp; Trademark Usage Guide (included in our Brand Kit).</p> <p>Certain marks of RESF have been created to enable you to communicate compatibility or interoperability of software or products. In addition to the requirement that any use of a mark to make an assertion of compatibility must, of course, be accurate, the use of these marks must avoid confusion regarding RESF's association with the product. The use of the mark cannot imply that RESF or its projects are sponsoring or endorsing the product. The following are examples of proper and improper usage of these trademarks of RESF:</p> <pre><code>Correct: &lt;your product name&gt; for &lt;RESF mark&gt;\nCorrect: &lt;your product/company name&gt; plug-in for &lt;RESF mark&gt;\nCorrect: &lt;your product name&gt; compatible with &lt;RESF mark&gt;\nCorrect: &lt;your product name&gt; for use with &lt;RESF mark&gt;\nCorrect: Quick Start for &lt;RESF mark&gt; by &lt;your company name&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day featuring &lt;RESF mark&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day with &lt;RESF mark&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day including &lt;RESF mark&gt;\n\nIncorrect: &lt;RESF mark&gt; &lt;your product name&gt;\nIncorrect: &lt;RESF mark&gt; by &lt;your company name&gt;\nIncorrect: &lt;RESF mark&gt; - &lt;your product name&gt;\nIncorrect: &lt;your product/company name&gt; - &lt;RESF mark&gt;\nIncorrect: &lt;RESF mark&gt; Quick Start by &lt;your company name&gt;\nIncorrect: &lt;RESF mark&gt; Day\nIncorrect: &lt;RESF mark&gt; Day by &lt;your company name&gt;\nIncorrect: &lt;non-trademarked industry term&gt; Day brought to you by &lt;RESF mark&gt;\n</code></pre>"},{"location":"team/design/branding/#questions-comments-concerns","title":"Questions, Comments, Concerns","text":"<p>We look to our community to help us retain the value of RESF's trade and service marks. If you have questions with respect to these guidelines or to report concerns regarding the use or misuse of a trademark of RESF, or to obtain written permission for a proposed use of RESF trademarks, contact: design@rockylinux.org.</p>"},{"location":"team/design/branding/#disclaimer","title":"Disclaimer","text":"<p>RESF does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p>"},{"location":"team/design/branding/#updates","title":"Updates","text":"<p>RESF may release new versions of RESF trademark policy or statements of permitted use of RESF marks without notice.</p> <p>This work is inspired by the Mozilla Foundation Trademark Policy and the GNOME Trademark Licensing. It is licensed under a Creative Commons Attribution 4.0 International license (\"CC-BY-4.0\", available at https://creativecommons.org/licenses/by/4.0).</p>"},{"location":"team/infrastructure/","title":"Infrastructure Team","text":"<p>This section is primarily for general documentation as it pertains to the Infrastructure that runs Rocky Linux and RESF activities.</p> <p>For more detailed documentation, SOP's, and guidelines, see the Infrastructure Wiki</p> <p>The primary contact email is infrastructure@rockylinux.org</p> <p>The primary mattermost channel is <code>~Infrastructure</code> with its bridged IRC channel <code>#rockylinux-infra</code>.</p>"},{"location":"team/infrastructure/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Infrastructure Lead Neil Hanlon neil@resf.org @neil neil Infrastructure Lead Taylor Goodwill tg@resf.org @tgo tg Identity Management &amp; Release Engineering Louis Abel label@rockylinux.org @nazunalika Sokel/label/Sombra Infrastructure Randolph @meltro N/A Infrastructure Patrick Roberts @preachermanx N/A"},{"location":"team/infrastructure/awx_scm_guidelines/","title":"AWX / Ansible SCM Guidelines","text":"<p>This document covers the guidelines as set out by the Infrastructure/Core group for designing modular repositories that may be used in the Rocky AWX instance or local execution based on team needs. This is meant to supersede the guidelines in the ansible-awx-template repository.</p> <p>This does not cover detailed examples, but is meant to get teams and their contributors started in designing or improving upon all ansible related activities for their group.</p> <p>Note</p> <p>This guide may be moved to the Core rocky.page wiki in the future.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#contact-information","title":"Contact Information","text":"Owner Infrastructure Team Email Contact infrastructure@rockylinux.org Mattermost Contacts <code>@label</code> Mattermost Contacts <code>@neil</code> Mattermost Contacts <code>@tgo</code> Mattermost Channels <code>~Infrastructure</code>"},{"location":"team/infrastructure/awx_scm_guidelines/#guidelines","title":"Guidelines","text":"<p>This section covers the basics for your AWX project. It is absolutely important that you start with these as an absolute bare minimum. While you will be forking/cloning off of <code>infrastructure/ansible-awx-template</code> and using that as the starting point, the next few sections will explain the basic structure and basic design principals.</p> <p>You should begin by starting from the Infrastructure Ansible AWX Template.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#root-structure","title":"Root Structure","text":"<p>The general structure will always start from this:</p> <pre><code>.\n\u251c\u2500\u2500 somePlaybook.yml\n\u251c\u2500\u2500 defaults\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 files\n\u251c\u2500\u2500 handlers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 tasks\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 templates\n\u251c\u2500\u2500 tests\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 inventory\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test.yml\n\u2514\u2500\u2500 vars\n    \u2514\u2500\u2500 main.yml\n</code></pre> <p>This structure follows the basic expected structure for ansible (this means ignoring AWX/Tower). If you are familiar with ansible already, you may already know how these files and directories work at an operational level. The gist of it is:</p> <ul> <li>All playbooks should be in the root and import tasks from <code>./tasks</code> if needed</li> <li>Vars should be clearly defined where needed in vars, defaults, and/or playbooks</li> <li>Files and templates should be created with a purpose</li> <li>Handlers should be clearly defined and used</li> <li>There should be wiggle room to add callback_plugins, filter_plugins, libraries</li> </ul> <p>With these basic ideas in mind, we can move into playbook design.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#designing-playbooks","title":"Designing Playbooks","text":"<p>Generally, your playbooks should be doing the following:</p> <ol> <li>Checking if ansible can be ran on a specific host</li> <li>Asserting if variables are filled and are correctly formed, if applicable</li> <li>Importing tasks from the <code>./tasks</code> directory</li> <li>Importing roles, if necessary</li> <li>Post tasks, if necessary</li> </ol> <p>At no point should you be using <code>./tasks/main.yml</code> under any circumstance.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#pre-flight-and-post-flight-tasks","title":"Pre-flight and Post-flight Tasks","text":"<p>In majority of cases, you will need to have pre-flight and post-flight tasks. These aren't needed in all cases, but they should be used as a starting point.</p> <pre><code>  pre_tasks:\n    - name: Check if ansible cannot be run here\n      ansible.builtin.stat:\n        path: /etc/no-ansible\n      register: no_ansible\n\n    - name: Verify if we can run ansible\n      ansible.builtin.assert:\n        that:\n          - \"not no_ansible.stat.exists\"\n        success_msg: \"We are able to run on this node\"\n        fail_msg: \"/etc/no-ansible exists - skipping run on this node\"\n\n    # Assertions and other checks here\n\n  # Import roles/tasks here\n\n  post_tasks:\n    - name: Touching run file that ansible has ran here\n      ansible.builtin.file:\n        path: /var/log/ansible.run\n        state: touch\n        mode: '0644'\n        owner: root\n        group: root\n</code></pre>"},{"location":"team/infrastructure/awx_scm_guidelines/#tasks-general-information","title":"Tasks General Information","text":"<p>Ensure that your tasks are using FQCN. This means, even for the simple modules such as <code>file</code>, you should be using <code>ansible.builtin.file</code> to be compliant with ansible-lint 6+ and ansible 2.12+.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#comments","title":"Comments","text":"<p>Each playbook should have comments or a name descriptor that explains what the playbook does or how it is used. If not available, <code>README-...</code> can be used in place, especially in the case of adhoc playbooks that take or require input. Documentation for each playbook/role does not have to be on a wiki. Comments or README's should be perfectly sufficient.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#tags","title":"Tags","text":"<p>Ensure that you are using relevant tags where necessary for your tasks. This will allow you or the deployers to have deeper control of what is ran or called in AWX.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#playbook-naming-system","title":"Playbook Naming System","text":"<p>When making playbooks, there is a set of predefined prefixes you will need to set. It is highly discouraged to step outside of these prefixes.</p> <pre><code>init-* -&gt; Starting playbooks that run solo or import other playbooks that start\n          with import-. Can also be used to run updates or repetive tasks that\n          adhoc may not suffice and running a role playbook is too much overhead.\n\nadhoc  -&gt; These playbooks are one-off playbooks that can be used on the CLI or\n          in AWX. These are typically for basic tasks.\n\nimport -&gt; Playbooks that should be imported from the top level playbooks or\n          used to \"import\" or \"add\" data somewhere (e.g., a database or LDAP)\n\nrole-* -&gt; These playbooks call roles for potential tasks or even roles in general.\n</code></pre> <p>Using the role prefix without an ansible role</p> <p>It is perfectly fine to use <code>role-</code> as a way to say \"this system will do or be X\" without calling out to an ansible role. You may use <code>role</code> for this case or you can use <code>init</code>. This is not a strict requirement and you should go with what feels right for your project.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#defining-hosts","title":"Defining Hosts","text":"<p>There will likely be multiple dynamic inventory sources used for hosts managed by AWX, and as a result, there will be a lot of groups defined with one or more hosts at a time. As this is the case, here are some things to keep in mind:</p> <ul> <li>Use group names where necessary</li> <li>Use localhost if you aren't actually doing anything to a system (e.g., you're calling an API) and you don't have to connect to a system to use said API</li> <li> <p>When filling in the <code>hosts</code> directive, follow these general guidelines:</p> <ul> <li>If it applies to all hosts in an inventory, use <code>all</code></li> <li>If you want the host or a group of hosts to be selectable (via dropdown or manual input), set <code>host: {{ host }}</code> and the host var can be defined as an extra var</li> <li>If the above two are not applicable and you must set a hostname, you may do so. Note that this will require you to be more vigilant in keeping your repository up to date.</li> </ul> </li> </ul>"},{"location":"team/infrastructure/awx_scm_guidelines/#local-inventory-files","title":"Local Inventory Files","text":"<p>Generally local inventory files are not recommended. Some general rules to follow is this:</p> <ul> <li>If your project can be ran in AWX and locally outside of AWX, the inventory file should not be committed as <code>inventory</code> (the current <code>.gitignore</code> prevents this from being committed by default)</li> <li>If your project is local only (meaning it will not be used in AWX, but your team will be using it locally), you may modify <code>.gitignore</code> to include the file</li> </ul> <p>We want to prevent AWX from picking up a random inventory that isn't defined within it.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#local-ansiblecfg-files","title":"Local ansible.cfg files","text":"<p>General ansible.cfg files are not recommended as they would be picked up during normal operation. These should be provided only for special cases. Optionally, you may provide it under another name that a user can reference for local execution outside of AWX.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#collections-and-roles","title":"Collections and Roles","text":"<p>Collections and roles should be defined in a <code>requirements.yml</code> in their respective directories. AWX will pick them up. Optionally, you can provide a playbook or script to install roles and collections locally. Example commands that could be in a script or playbook:</p> <pre><code>ansible-galaxy collection install -r collections/requirements.yml\nansible-galaxy role install -r roles/requirements.yml\n</code></pre> <p>Tools like <code>ansible-navigator</code> and <code>ansible-builder</code> can also help in this area as well.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#pre-commits-linting","title":"Pre-commits / linting","text":"<p>When committing, pre-commit must run to verify your changes. They must be passing to be pushed up. This is an absolute requirement, even for roles. There are very rare exceptions to this rule and they may be granted depending on what it is.</p> <p>When the linter passes, a push can be performed. After that, if a PR is necessary, open one. Otherwise, it should be free to use locally or in AWX.</p>"},{"location":"team/infrastructure/awx_scm_guidelines/#tests","title":"Tests","text":"<p>A template generally comes with a <code>tests</code> directory. While not strictly required, it is recommended to create a suite of tests to ensure most, if not all of your playbooks are in working order. This is similar to providing tests to ansible collections, in that they should test at least basic functionality.</p> <p>Complex situations can be tested for as well and is encouraged.</p>"},{"location":"team/infrastructure/idm_pdr/","title":"PDR Delete Request","text":"<p>As a user within the Rocky Linux and Rocky Enterprise Software Foundation ecosystem, you have a right to request your account be disabled and information removed. This page will guide you in requesting a PDR Delete Request for us to process.</p>"},{"location":"team/infrastructure/idm_pdr/#contact-information","title":"Contact Information","text":"Owner Infrastructure Team &amp; Identity Management Team Email Contact infrastructure@rockylinux.org Email Contact identitymanagement@rockylinux.org Mattermost Contacts <code>@label</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~Infrastructure</code>"},{"location":"team/infrastructure/idm_pdr/#general-information","title":"General Information","text":"<p>When you request a PDR Delete Request, please note that the following will occur during processing:</p> <ul> <li>Your personal data and information will be removed from your account</li> <li>You will be removed from all relevant groups in Account Services</li> <li>Your account will be set to <code>private</code> in Account Services</li> <li>Your account in Account Services will be disabled</li> </ul> <p>If your intention is to keep your account active and hide your personal information, you may set your profile to \"private\" in Account Services by:</p> <ol> <li>Click <code>Edit Profile</code></li> <li>Select the checkbox for <code>Private</code></li> <li>Save.</li> </ol>"},{"location":"team/infrastructure/idm_pdr/#mattermost-accounts","title":"Mattermost Accounts","text":"<p>While we are working to integrate Mattermost with Rocky Account Services, at this time, Mattermost accounts are still separate and are not included in a typical PDR Delete Request. If you wish to have your Mattermost account removed, you may follow the instructions below and indicate which account you would like to be removed. If submitting via email, please send from the address associated with the account you wish to have removed. If a different email address is used, the request will need to be validated with the account's proper address prior to actioning the request. For security reasons, we are not able to reveal the email address associated with any account name.</p>"},{"location":"team/infrastructure/idm_pdr/#submitting-a-request","title":"Submitting a Request","text":"<p>To submit a request, you may either email us or you may open a ticket at our Bug Tracker.</p>"},{"location":"team/infrastructure/idm_pdr/#ticket-request","title":"Ticket Request","text":"<p>Click the following link to open our bug tracker.</p> <ol> <li>Open our Bug Tracker and login with your account (You can do this by clicking \"anonymous\" and click logout)</li> <li>In the top left corner, click the drop down next to your login name</li> <li>Select \"Account Services\" as the project.</li> <li>Click \"Report Issue\"</li> <li>Set category to <code>Account Requests - Personal Data Request</code></li> <li>Set summary as <code>PDR - Delete Request</code></li> <li>Above the description box, click the snippets drop down and select <code>PDR Request - Remove Personal Information</code></li> <li>Fill out the form appropriately. Do not remove data that starts that contains <code>{}</code> and ensure you have read the \"Information\" section. You may fill in comments as you see fit.</li> <li>Click <code>Submit Issue</code> at the bottom</li> </ol>"},{"location":"team/infrastructure/idm_pdr/#alternative-ticket-process","title":"Alternative Ticket Process","text":"<p>The bug tracker above provides a private way to ask for account deletion. For any account-related actions, up to and including deletion, we also welcome tickets to be created on the infrastructure/meta issue tracker on git.resf.org. You may sign-in with keycloak to this service using your Rocky Account Services account, which we can additionally use to validate your ownership of the account. When creating a new issue, you may select the 'Account Requests - Personal Data Request' as the template.</p>"},{"location":"team/infrastructure/idm_pdr/#email-request","title":"Email Request","text":"<p>Click the following link to open an email draft to us to start the process.</p>"},{"location":"team/infrastructure/services/","title":"Services and Software","text":"<p>Services and software in use by the Rocky Linux project</p>"},{"location":"team/infrastructure/services/#self-hosted-services","title":"Self-Hosted Services","text":"Item Use Status License Link Ansible Configuration management Deployed GPL-3.0 https://ansible.com FreeIPA Identity Management Deployed GPL-3.0 https://www.freeipa.org KeyCloak SSO System Deployed Apache License 2.0 https://keycloak.org Netbox IPAM Apache-2.0 https://github.com/netbox-community/netbox - Logging - - - Prometheus Monitoring Planned Apache-2.0 https://prometheus.io Koji Distro packaging Deployed LGPL-2.1 https://fedoraproject.org/wiki/Koji Mattermost Communications Deployed Mattermost EE https://mattermost.com Mock Distro packaging GPL-2.0 https://github.com/rpm-software-management/mock/wiki GitLab EE Distro Packaging Deployed MIT + GitLab EE License https://gitlab.com Gitea Community Git Forge Deployed MIT https://gitea.io OpenProject Project management Deployed GPL-3.0 https://www.openproject.org - SIEM - - - Wiki.js Documentation Removed AGPL-3.0 https://wiki.js.org Postgresql Database Engine  &gt;v11 Deployed ? https://www.postgresql.org/ Bugzilla Bug Tracking and Ticket System Removed MPL https://bugzilla.org MantisBT Bug Tracking and Ticket System Deployed GPL-2.0 https://mantisbt.org mailman3 mailing list system Deployed GPL-3.0 https://www.list.org/ hyperkitty mailing list system achiver Deployed GPL-3.0 https://www.list.org/ Peridot Distro packaging Deployed BSD-3-Clause https://github.com/rocky-linux/peridot"},{"location":"team/infrastructure/services/#third-party-services","title":"Third-Party Services","text":"Item Use Status Terms Link reCAPTCHA Anti-abuse In use <sup>[1]</sup> https://www.google.com/recaptcha/about Slack Communications, chat Deprecated <sup>[2]</sup> https://www.slack.com Libera IRC, chat In use <sup>[3]</sup> https://www.libera.chat Matrix Chat In use <sup>[4]</sup> https://matrix.org GitHub Source control, collaboration, registry, actions In use <sup>[5]</sup> https://www.github.com Figma Design collaboration In use <sup>[6]</sup> https://figma.com Discourse Community forums In use <sup>[7]</sup> https://www.discourse.org Google Workspace Foundation email In use <sup>[8]</sup> https://workspace.google.com <p><sup>[1]</sup> - Google legal terms, privacy policy <sup>[2]</sup> - Slack legal terms <sup>[3]</sup> - Libera bylaws and policies <sup>[4]</sup> - Matrix legal terms <sup>[5]</sup> - GitHub terms of service, privacy policy <sup>[6]</sup> - Figma legal terms, privacy policy <sup>[7]</sup> - Discourse legal terms, privacy policy <sup>[8]</sup> - Google Workspace legal terms free, paid, additional services, privacy policy</p>"},{"location":"team/infrastructure/services/#infrastructure-software","title":"Infrastructure Software","text":"Item Use Status License Link Terraform Infrastructure as code In use MPL-2.0 https://www.terraform.io Rocky 8 Operating system In use BSD-3, various OSI https://www.rockylinux.org Rocky 9 Operating system In use BSD-3, various OSI https://www.rockylinux.org KVM Virtualization In use GPL-2.0 or LGPL https://www.linux-kvm.org AWX Automation System Planned Apache License 2.0 https://github.com/ansible/awx"},{"location":"team/infrastructure/services/#infrastructure-providers","title":"Infrastructure Providers","text":"Item Use Status Terms Link Amazon Web Services Infrastructure In use <sup>[1]</sup> https://aws.amazon.com Clouvider Infrastructure In use <sup>[2]</sup> https://www.clouvider.co.uk Spry Servers Infrastructure <sup>[3]</sup> https://www.spryservers.net Vercel Web hosting In use <sup>[4]</sup> https://vercel.com Equinix Infrastructure In use <sup>[5]</sup> https://equinix.com/ <sup>[1]</sup> - Amazon Web Services legal terms, privacy policy <sup>[2]</sup> - Clouvider legal terms, privacy policy <sup>[3]</sup> - Spry Servers legal terms <sup>[4]</sup> - Vercel legal terms, privacy policy <sup>[5]</sup> - Equinix legal terms, privacy policy"},{"location":"team/release_engineering/","title":"Release Engineering Team","text":"<p>This section is primarily for general information for the Release Engineering team. A more detailed wiki can be found at the dedicated SIG/Core Wiki</p> <p>There is a legacy section that is not maintained but is meant for historical references.</p>"},{"location":"team/release_engineering/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Identity Management &amp; Release Engineering Lead Louis Abel label@rockylinux.org @nazunalika Sokel/label/Sombra Release Engineering Co-Lead Mustafa Gezen mustafa@rockylinux.org @mustafa mstg Release Engineering and Development Skip Grube skip@rockylinux.org @skip77 skip77 Release Engineering and Development Sherif Nagy sherif@rockylinux.org @sherif SheriF Release Engineering and Development Pablo Greco pgreco@rockylinux.org @pgreco pgreco Infrastructure Neil Hanlon neil@resf.org @neil neil Infrastructure Taylor Goodwill tg@resf.org @tgo tg"},{"location":"team/release_engineering/packagekit/","title":"PackageKit Missing Items","text":"<p>You have been redirected here to answer why you cannot find certain packages in Rocky Linux.</p>"},{"location":"team/release_engineering/packagekit/#missing-package","title":"Missing Package","text":"<p>The package you are searching for is not available in Rocky Linux. There are a few reasons why this could be:</p> <ul> <li>We cannot include software that is encumbered by software patents</li> <li>We cannot include software that is not in the Base OS (you are encouraged to use EPEL and SIGs)</li> <li>In the case of a SIG, we cannot package proprietary software.</li> <li>Perhaps someone has not packaged it yet to be included in a SIG.</li> </ul>"},{"location":"team/release_engineering/packagekit/#missing-codecs","title":"Missing Codecs","text":"<p>The codecs you are searching for is not available in Rocky Linux. A codec is a program that allows the user to encode or decode a data stream in a specific format (think MP3/MOV/WMV). Upstream, and thus Rocky Linux, generally do not have such codecs.</p> <p>The question we generally receive is \"Why can't you provide it in a SIG or an extras?\" It's because of the following reasons:</p> <ul> <li>Many codecs are proprietary or patent encumbered</li> <li>Some codecs may not be encumbered, but may be under a license that is not acceptable</li> </ul> <p>We encourage users to either:</p> <ul> <li>Use formats such as OGG, Dirac, and FLAC</li> <li>Consider finding a third party repository that provides such codecs such as rpmfusion</li> <li>Note that we cannot support you if you choose to use such repositories.</li> </ul>"},{"location":"team/release_engineering/packagekit/#missing-drivers","title":"Missing Drivers","text":"<p>Since Rocky Linux matches upstream with Red Hat Enterprise Linux, we are limited to the hardware that their kernel configuration supports. We are encourage you to use ELRepo where you can kind kmod's + newer kernerls or a future legacy hardware SIG if Rocky Linux supports as such.</p>"},{"location":"team/release_engineering/packagekit/#missing-fonts","title":"Missing Fonts","text":"<p>The font that you are looking for is not available in Rocky Linux. This is because we only include fonts that are available in the upstream Red Hat Enterprise Linux.</p>"},{"location":"team/release_engineering/compose/","title":"SOP Compose and RepoSync","text":"<p>This section was originally for documentation as it pertains to performing composes and syncing Rocky Linux releases. These pages have moved to the SIG/Core Wiki.</p>"},{"location":"team/release_engineering/debranding/","title":"Intro to Debranding with Rocky Linux","text":""},{"location":"team/release_engineering/debranding/#what-is-debranding","title":"What is Debranding?","text":"<p>Certain packages in the upstream RHEL/CentOS have logos, trademarks, and other specific text, images, or multimedia that other entities (like the Rocky Enterprise Software Foundation) are not allowed to redistribute.</p> <p>A visible, simple example is the Apache web server (package httpd).  If you've ever installed it and visited the default web server page, you will see a test page specific to your Linux distro, complete with a \"powered by\" logo and distro-specific information.  While we are allowed to compile and redistribute the Apache web server software, Rocky Linux is NOT allowed to include these trademarked images or distro-specific text.</p> <p>We must have an automated process that will strip these assets out and replace them with our own branding upon import into our Git.</p>"},{"location":"team/release_engineering/debranding/#how-rocky-debranding-works","title":"How Rocky Debranding Works","text":"<p>Rocky's method for importing packages from the upstream is a tool called srpmproc.</p> <p>Srpmproc's purpose in life is to:</p> <ul> <li>Clone PACKAGE from our upstream source: git.centos.org/rpms/PACKAGE or gitlab.com/redhat</li> <li>Check if Rocky Linux has any debranding patches available for PACKAGE (under https://git.rockylinux.org/patch/PACKAGE)</li> <li>If patch/PACKAGE exists, then read the configuration and patches from that repository and apply them</li> <li>Commit the results (patched or not) to https://git.rockylinux.org/rpms/PACKAGE</li> <li>Do this for every package until we have a full repository of packages in our Git</li> </ul>"},{"location":"team/release_engineering/debranding/#helping-with-debrands","title":"Helping with Debrands","text":"<p>There are 2 tasks involved with debranding: Identifying packages that require debranding and developing patches+configs to debrand the necessary packages.</p> <p>If you want to help with the latter, please see the patching guide for examples and a case study. If you find something that you suspect is missing branding, you can also file a bug report instead.</p>"},{"location":"team/release_engineering/debranding/#debrand-packages-tracking","title":"Debrand Packages Tracking","text":"<p>A list of packages that need debranding is located in the a metadata file in our git here. This generally does not track status and is simply a reference on what is debranded, if it's no longer debranded (aka Rocky Linux is upstreamed), and other notes.</p>"},{"location":"team/release_engineering/debranding/debrand_info/","title":"Debranding Information","text":"<p>This page goes over the methodology and some packages that require changes to their material for acceptance in Rocky Linux. Usually this means there is some text or images in the package that reference upstream trademarks, and these must be swapped out before we can distribute them.</p> <p>CentOS had a wiki page at one point where it was documented, but it wasn't always up to date. For example, the package nginx did not appear on their list, and still had RHEL branding in the CentOS repos. As a result, this forced us to do a deeper investigation into what needs to be changed or altered.</p> <p>There are a few ways we've determined some of the changes:</p> <ul> <li>Packages don't build because ID is not <code>centos</code>, <code>rhel</code>, or <code>fedora</code></li> <li>Packages have <code>?centos</code> tags in the SPEC file to differentiate from Fedora or RHEL</li> <li>Some packages in git.centos.org have an automatic debranding message - This won't be as helpful for 9 and beyond</li> <li>RHEL assets were appearing in the installed package(s)</li> </ul> <p>When we need to make changes, it can possibly be one or more of these things:</p> <ul> <li>URL's should change from Red Hat to a Rocky page (if applicable)</li> <li>URL's that are being patched to be Red Hat should be removed (systemd in 8 is an example of this)</li> <li><code>?centos</code> is changed to <code>?rocky</code>, but this isn't always consistent or sufficient</li> <li> <p>Assets need to be changed</p> <ul> <li>Exceptions come when there is a file being requested from the logos package - We generally have symlinks to deal with this</li> </ul> </li> <li> <p>Some patches must be made to the source code or spec file</p> </li> <li>Packages are built against an \"override\" release package that uses <code>ID=\"rhel\"</code> in <code>/etc/os-release</code> to force a build to pose as RHEL (older versions of dotnet and chrony are an example of this)</li> </ul> <p>Current patches (for staging) are here.</p>"},{"location":"team/release_engineering/debranding/debrand_info/#packages-that-need-debranding-changes","title":"Packages that need debranding changes:","text":"<p>There is a metadata file that helps track this information for us. It can be located here and is separated by section and branch.</p> <p>In essence, the file goes over these sections:</p> <ul> <li><code>build_patch</code> -&gt; Packages that may have needed patches to build properly in our environment</li> <li><code>dnt</code> or Do Not Touch -&gt; These should not be modified or changed</li> <li><code>custom</code> -&gt; Custom packages not provided by upstream but can be useful in obsoleting packages or providing some functionality</li> <li><code>plus</code> -&gt; Packages that are modified versions of what's in the base or built by normal means but not shipped by Red Hat</li> <li><code>previous</code> -&gt; Packages that may have been patched before for debranding or building - They are left as a reference</li> <li><code>provides</code> -&gt; Common provides for release, logos, and other rocky/system specific packages</li> <li><code>override_required</code> -&gt; Requires an \"override\" release package to build properly</li> <li><code>spec_change_only</code> -&gt; Requires only spec changes to remove functionality that is RHEL specific</li> <li> <p><code>debrand</code> -&gt; Packages that are changed/patched to either remove Red Hat references, replace them, or add Rocky Linux as a supported distribution</p> <ul> <li>Some of these packages will always need to be changed, on a minor or major release schedule.</li> <li>Some are potentially upstreamed so then they are no longer patched by us (sos is an example)</li> <li>Some packages may still need modification, even if upstreamed (anaconda is an example)</li> </ul> </li> </ul>"},{"location":"team/release_engineering/debranding/debrand_info/#packages-that-need-to-become-other-packages","title":"Packages that need to become other packages:","text":"<p>There is a metadata file that tracks this for us. It can be located here. The section in particular is called <code>provides</code>.</p> <p>This is for example, <code>redhat-logos</code> or <code>system-logos</code> is provided or \"becomes\" <code>rocky-logos</code>.</p>"},{"location":"team/release_engineering/debranding/debrand_info/#packages-that-exist-in-rhel-but-do-not-exist-in-most-derivatives","title":"Packages that Exist in RHEL, but do not exist in most derivatives","text":"<p>For sake of complete information, here is a list of packages that are in RHEL, but may not exist in derivatives.  We do not need to worry about these packages:</p> <ul> <li>insights-client</li> <li>Red_Hat_Enterprise_Linux-Release_Notes-8-*</li> <li>redhat-access-gui</li> <li>redhat-bookmarks</li> <li>rhc</li> <li>rhc-worker-playbook</li> <li>subscription-manager-migration</li> <li>subscription-manager-migration-data</li> </ul>"},{"location":"team/release_engineering/debranding/patching/","title":"Rocky Patching Guide","text":"<p>This explains how to debrand/patch a package for the Rocky Linux distribution.</p>"},{"location":"team/release_engineering/debranding/patching/#general-instructions","title":"General Instructions","text":"<ul> <li>First, identify the files in the package that need to be changed.  They could be text files, image files, or others.  You can identify the file(s) by digging into git.centos.org/rpms/PACKAGE/</li> <li>Develop replacements for these files, but with Rocky branding placed instead.  Diff/patch files may be needed as well for certain types of text, depends on the content being replaced.</li> <li>Replacement files go under https://git.rockylinux.org/patch/PACKAGE/ROCKY/_supporting/</li> <li>Config file (specifying how to apply the patches) goes in https://git.rockylinux.org/patch/PACKAGE/ROCKY/CFG/*.cfg</li> <li>Note: Use spaces, not tabs.</li> <li>When srpmproc goes to import the package to Rocky, it will see the work done in https://git.rockylinux.org/patch/PACKAGE , and apply the stored patches by reading the config file(s) under ROCKY/CFG/*.cfg</li> </ul>"},{"location":"team/release_engineering/debranding/patching/#the-patch-config-language","title":"The Patch Config Language","text":"<p>Patching uses simple proto3 config files.  The general format is: <pre><code>Action {\n    file: \"OriginalFile\"\n    with_file: \"ROCKY/_supporting/RockyReplaceFile\"\n}\n</code></pre></p> <p>A simple example to replace a file: <pre><code>replace {\n    file: \"redhatlogo.png\"\n    with_file: \"ROCKY/_supporting/rockylogo.png\"\n}\n</code></pre></p> <p>The file \"redhatlogo.png\" would be located in under SOURCES/ in the project's Git repository (and SRPM).</p>"},{"location":"team/release_engineering/debranding/patching/#patch-configuration-options","title":"Patch configuration options","text":"<ul> <li><code>add</code>: Adds a file to the sources using the <code>file</code> or <code>lookaside</code> directive</li> <li><code>delete</code>: Deletes a file from the sources using the <code>file</code> directive</li> <li><code>replace</code>: Replaces a file from the sources using the <code>file</code> and <code>with_file</code> directives</li> <li><code>patch</code>: Performs a patch based on the diff provided in the <code>file</code> directive (generated using <code>git diff</code>)</li> <li><code>spec_change</code>: Allows for spec files to be modified</li> <li><code>search_and_replace</code>: Performs a search and replace on a given text for the spec file using the <code>any/starts_with/ends_with</code> (true|false), <code>find</code> (string to find), <code>replace</code> (replacement string), and <code>n</code> (integar, <code>-1</code> for any) directives.</li> <li><code>file</code>: A file can be added to the spec file using the <code>name</code> directive to define the file name, the <code>type</code> directive (such as <code>patch</code>) and then an <code>add</code> option that is <code>true</code> or <code>false</code><ul> <li>When <code>patch</code> is used, the following options are available:</li> <li><code>add_to_prep</code> (true|false)</li> <li><code>n_path: N</code> can be specified to add <code>%patchX -pN</code> lines into <code>%prep</code> assuming the rpm does not use <code>%autosetup</code></li> </ul> </li> <li><code>append</code>: Appends to a given <code>field</code>, such as <code>Release</code> with a <code>value</code> directive</li> <li><code>changelog</code>: Modifies the change log using <code>author_name</code>, <code>author_email</code>, and <code>message</code> directives</li> </ul> <p>Patch configuration structure:</p> <pre><code>.\n\u2514\u2500\u2500 ROCKY\n    \u251c\u2500\u2500 CFG\n    \u2514\u2500\u2500 _supporting\n</code></pre>"},{"location":"team/release_engineering/debranding/patching/#case-study-nginx","title":"Case Study: Nginx","text":"<p>(note: all example data here is currently in the staging/ area of Rocky Linux Git.  We will update it when the projects are moved to the production area)</p> <p>Let's go over an example debrand, featuring the Nginx web server package.</p> <p>The source repository is located here: https://git.centos.org/rpms/nginx</p> <p>If we browse one of the c8-* branches, we see under SOURCES/ that there is definitely some content that needs to be debranded:</p> <pre><code>404.html\n50x.html\nindex.html\npoweredby.png  (binary file in dist-git, referred to in .nginx.metadata)\n</code></pre> <p>These files all refer to Red Hat inc., and must be replaced before they make it to Rocky Linux.</p> <p>1: Come up with the patches:  Each of these files has a Rocky Linux counterpart, and they must be created.  Some of this should be done by the Design Team, especially logo work (#Design on chat)</p> <p>2: Commit patches to the matching patch/PROJECT Git repository : For example, Nginx patches are located here: https://git.rockylinux.org/staging/patch/nginx (staging/ prefix is currently used until our production repos are set up)</p> <p>3: Develop a matching config file: Our example Nginx has this here:  https://git.rockylinux.org/staging/patch/nginx/-/blob/main/ROCKY/CFG/pages.cfg</p> <p>It looks like this: <pre><code>replace {\n    file: \"index.html\"\n    with_file: \"ROCKY/_supporting/index.html\"\n}\n\nreplace {\n    file: \"404.html\"\n    with_file: \"ROCKY/_supporting/404.html\"\n}\n\nreplace {\n    file: \"50x.html\"\n    with_file: \"ROCKY/_supporting/50x.html\"\n}\n\nreplace {\n    file: \"poweredby.png\"\n    with_file: \"ROCKY/_supporting/poweredby.png\"\n}\n</code></pre></p> <p>4: Test the import: Now, when the upstream is imported, we can check the main Rocky nginx  repository and ensure our updates were successful:  https://git.rockylinux.org/staging/rpms/nginx/ (again, staging/ group is used only for now)</p> <p>5: You're Done!  Great!  Now do the next one...  ;-)</p>"},{"location":"team/release_engineering/debranding/patching/#more-debrand-config-language","title":"More Debrand Config Language","text":"<p>The Nginx example showed just the replace directive, but there are several more available.  They are add, patch, and delete.</p> <p>Here they are, with examples:</p> <pre><code># Add a file to the project (file is added to SOURCES/ folder )\nadd {\n    file: \"ROCKY/_supporting/add_me.txt\"\n}\n\n# Apply a .patch file (generated using the Linux \"patch\" utility)\npatch {\n    file: \"ROCKY/_supporting/002-test-html.patch\"\n}\n\n# Delete a file from the source project\ndelete {\n    file: \"SOURCES/dontneed.txt\"\n}\n</code></pre> <p>And the .patch file example looks like this: <pre><code>diff --git a/SOURCES/test.html b/SOURCES/test.html\nindex 8d91ffd..3f76c3b 100644\n--- a/SOURCES/test.html\n+++ b/SOURCES/test.html\n@@ -1,6 +1,6 @@\n &lt;!DOCTYPE html&gt;\n &lt;html&gt;\n     &lt;body&gt;\n-        &lt;h1&gt;Replace me&lt;/h1&gt;\n+        &lt;h1&gt;Replace I did!&lt;/h1&gt;\n     &lt;/body&gt;\n &lt;/html&gt;\n</code></pre></p> <p>It also supports spec file changes, as it may be necessary. For example, from the anaconda debrand patch repo.</p> <pre><code>add {\n    file: \"ROCKY/_supporting/0002-Rocky-disable-cdn-radiobutton.patch\"\n}\n\nspec_change {\n    # Adds a Patch line with the file name as listed above\n    file {\n        name: \"0002-Rocky-disable-cdn-radiobutton.patch\"\n        type: Patch\n        add: true\n    }\n\n    # Appends to the end of a field's line, in this case the Release field gets .rocky\n    append {\n        field: \"Release\"\n        value: \".rocky\"\n    }\n\n    # Adds to the change log properly\n    changelog {\n        author_name: \"Mustafa Gezen\"\n        author_email: \"mustafa@rockylinux.org\"\n        message: \"Disable CDN and add .rocky to Release\"\n    }\n}\n</code></pre> <p>At the end, the spec file should be changed.</p> <pre><code>Summary:              Graphical system installer\nName:                 anaconda\nVersion:              33.16.3.26\n                      # Our .rocky appears here\nRelease:              2%{?dist}.rocky\n\n-- snip --\n\nPatch1:               0001-network-do-not-crash-on-infiniband-devices-activated.patch\n                      # Look, our patch was added!\n                      # Luckily this RPM uses %autosetup, so no %patch lines\nPatch2:               0002-Rocky-disable-cdn-radiobutton.patch\n\n-- snip --\n\n# And below the added changelog\n%changelog\n* Thu Feb 25 2021 Mustafa Gezen &lt;mustafa@rockylinux.org&gt; - 33.16.3.26-2\n- Disable CDN and add .rocky to Release\n\n* Thu Oct 22 2020 Radek Vykydal &lt;rvykydal@redhat.com&gt; - 33.16.3.26-2\n- network: do not crash on infiniband devices activated in initramfs\n  (rvykydal)\n  Resolves: rhbz#1890261\n</code></pre>"},{"location":"team/release_engineering/guidelines/","title":"Guidelines","text":"<p>This section is primarily for documentation and useful information as it pertains to guidelines for various packages or asset usage.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/","title":"Rocky Logos Package Guidelines","text":"<p>This page goes over the basic guidelines for the rocky-logos package, which produces assets for anaconda, wallpapers, and other assets for the distribution.</p> <p>Release Engineering has the final \"go/no-go\" decision on submissios/assets/images in the package.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#rocky-logo-assets","title":"Rocky Logo Assets","text":"<p>In various parts of the package, the Rocky logo will need to exist in multiple forms:</p> <ul> <li>Green variant</li> <li>White variant</li> </ul> <p>This can be in the form of <code>PNG</code>, <code>JPG</code>, or <code>SVG</code> files.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#anaconda","title":"anaconda","text":"<p>All anaconda image assets will be in <code>PNG</code> form. Backgrounds should be transparent with the exception of <code>rnotes</code> if applicable.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#backgrounds","title":"Backgrounds","text":"<p>See Backgrounds Section</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#fedora","title":"fedora","text":"<p><code>SVG</code> format of logo assets as <code>fedora_logo</code> (color) and <code>fedora_logo_darkbackground</code> (white), and a default as <code>fedora_logo</code>.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#firstboot","title":"firstboot","text":"<p>First boot assets. This is generally the sidebar (like the anaconda installer) and a workstation icon. <code>PNG</code> format.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#iconshicolor","title":"icons/hicolor","text":"<p>Rocky icons will appear here in different resolutions and must be in <code>PNG</code> or <code>SVG</code> format:</p> <ul> <li>16x16/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>22x22/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>24x24/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>32x32/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>36x36/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>48x48/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>96x96/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>256x256/apps: <code>PNG</code>, <code>system-logo-icon</code>, <code>fedora-logo-icon</code></li> <li>scalable/apps: <code>SVG</code>, <code>fedora-logo-icon</code>, <code>org.fedoraproject.AnacondaInstaller.svg</code>, <code>start-here.svg</code>, <code>xfce4_xicon1.svg</code></li> <li>symbolic/apps: <code>SVG</code>, <code>org.fedoraproject.AnacondaInstaller-symbolic</code></li> </ul>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#ipa","title":"ipa","text":"<p>IPA specific assets, usually text. They are generally <code>PNG</code> or <code>JPG</code>:</p> <ul> <li><code>header-logo.png</code> - Text</li> <li><code>login-screen-background.jpg</code> - No text</li> <li><code>login-screen-logo.png</code> - Logo + Text</li> <li><code>product-name.png</code> - Text</li> </ul>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#pixmaps","title":"pixmaps","text":"<p><code>PNG</code> format, these are usually assets used within GNOME, GDM, and other desktop environments.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#plymouthcharge","title":"plymouth/charge","text":"<p>Typically unchanged and is for the plymouth loading screen</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#svg","title":"svg","text":"<p><code>SVG</code> format of logo assets as <code>fedora_logo</code> (color) and <code>fedora_logo_darkbackground</code> (white)</p> <p><code>color</code> file dictates background color if applicable</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#testpage","title":"testpage","text":"<p><code>index.html</code> for httpd/nginx/etc</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#backgroundswallpapers","title":"Backgrounds/Wallpapers","text":""},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#structure","title":"Structure","text":"<p>Wallpapers appear in <code>PNG</code> format with a backing <code>XML</code> file to list out all available resolutions if applicable, as well as defaults.</p> <p>A defaults file looks at every other <code>XML</code> that is a default background provided by the backgrounds package and default options if applicable.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE wallpapers SYSTEM \"gnome-wp-list.dtd\"&gt;\n&lt;wallpapers&gt;\n    &lt;wallpaper deleted=\"false\"&gt;\n        &lt;name&gt;Rocky Linux 9 Default Background - Placeholder Mesh&lt;/name&gt;\n        &lt;filename&gt;/usr/share/backgrounds/rocky-default-1-mesh.xml&lt;/filename&gt;\n        &lt;options&gt;zoom&lt;/options&gt;\n        &lt;author&gt;Louis Abel&lt;/author&gt;\n        &lt;email&gt;label@rockylinux.org&lt;/email&gt;\n        &lt;license&gt;CC-BY-SA 4.0&lt;/license&gt;\n    &lt;/wallpaper&gt;\n    &lt;wallpaper deleted=\"false\"&gt;\n        &lt;name&gt;Rocky Linux 9 Default Background - Placeholder Target&lt;/name&gt;\n        &lt;filename&gt;/usr/share/backgrounds/rocky-default-1-target.xml&lt;/filename&gt;\n        &lt;options&gt;zoom&lt;/options&gt;\n        &lt;author&gt;Louis Abel&lt;/author&gt;\n        &lt;email&gt;label@rockylinux.org&lt;/email&gt;\n        &lt;license&gt;CC-BY-SA 4.0&lt;/license&gt;\n    &lt;/wallpaper&gt;\n&lt;/wallpapers&gt;\n</code></pre> <p>The wallpaper itself will list every applicable variant of that background if applicable.</p> <pre><code>&lt;background&gt;\n  &lt;starttime&gt;\n    &lt;year&gt;2021&lt;/year&gt;\n    &lt;month&gt;10&lt;/month&gt;\n    &lt;day&gt;29&lt;/day&gt;\n    &lt;hour&gt;19&lt;/hour&gt;\n    &lt;minute&gt;21&lt;/minute&gt;\n    &lt;second&gt;19&lt;/second&gt;\n  &lt;/starttime&gt;\n\n&lt;static&gt;\n&lt;duration&gt;10000000000.0&lt;/duration&gt;\n&lt;file&gt;\n  &lt;!-- Wide 16:9 --&gt;\n  &lt;size width=\"1920\" height=\"1080\"&gt;/usr/share/backgrounds/rocky-default-1-mesh-16-9.png&lt;/size&gt;\n  &lt;!-- Wide 16:10 --&gt;\n  &lt;size width=\"1920\" height=\"1200\"&gt;/usr/share/backgrounds/rocky-default-1-mesh-16-10.png&lt;/size&gt;\n  &lt;!-- Standard 4:3 --&gt;\n  &lt;size width=\"2048\" height=\"1536\"&gt;/usr/share/backgrounds/rocky-default-1-mesh-4-3.png&lt;/size&gt;\n  &lt;!-- Normalish 5:4 --&gt;\n  &lt;size width=\"1280\" height=\"1024\"&gt;/usr/share/backgrounds/rocky-default-1-mesh-5-4.png&lt;/size&gt;\n&lt;/file&gt;\n&lt;/static&gt;\n&lt;/background&gt;\n</code></pre> <p>Day/Night Wallpapers have a similar configuration.</p> <pre><code>&lt;background&gt;\n  &lt;starttime&gt;\n    &lt;year&gt;2022&lt;/year&gt;\n    &lt;month&gt;01&lt;/month&gt;\n    &lt;day&gt;01&lt;/day&gt;\n    &lt;hour&gt;8&lt;/hour&gt;\n    &lt;minute&gt;00&lt;/minute&gt;\n    &lt;second&gt;00&lt;/second&gt;\n  &lt;/starttime&gt;\n&lt;!-- This animation will start at 8 AM. --&gt;\n\n&lt;!-- We start with day at 8 AM. It will remain up for 10 hours. --&gt;\n&lt;static&gt;\n&lt;duration&gt;36000.0&lt;/duration&gt;\n&lt;file&gt;/usr/share/backgrounds/rocky-default-1-mesh-day.png&lt;/file&gt;\n&lt;/static&gt;\n\n&lt;!-- Day ended and starts to transition to night at 6 PM. The transition lasts for 2 hours, ending at 8 PM. --&gt;\n&lt;transition type=\"overlay\"&gt;\n&lt;duration&gt;7200.0&lt;/duration&gt;\n&lt;from&gt;/usr/share/backgrounds/rocky-default-1-mesh-day.png&lt;/from&gt;\n&lt;to&gt;/usr/share/backgrounds/rocky-default-1-mesh-night.png&lt;/to&gt;\n&lt;/transition&gt;\n\n&lt;!-- It's 8 PM, we're showing the night till 6 AM. --&gt;\n&lt;static&gt;\n&lt;duration&gt;36000.0&lt;/duration&gt;\n&lt;file&gt;/usr/share/backgrounds/rocky-default-1-mesh-night.png&lt;/file&gt;\n&lt;/static&gt;\n\n&lt;!-- It's 6 AM, and we're starting to transition to day. Transition completes at 8 AM. --&gt;\n&lt;transition type=\"overlay\"&gt;\n&lt;duration&gt;7200.0&lt;/duration&gt;\n&lt;from&gt;/usr/share/backgrounds/rocky-default-1-mesh-night.png&lt;/from&gt;\n&lt;to&gt;/usr/share/backgrounds/rocky-default-1-mesh-day.png&lt;/to&gt;\n&lt;/transition&gt;\n\n&lt;/background&gt;\n</code></pre>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#guidelines","title":"Guidelines","text":"<p>This section goes over the general guidelines for the main backgrounds included in the distribution.</p> <p>Note: It is highly recommended and encouraged that a submission should be the highest resolution as noted below. See the note on minimum resolutions.</p> <ul> <li>General Theme: Each Rocky release has a codename, and thus is the general theme. Examples.<ul> <li>Rocky 8: <code>Green Obsidian</code> - Submissions only to extras</li> <li>Rocky 9: <code>Blue Onyx</code> - This should be generally a blue theme/color scheme</li> </ul> </li> <li> <p>Required Resolution(s) for Normal Submissions:</p> <ul> <li>Resolution must not exceed nor fall below: 4092x3072</li> </ul> </li> <li> <p>Allowed:</p> <ul> <li>Anything related to nature, mountains, rocks, and the like (generally fitting into the \"rocky\" idea)</li> <li>Anything related to the codename (eg. Blue Onyx)</li> <li>Anything minimalist/abstract is allowed</li> <li>References to the release number (like 9, and so on) are allowed</li> <li>Complementary colors should be allowed in the image within reason</li> <li>Contrasting colors should be allowed in the image within reason</li> <li>Photography + Manipulation should be allowed within reasonG</li> <li>Highly Encouraged: Day and Night versions of wallpapers</li> </ul> </li> <li> <p>Discouraged:</p> <ul> <li>Avoid using the Rocky logo, unless it fits with an abstract/minimalist idea for the background<ul> <li>Plain backdrops with the rocky logo are not permitted</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#minimum-resolutions","title":"Minimum Resolutions","text":"<p>For general submissions, we require the highest resolution to make things simpler, that way the user should be able to use a wallpaper without having to choose \"the right one\" for their monitor size. However, for the case case of extra backgrounds, this requirement is more relaxed. If a submitter wishes not to use the highest resolution but opts to make multiple resolutions instead, they should follow the below list:</p> <ul> <li>Minimum Required Resolutions:<ul> <li>16:9 (1920x1080)</li> <li>16:10 (1920x1200)</li> <li>5:4 (2048x1536)</li> <li>4:3 (1280x1024)</li> </ul> </li> <li>Additional (encouraged) allowed resolutions:<ul> <li>3440x1440</li> <li>2560x1600</li> <li>2560x1440</li> <li>2560x1080</li> <li>1800x1440</li> <li>Portrait mode versions of the above are optional</li> </ul> </li> </ul> <p>The placeholders in this commit shows an example of using the minimum resolutions.</p>"},{"location":"team/release_engineering/guidelines/rocky_logos_guidelines/#extras-package","title":"Extras Package","text":"<p>If a wallpaper does not make it to the main package (whether it doesn't meet guidelines or is simply just Rocky inspired), they should be able to be submitted for addition into the <code>rocky-backgrounds-extras</code> package.</p>"},{"location":"team/release_engineering/legacy/debrand_list/","title":"Rocky Debrand Packages List","text":"<p>This is a list of packages that require changes to their material for acceptance in Rocky Linux.  Usually this means there is some text or images in the package that reference upstream trademarks, and these must be swapped out before we can distribute them.</p> <p>The first items in this list are referenced from the excellent CentOS release notes here:  https://wiki.centos.org/Manuals/ReleaseNotes/CentOS8.1905#Packages_modified_by_CentOS</p> <p>It is assumed that we will have to modify these same packages.  It is also assumed that these changed packages might not necessarily be debranding.</p> <p>However, this list is incomplete.  For example, the package Nginx does not appear on the list, and still has RHEL branding in the CentOS repos.  We will need to investigate the rest of the package set and find any more packages like this that we must modify.</p> <p>One way to find said changes is to look for <code>?centos</code> tags in the SPEC file, while also looking at the manual debranding if there was any for the <code>c8</code> branches.</p> <p>There will be cases where a search and replace for <code>?centos</code> to <code>?rocky</code> will be sufficient.</p> <p>Current patches (for staging) are here.</p>"},{"location":"team/release_engineering/legacy/debrand_list/#packages-that-need-debranding-changes","title":"Packages that need debranding changes:","text":"Package Notes Work Status abrt See here DONE anaconda See here DONE apache-commons-net AppStream module with elevating branch names NO CHANGES REQUIRED ~~basesystem~~ (does not require debranding, it is a skeleton package) NO CHANGES REQUIRED cloud-init See here DONE - NEEDS REVIEW IN GITLAB (Rich Alloway) cockpit See here DONE ~~compat-glibc~~ NOT IN EL 8 dhcp See here DONE, NEEDS REVIEW IN GITLAB (Rich Alloway) firefox See here -- Still requires a distribution.ini ID MOSTLY DONE (Louis) fwupdate NOT STARTED glusterfs Changes don't appear to be required NO CHANGES REQUIRED gnome-settings-daemon No changes required for now. NO CHANGES REQUIRED grub2 (secureboot patches not done, just debrand) See here DONE, NEEDS REVIEW IN GITLAB AND SECUREBOOT (Rich Alloway) httpd See here DONE initial-setup See here DONE ipa This is a dual change: Logos and ipaplatform. Logos are taken care of in <code>rocky-logos</code> and the <code>ipaplatform</code> is taken care of here. See here DONE ~~kabi-yum-plugins~~ NOT IN EL 8 kernel See here for a potential example NOT STARTED ~~kde-settings~~ NOT IN EL 8 libreport See here DONE oscap-anaconda-addon See here DONE Requires install QA PackageKit See here DONE ~~pcs~~ NO CHANGES REQUIRED plymouth See here DONE ~~redhat-lsb~~ NO CHANGES REQUIRED redhat-rpm-config See here DONE scap-security-guide QA is likely required to test this package as it is NO CHANGES REQUIRED, QA REQUIRED shim NOT STARTED shim-signed NOT STARTED sos See here DONE subscription-manager See here DONE, NEEDS REVIEW ~~system-config-date~~ NOT IN EL8 ~~system-config-kdump~~ NOT IN EL8 thunderbird See here DONE ~~xulrunner~~ NOT IN EL 8 ~~yum~~ NO CHANGES REQUIRED (end of CentOS list) nginx Identified changes, in staging (ALMOST) DONE"},{"location":"team/release_engineering/legacy/debrand_list/#packages-that-need-to-become-other-packages","title":"Packages that need to become other packages:","text":"<p>We will want to create our own versions of these packages.  The full \"lineage\" is shown, from RHEL -&gt; CentOS -&gt; Rocky (Where applicable)</p> Package Notes redhat-indexhtml -&gt; centos-indexhtml -&gt; rocky-indexhtml Here redhat-logos -&gt; centos-logos -&gt; rocky-logos Here redhat-release-*  -&gt; centos-release -&gt; rocky-release Here centos-backgrounds -&gt; rocky-backgrounds Provided by logos centos-linux-repos -&gt; rocky-repos Here centos-obsolete-packages Here"},{"location":"team/release_engineering/legacy/debrand_list/#packages-that-exist-in-rhel-but-not-in-centos","title":"Packages that Exist in RHEL, but not in CentOS","text":"<p>For sake of complete information, here is a list of packages that are in RHEL 8, but do not exist in CentOS 8.  We do not need to worry about these packages:</p> <ul> <li>insights-client</li> <li>Red_Hat_Enterprise_Linux-Release_Notes-8-*</li> <li>redhat-access-gui</li> <li>redhat-bookmarks</li> <li>subscription-manager-migration</li> <li>subscription-manager-migration-data</li> </ul>"},{"location":"team/release_engineering/legacy/koji_tagging/","title":"Koji Tagging Strategy","text":"<p>This document covers how the Rocky Linux Release Engineering Team handles the tagging for builds in Koji and how it affects the overall build process.</p>"},{"location":"team/release_engineering/legacy/koji_tagging/#contact-information","title":"Contact Information","text":"Owner Release Engineering Team Email Contact releng@rockylinux.org Mattermost Contacts <code>@label</code> <code>@mustafa</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~Development</code>"},{"location":"team/release_engineering/legacy/koji_tagging/#what-is-koji","title":"What is Koji?","text":"<p>Koji is the build system used for Rocky Linux, as well as CentOS, Fedora, and likely others. Red Hat is likely to use a variant of Koji called \"brew\" with similar functionality and usage. Koji uses mock, a common RPM building utility, to build RPMs in a chroot environment.</p>"},{"location":"team/release_engineering/legacy/koji_tagging/#architecture-of-koji","title":"Architecture of Koji","text":""},{"location":"team/release_engineering/legacy/koji_tagging/#components","title":"Components","text":"<p>Koji comprises of multiple components:</p> <ul> <li><code>koji-hub</code>, which is the center of all Koji operations. It runs XML-RPC and relies on other components to call it for actions. This piece will also talk to the database and is one component that has write access to the filesystem.</li> <li><code>kojid</code>, which is the daemon that runs on the builder nodes. It's responsibility is to talk to the hub for actions in which it can or has to perform, for example, building an RPM or install images. But that is not all that it can do.</li> <li><code>koji-web</code> is a set of scripts that provides the web interface that anyone can see at our koji.</li> <li><code>koji</code> is the command line utility that is commonly used - It is a wrapper of the various API commands that can be called. In our environment, it requires a login via kerberos.</li> <li><code>kojira</code> is a component that ensures repodata is updated among the build tags.</li> </ul>"},{"location":"team/release_engineering/legacy/koji_tagging/#tags","title":"Tags","text":"<p>Tags are the most important part of the koji ecosystem. With tags, you can have specific repository build roots for the entire distribution or just a simple subset of builds that should not polute the main build tags (for example, for SIGs where a package or two might be newer (or even older) than what's in BaseOS/AppStream.</p> <p>Using tags, you can setup what is called \"inheritance\". So for example. You can have a tag named <code>dist-rocky8-build</code> but it happens to inherit <code>dist-rocky8-updates-build</code>, which will likely have a newer set of packages than the former. Inheritance, in a way, can be considered setting \"dnf priorities\" if you've done that before. Another way to look at it is \"ordering\" and \"what comes first\".</p> <p>Targets call tags to send packages to build in, generally.</p>"},{"location":"team/release_engineering/legacy/koji_tagging/#tag-strategy","title":"Tag Strategy","text":"<p>The question that we get is \"what's the difference between a build and an updates-build tag\" - It's all about the inheritance. For example, let's take a look at <code>dist-rocky8-build</code></p> <pre><code>  dist-rocky8-build\n    el8\n    dist-rocky8\n    build-modules\n       . . .\n</code></pre> <p>In this tag, you can see that this build tag inherits el8 packages first, and then the packages in dist-rocky8, and then build-modules. This is where \"base\" packages start out at, generally and a lot of them won't be updated or even change with the lifecycle of the version.</p> <pre><code>dist-rocky8-updates-build\n    el8\n    dist-rocky8-updates\n        dist-rocky8\n    dist-rocky8-build\n        build-modules\n</code></pre> <p>This one is a bit different. Notice that it inherits el8 first, and then dist-rocky8-updates, which inherits dist-rocky8. And then it also pulls in dist-rocky8-build, the previous tag we were talking about. This tag is where updates for a minor release are sent to.</p> <pre><code>dist-rocky8_4-updates-build\n    el8_4\n    dist-rocky8-updates\n        dist-rocky8\n    dist-rocky8-build\n        el8\n        build-modules\n</code></pre> <p>Here's a more interesting one. Notice something? It's pretty similar to the last one, but see how it's named el8_4 instead? This is where updates during 8.4 are basically sent to and that's how they get tagged as <code>.el8_4</code> on the RPM's. The <code>el8_4</code> tag contains a build macros package that instructs the <code>%dist</code> tag to be set that way. When 8.5 comes out, we'll basically have the same setup.</p> <p>At the end of the day, builds that happen in these updates-build tags get dropped in dist-rocky8-updates.</p>"},{"location":"team/release_engineering/legacy/koji_tagging/#what-about-modules","title":"What about modules?","text":"<p>Modules are a bit tricky. We generally don't touch how MBS does its tags or what's going on there. When builds are being done with the modules, they do end up using the el8 packages in some manner or form. The modules are separated entirely from the main tags though, so they don't polute the main tags. You don't want a situation where say, you build the latest ruby, but something builds off the default version of ruby provided in <code>el8</code> and now you're in trouble and get dnf filtering issues.</p>"},{"location":"team/release_engineering/legacy/koji_tagging/#how-do-we-determine-what-is-part-of-a-compose","title":"How do we determine what is part of a compose?","text":"<p>There are special tags that have a <code>-compose</code> suffix. These tags are used as a way to pull down packages for repository building during the pungi process.</p>"},{"location":"team/release_engineering/rpm/","title":"RPM","text":"<p>This section is primarily for documentation and useful information as it pertains to package building and modularity. Use the menu on the left side to find the information you're looking for.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/","title":"Local Module Builds","text":"<p>{% set git_revision_date = '2023-10-01' %} Within the Fedora and Red Hat ecosystem, modularity is unfortunately a piece that is a blessing and a curse. It might be more one way or the other.</p> <p>This page is primarily to talk about how to do local builds for modules, including the final formatting of the module yaml description that will have to be imported into the repo via <code>modifyrepo_c</code>.</p> <p>Note that the below is based on how <code>lazybuilder</code> performs module builds, which was made to be close to MBS+Koji and is not perfect. This is mostly used as a reference.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#contact-information","title":"Contact Information","text":"Owner Release Engineering Team Email Contact releng@rockylinux.org Email Contact infrastructure@rockylinux.org Mattermost Contacts <code>@label</code> <code>@mustafa</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~Development</code>"},{"location":"team/release_engineering/rpm/local_module_builds/#building-local-modules","title":"Building Local Modules","text":"<p>This section explains what it's like to build local modules, what you can do, and what you can expect.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#module-source-transmodrification-pulling-sources","title":"Module Source, \"transmodrification\", pulling sources","text":"<p>The module source typically lives in a <code>SOURCES</code> directory in a module git repo with the name of <code>modulemd.src.txt</code>. This is a basic version that could be used to do a module build. Each package listed is a reference to the stream version for that particular module.</p> <pre><code>document: modulemd\nversion: 2\ndata:\n  stream: 1.4\n  summary: 389 Directory Server (base)\n  description: &gt;-\n    389 Directory Server is an LDAPv3 compliant server.  The base package includes\n    the LDAP server and command line utilities for server administration.\n  license:\n    module:\n    - MIT\n  dependencies:\n  - buildrequires:\n      nodejs: [10]\n      platform: [el8]\n    requires:\n      platform: [el8]\n  filter:\n    rpms:\n    - cockpit-389-ds\n  components:\n    rpms:\n      389-ds-base:\n        rationale: Package in api\n        ref: stream-1.4-rhel-8.4.0\n        arches: [aarch64, ppc64le, s390x, x86_64]\n</code></pre> <p>Notice <code>ref</code>? That's the reference point. When a \"transmodrification\" occurs, the process is supposed to look at each RPM repo in the components['rpms'] list. The branch name that this module data lives in will be the basis of how it determines what the new references will be. In this example, the branch name is <code>r8-stream-1.4</code> so when we do the \"conversion\", it should become a git commit hash of the last commit in the branch <code>r8-stream-1.4</code> for that particular rpm component.</p> <pre><code>document: modulemd\nversion: 2\ndata:\n  stream: \"1.4\"\n  summary: 389 Directory Server (base)\n  description: 389 Directory Server is an LDAPv3 compliant server.  The base package\n    includes the LDAP server and command line utilities for server administration.\n  license:\n    module:\n    - MIT\n  dependencies:\n  - buildrequires:\n      nodejs:\n      - \"10\"\n      platform:\n      - el8\n    requires:\n      platform:\n      - el8\n  filter:\n    rpms:\n    - cockpit-389-ds\n  components:\n    rpms:\n      389-ds-base:\n        rationale: Package in api\n        ref: efe94eb32d597765f49b7b1528ba9881e1f29327\n        arches:\n        - aarch64\n        - ppc64le\n        - s390x\n        - x86_64\n</code></pre> <p>See the reference now? It's now a commit hash that refers directly to 389-ds-base on branch <code>r8-stream-1.4</code>, being the last commit/tag. See the glossary at the end of this page for more information, as it can be a commit hash, branch, or tag name.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#configuring-macros-and-contexts","title":"Configuring Macros and Contexts","text":"<p>Traditionally within an MBS and Koji system, there are several macros that are created and are usually unique per module stream. There are certain components that work together to create a unique <code>%dist</code> tag based on several factors. To summarize, here's what generally happens:</p> <ul> <li>A module version is formed as <code>M0m00YYYYMMDDhhmmss</code>, which would be the major version, 0, minor version, 0, and then a timestamp.</li> <li> <p>Select components are brought together and a sha1 hash is made, shortened to 8 characters for the context</p> <ul> <li>The runtime context is typically the \"dependencies\" section of the module source, calculated to sha1</li> <li>The build context is the <code>xmd['mbs']['buildrequires']</code> data that koji generates and is output into <code>module.txt</code>, calculated to sha1</li> <li>The runtime and build contexts are combined <code>BUILD:RUNTIME</code>, a sha1 is calculated, and then shortened to 8</li> <li>This context is typically the one that changes less often</li> </ul> </li> <li> <p>Select components are brought together and a sha1 hash is made, shortened to 8 characters for the dist tag</p> <ul> <li>The module name, stream, version, and context are all brought together as <code>name.stream.version.context</code>, calculated to sha1</li> </ul> </li> <li> <p>The <code>%dist</code> tag is given a format of <code>.module+elX.Y.Z+000+00000000</code> (note: fedora uses <code>.module_fcXX+000+00000000</code>)</p> <ul> <li>X is the major version, Y is the minor version, Z is typically 0.</li> <li>The second number is the iteration, aka the module number. If you've done 500 module builds, the next one would be 501, regardless of module.</li> <li>The last set is a context hash generated earlier in the step above</li> </ul> </li> </ul>"},{"location":"team/release_engineering/rpm/local_module_builds/#configuring-the-macros","title":"Configuring the Macros","text":"<p>In koji+MBS, a module macros package is made that defines the module macros. In lazybuilder, we skip that and define the macros directly. For example, in mock, we drop a file with all the macros we need. Here's an example of 389-ds. The file name is is <code>macros.zz-modules</code> to ensure these macros are picked up last and will have precendence and override macros of similar names, especially the <code>%dist</code> tag.</p> <pre><code>rpmbuild# cat /etc/rpm/macros.zz-modules\n\n%dist .module_el8.4.0+636+837ee950\n%modularitylabel 389-ds:1.4:8040020210810203142:866effaa\n%_module_build 1\n%_module_name 389-ds\n%_module_stream 1.4\n%_module_version 8040020210810203142\n%_module_context 866effaa\n</code></pre> <p>The the <code>%dist</code> tag honestly is the most important piece here. But all of these tags are required regardless.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#build-opts-macros","title":"Build Opts Macros","text":"<p>Some modules may have additional buildopts macros. Perl is a great example of this. When koji+MBS make their module macros package for the build, they combine the module macros and the build opts macros together into one file. It will be the same exact file name each time.</p> <pre><code>rpmbuild# cat /etc/rpm/macros.zz-modules\n\n# Module macros\n%dist .module+el8.4.0+463+10533ad3\n%modularitylabel perl:5.24:8040020210602173155:162f5753\n%_module_build 1\n%_module_name perl\n%_module_stream 5.24\n%_module_version 8040020210602173155\n%_module_context 162f5753\n\n# Build Opts macros\n%_with_perl_enables_groff 1\n%_without_perl_enables_syslog_test 1\n%_with_perl_enables_systemtap 1\n%_without_perl_enables_tcsh 1\n%_without_perl_Compress_Bzip2_enables_optional_test 1\n%_without_perl_CPAN_Meta_Requirements_enables_optional_test 1\n%_without_perl_IPC_System_Simple_enables_optional_test 1\n%_without_perl_LWP_MediaTypes_enables_mailcap 1\n%_without_perl_Module_Build_enables_optional_test 1\n%_without_perl_Perl_OSType_enables_optional_test 1\n%_without_perl_Pod_Perldoc_enables_tk_test 1\n%_without_perl_Software_License_enables_optional_test 1\n%_without_perl_Sys_Syslog_enables_optional_test 1\n%_without_perl_Test_Harness_enables_optional_test 1\n%_without_perl_URI_enables_Business_ISBN 1\n</code></pre>"},{"location":"team/release_engineering/rpm/local_module_builds/#built-module-example","title":"Built Module Example","text":"<p>Let's break down an example of <code>389-ds</code> - It's a simple module. Let's start with <code>modulemd.txt</code>, generated during a module build and before packages are built. Notice how it has <code>xmd</code> data. That is an integral part of making the context, though it's mostly information for koji and MBS and is generated on the fly and used throughout the build process for each arch. In the context of lazybuilder, it creates fake data to essentially fill the gap of not having MBS+Koji in the first place. The comments will point out what's used to make the contexts.</p> <pre><code>---\ndocument: modulemd\nversion: 2\ndata:\n  name: 389-ds\n  stream: 1.4\n  version: 8040020210810203142\n  context: 866effaa\n  summary: 389 Directory Server (base)\n  description: &gt;-\n    389 Directory Server is an LDAPv3 compliant server.  The base package includes\n    the LDAP server and command line utilities for server administration.\n  license:\n    module:\n    - MIT\n  xmd:\n    mbs:\n      # This section xmd['mbs']['buildrequires'] is used to generate the build context\n      # This is typically made before hand and is used with the dependencies section\n      # to make the context listed above.\n      buildrequires:\n        nodejs:\n          context: 30b713e6\n          filtered_rpms: []\n          koji_tag: module-nodejs-10-8030020210426100849-30b713e6\n          ref: 4589c1afe3ab66ffe6456b9b4af4cc981b1b7cdf\n          stream: 10\n          version: 8030020210426100849\n        platform:\n          context: 00000000\n          filtered_rpms: []\n          koji_tag: module-rocky-8.4.0-build\n          ref: virtual\n          stream: el8.4.0\n          stream_collision_modules:\n          ursine_rpms:\n          version: 2\n      commit: 53f7648dd6e54fb156b16302eb56bacf67a9024d\n      mse: TRUE\n      rpms:\n        389-ds-base:\n          ref: efe94eb32d597765f49b7b1528ba9881e1f29327\n      scmurl: https://git.rockylinux.org/staging/modules/389-ds?#53f7648dd6e54fb156b16302eb56bacf67a9024d\n      ursine_rpms: []\n  # Dependencies is part of the context combined with the xmd data. This data\n  # is already in the source yaml pulled for the module build in the first place.\n  # Note that in the source, it's usually `elX` rather than `elX.Y.Z` unless\n  # explicitly configured that way.\n  dependencies:\n  - buildrequires:\n      nodejs: [10]\n      platform: [el8.4.0]\n    requires:\n      platform: [el8]\n  filter:\n    rpms:\n    - cockpit-389-ds\n  components:\n    rpms:\n      389-ds-base:\n        rationale: Package in api\n        repository: git+https://git.rockylinux.org/staging/rpms/389-ds-base\n        cache: http://pkgs.fedoraproject.org/repo/pkgs/389-ds-base\n        ref: efe94eb32d597765f49b7b1528ba9881e1f29327\n        arches: [aarch64, ppc64le, s390x, x86_64]\n...\n</code></pre> <p>Below is a version meant to be imported into a repo. This is after the build's completion. You'll notice that some fields are either empty or missing from above or even from the git repo's source that we pulled from initially. You'll also notice that xmd is now an empty dictionary. This is on purpose. While it is optional in the repo module data, the build system typically gives it <code>{}</code>.</p> <pre><code>---\ndocument: modulemd\nversion: 2\ndata:\n  name: 389-ds\n  stream: 1.4\n  version: 8040020210810203142\n  context: 866effaa\n  arch: x86_64\n  summary: 389 Directory Server (base)\n  description: &gt;-\n    389 Directory Server is an LDAPv3 compliant server.  The base package includes\n    the LDAP server and command line utilities for server administration.\n  license:\n    module:\n    - MIT\n    content:\n    - GPLv3+\n  # This data is not an empty dictionary. It is required.\n  xmd: {}\n  dependencies:\n  - buildrequires:\n      nodejs: [10]\n      platform: [el8.4.0]\n    requires:\n      platform: [el8]\n  filter:\n    rpms:\n    - cockpit-389-ds\n  components:\n    rpms:\n      389-ds-base:\n        rationale: Package in api\n        ref: efe94eb32d597765f49b7b1528ba9881e1f29327\n        arches: [aarch64, ppc64le, s390x, x86_64]\n  artifacts:\n    rpms:\n    - 389-ds-base-0:1.4.3.16-19.module+el8.4.0+636+837ee950.src\n    - 389-ds-base-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-debuginfo-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-debugsource-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-devel-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-legacy-tools-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-legacy-tools-debuginfo-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-libs-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-libs-debuginfo-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-snmp-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - 389-ds-base-snmp-debuginfo-0:1.4.3.16-19.module+el8.4.0+636+837ee950.x86_64\n    - python3-lib389-0:1.4.3.16-19.module+el8.4.0+636+837ee950.noarch\n...\n</code></pre> <p>The final \"repo\" of modules (per arch) is eventually made with a designation like:</p> <pre><code>module-NAME-STREAM-VERSION-CONTEXT\n\nmodule-389-ds-1.4-8040020210810203142-866effaa\n</code></pre> <p>This is what pungi and other utilities bring in and then combine into a single repo, generally, taking care of the module.yaml.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#default-modules","title":"Default Modules","text":"<p>Most modules will have a set default that would be expected if a dnf install was called. For example, in EL8 if you said <code>dnf install postgresql-server</code>, the package that gets installed is version 10. If a module doesn't have a default set, a <code>dnf install</code> will traditionally not work. To ensure a module package will install without having to enable them and to use the default, you need default information. Here's the postgresql example.</p> <pre><code>---\ndocument: modulemd-defaults\nversion: 1\ndata:\n  module: postgresql\n  stream: 10\n  profiles:\n    9.6: [server]\n    10: [server]\n    12: [server]\n    13: [server]\n...\n</code></pre> <p>Even if a module only has one stream, default module information is still needed to ensure that a package can be installed without enabling the module explicitly. Here's an example.</p> <pre><code>---\ndocument: modulemd-defaults\nversion: 1\ndata:\n  module: httpd\n  stream: 2.4\n  profiles:\n    2.4: [common]\n...\n</code></pre> <p>This type of information is expected by pungi as a default modules repo that can be configured. These YAML's are not with the modules themselves. They are brought in when the repos are being created in the first place.</p> <p>In the context of lazybuilder, it checks for defaults if enabled and then the final repo that's made of the results will immediately have the information at the top. See the references below for the jinja template that lazybuilder uses to generate this information.</p> <p>As a final note, let's say an update comes in for postgresql and you want to ensure that the old version of postgresql 10 and the updated version of 10 can stay together. This is when the final module data is combined together and then it's added into the repo using <code>modifyrepo_c</code>. Note though, you do not have to have the modulemd-defaults provided again. You can have it once such as the first time you made the repo in the first place, and it will still work.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#building-the-packages","title":"Building the packages","text":"<p>So we have an idea of how the module data itself is made and managed. All there is left to do is to do a chain build in mock. The kicker is you need to pay attention to the build order that is assigned to each package being built. If a build order isn't assigned, assume that it's group 0 and will be built first. This does not stop 0 being assigned, but just know that <code>buildorder</code> being omitted implies group 0. See below.</p> <pre><code>    components:\n        rpms:\n            first:\n                rationale: core functions\n                ref: 3.0\n                buildorder: 0\n            second:\n                rationale: ui\n                ref: latest\n                buildorder: 0\n            third:\n                rationale: front end\n                ref: latest\n                buildorder: 1\n</code></pre> <p>What this shows is that the packages in build group 0 can be built simultaneously in the context of Koji+MBS. For a local build, you'd just put them first in the list. Basically each of these groups have to be done, completed, and available right away for the next package or set of packages. For koji+mbs, they do this automatically since they have a tag/repo that gets updated on each completion and the builds are done in parallel.</p> <p>For mock, a chain build will always have an internal repo that it uses, so each completed package will have a final createrepo done on it before moving on to the next package in the list. It's not parallel like koji, but it's still consistent.</p> <p>Essentially a mock command would look like:</p> <pre><code>mock -r module.cfg \\\n  --chain \\\n  --localrepo /var/lib/mock/modulename \\\n  first.src.rpm \\\n  second.src.rpm \\\n  third.src.rpm\n</code></pre>"},{"location":"team/release_engineering/rpm/local_module_builds/#making-the-final-yaml-and-repo","title":"Making the final YAML and repo","text":"<p>It's probably wise to have a template to make the module repo data off of. It's the same as having a script to \"transmodrify\" the module data properly to be used. Having a template will simplify a lot of things and will make it easier to convert the data from git and then the final build artifacts and data that makes the module data. The lazybuilder template is a good starting point, though it is a bit ugly, being made in jinja. It can be made better using python or even golang.</p> <p>Regardless, you should have it templated or scripted somehow. See the references in the next section.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#a-note-about-virtual-modules","title":"A note about virtual modules","text":"<p>Virtual modules are weird. They do not have a module dist tag, and they are just built like... any other RPM. The difference here is that a virtual module while it will should have an api['rpms'] list, it will not have an artifacts section.</p> <p>A huge example of this is perl:5.26 in EL8. perl 5.26 is the default version. If you install perl-interpreter, you'll get <code>perl-interpreter-5.26.3-419.el8_4.1.x86_64</code>. Notice how it doesn't have a module tag? That's because it wasn't built directly in MBS. There are not many virtual modules, but this is important to keep in mind that these do in fact exist. The module yaml itself will not have a list of packages to build, aka a \"components\" section. Here's the current EL8 perl 5.26 example.</p> <pre><code>document: modulemd\nversion: 2\ndata:\n    summary: Practical Extraction and Report Language\n    description: &gt;\n        Perl is a high-level programming language with roots in C, sed, awk\n        and shell scripting. Perl is good at handling processes and files, and\n        is especially good at handling text. Perl's hallmarks are practicality\n        and efficiency. While it is used to do a lot of different things,\n        Perl's most common applications are system administration utilities\n        and web programming.\n    license:\n        module: [ MIT ]\n    dependencies:\n        - buildrequires:\n              platform: [el8]\n          requires:\n              platform: [el8]\n    references:\n        community: https://docs.pagure.org/modularity/\n    profiles:\n        common:\n            description: Interpreter and all Perl modules bundled within upstream Perl.\n            rpms:\n                - perl\n        minimal:\n            description: Only the interpreter as a standalone executable.\n            rpms:\n                - perl-interpreter\n    api:\n        rpms:\n            - perl\n            - perl-Archive-Tar\n            - perl-Attribute-Handlers\n            - perl-autodie\n            - perl-B-Debug\n            - perl-bignum\n            - perl-Carp\n            - perl-Compress-Raw-Bzip2\n            - perl-Compress-Raw-Zlib\n            - perl-Config-Perl-V\n            - perl-constant\n            - perl-CPAN\n            - perl-CPAN-Meta\n            - perl-CPAN-Meta-Requirements\n            - perl-CPAN-Meta-YAML\n            - perl-Data-Dumper\n            - perl-DB_File\n            - perl-devel\n            - perl-Devel-Peek\n            - perl-Devel-PPPort\n            - perl-Devel-SelfStubber\n            - perl-Digest\n            - perl-Digest-MD5\n            - perl-Digest-SHA\n            - perl-Encode\n            - perl-Encode-devel\n            - perl-encoding\n            - perl-Env\n            - perl-Errno\n            - perl-experimental\n            - perl-Exporter\n            - perl-ExtUtils-CBuilder\n            - perl-ExtUtils-Command\n            - perl-ExtUtils-Embed\n            - perl-ExtUtils-Install\n            - perl-ExtUtils-MakeMaker\n            - perl-ExtUtils-Manifest\n            - perl-ExtUtils-Miniperl\n            - perl-ExtUtils-MM-Utils\n            - perl-ExtUtils-ParseXS\n            - perl-File-Fetch\n            - perl-File-Path\n            - perl-File-Temp\n            - perl-Filter\n            - perl-Filter-Simple\n            - perl-generators\n            - perl-Getopt-Long\n            - perl-HTTP-Tiny\n            - perl-interpreter\n            - perl-IO\n            - perl-IO-Compress\n            - perl-IO-Socket-IP\n            - perl-IO-Zlib\n            - perl-IPC-Cmd\n            - perl-IPC-SysV\n            - perl-JSON-PP\n            - perl-libnet\n            - perl-libnetcfg\n            - perl-libs\n            - perl-Locale-Codes\n            - perl-Locale-Maketext\n            - perl-Locale-Maketext-Simple\n            - perl-macros\n            - perl-Math-BigInt\n            - perl-Math-BigInt-FastCalc\n            - perl-Math-BigRat\n            - perl-Math-Complex\n            - perl-Memoize\n            - perl-MIME-Base64\n            - perl-Module-CoreList\n            - perl-Module-CoreList-tools\n            - perl-Module-Load\n            - perl-Module-Load-Conditional\n            - perl-Module-Loaded\n            - perl-Module-Metadata\n            - perl-Net-Ping\n            - perl-open\n            - perl-Params-Check\n            - perl-parent\n            - perl-PathTools\n            - perl-Perl-OSType\n            - perl-perlfaq\n            - perl-PerlIO-via-QuotedPrint\n            - perl-Pod-Checker\n            - perl-Pod-Escapes\n            - perl-Pod-Html\n            - perl-Pod-Parser\n            - perl-Pod-Perldoc\n            - perl-Pod-Simple\n            - perl-Pod-Usage\n            - perl-podlators\n            - perl-Scalar-List-Utils\n            - perl-SelfLoader\n            - perl-Socket\n            - perl-Storable\n            - perl-Sys-Syslog\n            - perl-Term-ANSIColor\n            - perl-Term-Cap\n            - perl-Test\n            - perl-Test-Harness\n            - perl-Test-Simple\n            - perl-tests\n            - perl-Text-Balanced\n            - perl-Text-ParseWords\n            - perl-Text-Tabs+Wrap\n            - perl-Thread-Queue\n            - perl-threads\n            - perl-threads-shared\n            - perl-Time-HiRes\n            - perl-Time-Local\n            - perl-Time-Piece\n            - perl-Unicode-Collate\n            - perl-Unicode-Normalize\n            - perl-utils\n            - perl-version\n    # We do not build any packages because they are already available\n    # in BaseOS or AppStream repository. We cannnot replace BaseOS\n    # packages.\n    #components:\n    #    rpms:\n</code></pre>"},{"location":"team/release_engineering/rpm/local_module_builds/#reference","title":"Reference","text":"<p>Below is a reference for what's in a module's data. Some keys are optional. There'll also be an example from lazybuilder, which uses jinja to template out the final data that is used in a repo.</p>"},{"location":"team/release_engineering/rpm/local_module_builds/#module-template-and-known-keys","title":"Module Template and Known Keys","text":"<p>Below are the keys that are expected in the YAML for both defaults and the actual module build itself. Each item will have information on the type of value it is (eg, is it a string, list), if it's optional or mandatory, plus comments that may point out what's valid in source data rather than final repo data. Some of the data below may not be used in EL, but it's important to know what is possible and what could be expected.</p> <p>This information was copied from: Fedora Modularity</p> <pre><code># Document type identifier\n# `document: modulemd-defaults` describes the default stream and profiles for\n# a module.\ndocument: modulemd-defaults\n# Module metadata format version\nversion: 1\ndata:\n    # Module name that the defaults are for, required.\n    module: foo\n    # A 64-bit unsigned integer. Use YYYYMMDDHHMM to easily identify the last\n    # modification time. Use UTC for consistency.\n    # When merging, entries with a newer 'modified' value will override any\n    # earlier values. (optional)\n    modified: 201812071200\n    # Module stream that is the default for the module, optional.\n    stream: \"x.y\"\n    # Module profiles indexed by the stream name, optional\n    # This is a dictionary of stream names to a list of default profiles to be\n    # installed.\n    profiles:\n        'x.y': []\n        bar: [baz, snafu]\n    # System intents dictionary, optional. Indexed by the intent name.\n    # Overrides stream/profiles for intent.\n    intents:\n        desktop:\n            # Module stream that is the default for the module, required.\n            # Overrides the above values for systems with this intent.\n            stream: \"y.z\"\n            # Module profiles indexed by the stream name, required\n            # Overrides the above values for systems with this intent.\n            # From the above, foo:x.y has \"other\" as the value and foo:bar has\n            # no default profile.\n            profiles:\n                'y.z': [blah]\n                'x.y': [other]\n        server:\n            # Module stream that is the default for the module, required.\n            # Overrides the above values for systems with this intent.\n            stream: \"x.y\"\n            # Module profiles indexed by the stream name, required\n            # Overrides the above values for systems with this intent.\n            # From the above foo:x.y and foo:bar have no default profile.\n            profiles:\n                'x.y': []\n</code></pre> <p>Note: The glossary explains this, but remember that AUTOMATIC means that it will typically not be in the module data itself, and will likely be in repo data itself. There are also spots where thare are things that are MANDATORY but also do not show up in a lot of modules, because the implicit/default option turns off that section.</p> <p>Note: There is a large chunk of these keys and values that state they are AUTOMATIC and they do show up in the module data as a result of the module data source and/or the build system doing work. An example of this is arch, among others.</p> <pre><code>##############################################################################\n# Glossary:                                                                  #\n#                                                                            #\n# build system: The process by which a module is built and packaged. In many #\n# cases, this will be the Module Build Service tool, but this term is used   #\n# as a catch-all to describe any mechanism for producing a yum repository    #\n# containing modular content from input module metadata files.               #\n#                                                                            #\n#                                                                            #\n# == Attribute Types ==                                                      #\n#                                                                            #\n# MANDATORY: Attributes of this type must be filled in by the packager of    #\n# this module. They must also be preserved and provided in the output        #\n# metadata produced by the build system for inclusion into a repository.     #\n#                                                                            #\n# OPTIONAL: Attributes of this type may be provided by the packager of this  #\n# module, when appropriate. If they are provided, they must also be          #\n# preserved and provided in the output metadata produced by the build        #\n# system for inclusion into a repository.                                    #\n#                                                                            #\n# AUTOMATIC: Attributes of this type must be present in the repository       #\n# metadata, but they may be left unspecified by the packager. In this case,  #\n# the build system is responsible for generating an appropriate value for    #\n# the attribute and including it in the repository metadata. If the packager #\n# specifies this attribute explicitly, it must be preserved and provided in  #\n# the output metadata for inclusion into a repository.                       #\n#                                                                            #\n# The definitions above describe the expected behavior of the build system   #\n# operating in its default configuration. It is permissible for the build    #\n# system to override user-provided entries through non-default operating     #\n# modes. If such changes are made, all items indicated as being required for #\n# the output repository must still be present.                               #\n##############################################################################\n\n\n# Document type identifier\n# `document: modulemd` describes the contents of a module stream\ndocument: modulemd\n\n# Module metadata format version\nversion: 2\n\ndata:\n    # name:\n    # The name of the module\n    # Filled in by the build system, using the VCS repository name as the name\n    # of the module.\n    #\n    # Type: AUTOMATIC\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    name: foo\n\n    # stream:\n    # Module update stream\n    # Filled in by the buildsystem, using the VCS branch name as the name of\n    # the stream.\n    #\n    # Type: AUTOMATIC\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    stream: \"latest\"\n\n    # version:\n    # Module version, 64-bit unsigned integer\n    # If this value is unset (or set to zero), it will be filled in by the\n    # buildsystem, using the VCS commit timestamp.  Module version defines the\n    # upgrade path for the particular update stream.\n    #\n    # Type: AUTOMATIC\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    version: 20160927144203\n\n    # context:\n    # Module context flag\n    # The context flag serves to distinguish module builds with the\n    # same name, stream and version and plays an important role in\n    # automatic module stream name expansion.\n    #\n    # If 'static_context' is unset or equal to FALSE:\n    #   Filled in by the buildsystem.  A short hash of the module's name,\n    #   stream, version and its expanded runtime dependencies. The exact\n    #   mechanism for generating the hash is unspecified.\n    #\n    #   Type: AUTOMATIC\n    #\n    #   Mandatory for module metadata in a yum/dnf repository.\n    #\n    # If 'static_context' is set to True:\n    #   The context flag is a string of up to thirteen [a-zA-Z0-9_] characters\n    #   representing a build and runtime configuration for this stream. This\n    #   string is arbitrary but must be unique in this module stream.\n    #\n    #   Type: MANDATORY\n    static_context: false\n    context: c0ffee43\n\n    # arch:\n    # Module artifact architecture\n    # Contains a string describing the module's artifacts' main hardware\n    # architecture compatibility, distinguishing the module artifact,\n    # e.g. a repository, from others with the same name, stream, version and\n    # context.  This is not a generic hardware family (i.e. basearch).\n    # Examples: i386, i486, armv7hl, x86_64\n    # Filled in by the buildsystem during the compose stage.\n    #\n    # Type: AUTOMATIC\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    arch: x86_64\n\n    # summary:\n    # A short summary describing the module\n    #\n    # Type: MANDATORY\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    summary: An example module\n\n    # description:\n    # A verbose description of the module\n    #\n    # Type: MANDATORY\n    #\n    # Mandatory for module metadata in a yum/dnf repository.\n    description: &gt;-\n        A module for the demonstration of the metadata format. Also,\n        the obligatory lorem ipsum dolor sit amet goes right here.\n\n    # servicelevels:\n    # Service levels\n    # This is a dictionary of important dates (and possibly supplementary data\n    # in the future) that describes the end point of certain functionality,\n    # such as the date when the module will transition to \"security fixes only\"\n    # or go completely end-of-life.\n    # Filled in by the buildsystem.  Service level names might have special\n    # meaning to other systems.  Defined externally.\n    #\n    # Type: AUTOMATIC\n    servicelevels:\n        rawhide:\n            # EOL dates are the ISO 8601 format.\n            eol: 2077-10-23\n        stable_api:\n            eol: 2077-10-23\n        bug_fixes:\n            eol: 2077-10-23\n        security_fixes:\n            eol: 2077-10-23\n\n    # license:\n    # Module and content licenses in the Fedora license identifier\n    # format\n    #\n    # Type: MANDATORY\n    license:\n        # module:\n        # Module license\n        # This list covers licenses used for the module metadata and\n        # possibly other files involved in the creation of this specific\n        # module.\n        #\n        # Type: MANDATORY\n        module:\n            - MIT\n\n        # content:\n        # Content license\n        # A list of licenses used by the packages in the module.\n        # This should be populated by build tools, not the module author.\n        #\n        # Type: AUTOMATIC\n        #\n        # Mandatory for module metadata in a yum/dnf repository.\n        content:\n            - ASL 2.0\n            - GPL+ or Artistic\n\n    # xmd:\n    # Extensible metadata block\n    # A dictionary of user-defined keys and values.\n    # Defaults to an empty dictionary.\n    #\n    # Type: OPTIONAL\n    xmd:\n        some_key: some_data\n\n    # dependencies:\n    # Module dependencies, if any\n    # A list of dictionaries describing build and runtime dependencies\n    # of this module.  Each list item describes a combination of dependencies\n    # this module can be built or run against.\n    # Dependency keys are module names, dependency values are lists of\n    # required streams.  The lists can be both inclusive (listing compatible\n    # streams) or exclusive (accepting every stream except for those listed).\n    # An empty list implies all active existing streams are supported.\n    # Requiring multiple streams at build time will result in multiple\n    # builds.  Requiring multiple streams at runtime implies the module\n    # is compatible with all of them.  If the same module streams are listed\n    # in both the build time and the runtime block, the build tools translate\n    # the runtime block so that it matches the stream the module was built\n    # against.  Multiple builds result in multiple output modulemd files.\n    # See below for an example.\n    # The example below illustrates how to build the same module in four\n    # different ways, with varying build time and runtime dependencies.\n    #\n    # Type: OPTIONAL\n    dependencies:\n        # Build on all available platforms except for f27, f28 and epel7\n        # After build, the runtime dependency will match the one used for\n        # the build.\n        - buildrequires:\n              platform: [-f27, -f28, -epel7]\n          requires:\n              platform: [-f27, -f28, -epel7]\n\n        # For platform:f27 perform two builds, one with buildtools:v1, another\n        # with buildtools:v2 in the buildroot.  Both will also utilize\n        # compatible:v3.  At runtime, buildtools isn't required and either\n        # compatible:v3 or compatible:v4 can be installed.\n        - buildrequires:\n              platform: [f27]\n              buildtools: [v1, v2]\n              compatible: [v3]\n          requires:\n              platform: [f27]\n              compatible: [v3, v4]\n\n        # For platform:f28 builds, require either runtime:a or runtime:b at\n        # runtime.  Only one build is performed.\n        - buildrequires:\n              platform: [f28]\n          requires:\n              platform: [f28]\n              runtime: [a, b]\n\n        # For platform:epel7, build against against all available extras\n        # streams and moreextras:foo and moreextras:bar.  The number of builds\n        # in this case will be 2 * &lt;the number of extras streams available&gt;.\n        # At runtime, both extras and moreextras will match whatever stream was\n        # used for build.\n        - buildrequires:\n              platform: [epel7]\n              extras: []\n              moreextras: [foo, bar]\n          requires:\n              platform: [epel7]\n              extras: []\n              moreextras: [foo, bar]\n\n    # references:\n    # References to external resources, typically upstream\n    #\n    # Type: OPTIONAL\n    references:\n        # community:\n        # Upstream community website, if it exists\n        #\n        # Type: OPTIONAL\n        community: http://www.example.com/\n\n        # documentation:\n        # Upstream documentation, if it exists\n        #\n        # Type: OPTIONAL\n        documentation: http://www.example.com/\n\n        # tracker:\n        # Upstream bug tracker, if it exists\n        #\n        # Type: OPTIONAL\n        tracker: http://www.example.com/\n\n    # profiles:\n    # Profiles define the end user's use cases for the module. They consist of\n    # package lists of components to be installed by default if the module is\n    # enabled. The keys are the profile names and contain package lists by\n    # component type. There are several profiles defined below. Suggested\n    # behavior for package managers is to just enable repository for selected\n    # module. Then users are able to install packages on their own. If they\n    # select a specific profile, the package manager should install all\n    # packages of that profile.\n    # Defaults to no profile definitions.\n    #\n    # Type: OPTIONAL\n    profiles:\n\n        # An example profile that defines a set of packages which are meant to\n        # be installed inside a container image artifact.\n        #\n        # Type: OPTIONAL\n        container:\n            rpms:\n                - bar\n                - bar-devel\n\n        # An example profile that delivers a minimal set of packages to\n        # provide this module's basic functionality. This is meant to be used\n        # on target systems where size of the distribution is a real concern.\n        #\n        # Type: Optional\n        minimal:\n            # A verbose description of the module, optional\n            description: Minimal profile installing only the bar package.\n            rpms:\n                - bar\n\n        # buildroot:\n        # This is a special reserved profile name.\n        #\n        # This provides a listing of packages that will be automatically\n        # installed into the buildroot of all component builds that are started\n        # after a component builds with its `buildroot: True` option set.\n        #\n        # The primary purpose of this is for building RPMs that change\n        # the build environment, such as those that provide new RPM\n        # macro definitions that can be used by subsequent builds.\n        #\n        # Specifically, it is used to flesh out the build group in koji.\n        #\n        # Type: OPTIONAL\n        buildroot:\n            rpms:\n                - bar-devel\n\n        # srpm-buildroot:\n        # This is a special reserved profile name.\n        #\n        # This provides a listing of packages that will be automatically\n        # installed into the buildroot of all component builds that are started\n        # after a component builds with its `srpm-buildroot: True` option set.\n        #\n        # The primary purpose of this is for building RPMs that change\n        # the build environment, such as those that provide new RPM\n        # macro definitions that can be used by subsequent builds.\n        #\n        # Very similar to the buildroot profile above, this is used by the\n        # build system to specify any additional packages which should be\n        # installed during the buildSRPMfromSCM step in koji.\n        #\n        # Type: OPTIONAL\n        srpm-buildroot:\n            rpms:\n                - bar-extras\n\n    # api:\n    # Module API\n    # Defaults to no API.\n    #\n    # Type: OPTIONAL\n    api:\n        # rpms:\n        # The module's public RPM-level API.\n        # A list of binary RPM names that are considered to be the\n        # main and stable feature of the module; binary RPMs not listed\n        # here are considered \"unsupported\" or \"implementation details\".\n        # In the example here we don't list the xyz package as it's only\n        # included as a dependency of xxx.  However, we list a subpackage\n        # of bar, bar-extras.\n        # Defaults to an empty list.\n        #\n        # Type: OPTIONAL\n        rpms:\n            - bar\n            - bar-extras\n            - bar-devel\n            - baz\n            - xxx\n\n    # filter:\n    # Module component filters\n    # Defaults to no filters.\n    #\n    # Type: OPTIONAL\n    filter:\n        # rpms:\n        # RPM names not to be included in the module.\n        # By default, all built binary RPMs are included.  In the example\n        # we exclude a subpackage of bar, bar-nonfoo from our module.\n        # Defaults to an empty list.\n        #\n        # Type: OPTIONAL\n        rpms:\n            - baz-nonfoo\n\n    # demodularized:\n    # Artifacts which became non-modular\n    # Defaults to no demodularization.\n    # Type: OPTIONAL\n    demodularized:\n        # rpms:\n        # A list of binary RPM package names which where removed from\n        # a module. This list explains to a package mananger that the packages\n        # are not part of the module anymore and up-to-now same-named masked\n        # non-modular packages should become available again. This enables\n        # moving a package from a module to a set of non-modular packages. The\n        # exact implementation of the demodularization (e.g. whether it\n        # applies to all modules or only to this stream) is defined by the\n        # package manager.\n        # Defaults to an empty list.\n        #\n        # Type: OPTIONAL\n        rpms:\n            - bar-old\n\n    # buildopts:\n    # Component build options\n    # Additional per component type module-wide build options.\n    #\n    # Type: OPTIONAL\n    buildopts:\n        # rpms:\n        # RPM-specific build options\n        #\n        # Type: OPTIONAL\n        rpms:\n            # macros:\n            # Additional macros that should be defined in the\n            # RPM buildroot, appended to the default set.  Care should be\n            # taken so that the newlines are preserved.  Literal style\n            # block is recommended, with or without the trailing newline.\n            #\n            # Type: OPTIONAL\n            macros: |\n                %demomacro 1\n                %demomacro2 %{demomacro}23\n\n            # whitelist:\n            # Explicit list of package build names this module will produce.\n            # By default the build system only allows components listed under\n            # data.components.rpms to be built as part of this module.\n            # In case the expected RPM build names do not match the component\n            # names, the list can be defined here.\n            # This list overrides rather then just extends the default.\n            # List of package build names without versions.\n            #\n            # Type: OPTIONAL\n            whitelist:\n                - fooscl-1-bar\n                - fooscl-1-baz\n                - xxx\n                - xyz\n\n        # arches:\n        # Instructs the build system to only build the\n        # module on this specific set of architectures.\n        # Includes specific hardware architectures, not families.\n        # See the data.arch field for details.\n        # Defaults to all available arches.\n        #\n        # Type: OPTIONAL\n        arches: [i686, x86_64]\n\n    # components:\n    # Functional components of the module\n    #\n    # Type: OPTIONAL\n    components:\n        # rpms:\n        # RPM content of the module\n        # Keys are the VCS/SRPM names, values dictionaries holding\n        # additional information.\n        #\n        # Type: OPTIONAL\n        rpms:\n            bar:\n                # name:\n                # The real name of the package, if it differs from the key in\n                # this dictionary. Used when bootstrapping to build a\n                # bootstrapping ref before building the package for real.\n                #\n                # Type: OPTIONAL\n                name: bar-real\n\n                # rationale:\n                # Why is this component present.\n                # A simple, free-form string.\n                #\n                # Type: MANDATORY\n                rationale: We need this to demonstrate stuff.\n\n                # repository:\n                # Use this repository if it's different from the build\n                # system configuration.\n                #\n                # Type: AUTOMATIC\n                repository: https://pagure.io/bar.git\n\n                # cache:\n                # Use this lookaside cache if it's different from the\n                # build system configuration.\n                #\n                # Type: AUTOMATIC\n                cache: https://example.com/cache\n\n                # ref:\n                # Use this specific commit hash, branch name or tag for\n                # the build.  If ref is a branch name, the branch HEAD\n                # will be used.  If no ref is given, the master branch\n                # is assumed.\n                #\n                # Type: AUTOMATIC\n                ref: 26ca0c0\n\n                # buildafter:\n                # Use the \"buildafter\" value to specify that this component\n                # must be be ordered later than some other entries in this map.\n                # The values of this array come from the keys of this map and\n                # not the real component name to enable bootstrapping.\n                # Use of both buildafter and buildorder in the same document is\n                # prohibited, as they will conflict.\n                #\n                # Note: The use of buildafter is not currently supported by the\n                # Fedora module build system.\n                #\n                # Type: AUTOMATIC\n                #\n                # buildafter:\n                #    - baz\n\n                # buildonly:\n                # Use the \"buildonly\" value to indicate that all artifacts\n                # produced by this component are intended only for building\n                # this component and should be automatically added to the\n                # data.filter.rpms list after the build is complete.\n                # Defaults to \"false\" if not specified.\n                #\n                # Type: AUTOMATIC\n                buildonly: false\n\n            # baz builds RPM macros for the other components to use\n            baz:\n                rationale: Demonstrate updating the buildroot contents.\n\n                # buildroot:\n                # If buildroot is set to True, the packages listed in this\n                # module's 'buildroot' profile will be installed into the\n                # buildroot of any component built in buildorder/buildafter\n                # batches begun after this one, without requiring that those\n                # packages are listed among BuildRequires.\n                #\n                # The primary purpose of this is for building RPMs that change\n                # the build environment, such as those that provide new RPM\n                # macro definitions that can be used by subsequent builds.\n                #\n                # Defaults to \"false\" if not specified.\n                #\n                # Type: OPTIONAL\n                buildroot: true\n\n                # srpm-buildroot:\n                # If srpm-buildroot is set to True, the packages listed in this\n                # module's 'srpm-buildroot' profile will be installed into the\n                # buildroot of any component built in buildorder/buildafter\n                # batches begun after this one, without requiring that those\n                # packages are listed among BuildRequires.\n                #\n                # The primary purpose of this is for building RPMs that change\n                # the build environment, such as those that provide new RPM\n                # macro definitions that can be used by subsequent builds.\n                #\n                # Defaults to \"false\" if not specified.\n                #\n                # Type: OPTIONAL\n                srpm-buildroot: true\n\n                # See component xyz for a complete description of buildorder\n                #\n                # build this component before any others so that the macros it\n                # creates are available to all of them.\n                buildorder: -1\n\n            xxx:\n                rationale: xxx demonstrates arches and multilib.\n\n                # arches:\n                # xxx is only available on the listed architectures.\n                # Includes specific hardware architectures, not families.\n                # See the data.arch field for details.\n                # Instructs the build system to only build the\n                # component on this specific set of architectures.\n                # If data.buildopts.arches is also specified,\n                # this must be a subset of those architectures.\n                # Defaults to all available arches.\n                #\n                # Type: AUTOMATIC\n                arches: [i686, x86_64]\n\n                # multilib:\n                # A list of architectures with multilib\n                # installs, i.e. both i686 and x86_64\n                # versions will be installed on x86_64.\n                # Includes specific hardware architectures, not families.\n                # See the data.arch field for details.\n                # Defaults to no multilib.\n                #\n                # Type: AUTOMATIC\n                multilib: [x86_64]\n\n            xyz:\n                rationale: xyz is a bundled dependency of xxx.\n\n                # buildorder:\n                # Build order group\n                # When building, components are sorted by build order tag\n                # and built in batches grouped by their buildorder value.\n                # Built batches are then re-tagged into the buildroot.\n                # Multiple components can have the same buildorder index\n                # to map them into build groups.\n                # Defaults to zero.\n                # Integer, from an interval [-(2^63), +2^63-1].\n                # In this example, bar, baz and xxx are built first in\n                # no particular order, then tagged into the buildroot,\n                # then, finally, xyz is built.\n                # Use of both buildafter and buildorder in the same document is\n                # prohibited, as they will conflict.\n                #\n                # Type: OPTIONAL\n                buildorder: 10\n\n        # modules:\n        # Module content of this module\n        # Included modules are built in the shared buildroot, together with\n        # other included content.  Keys are module names, values additional\n        # component information.  Note this only includes components and their\n        # properties from the referenced module and doesn't inherit any\n        # additional module metadata such as the module's dependencies or\n        # component buildopts.  The included components are built in their\n        # defined buildorder as sub-build groups.\n        #\n        # Type: OPTIONAL\n        modules:\n            includedmodule:\n\n                # rationale:\n                # Why is this module included?\n                #\n                # Type: MANDATORY\n                rationale: Included in the stack, just because.\n\n                # repository:\n                # Link to VCS repository that contains the modulemd file\n                # if it differs from the buildsystem default configuration.\n                #\n                # Type: AUTOMATIC\n                repository: https://pagure.io/includedmodule.git\n\n                # ref:\n                # See the rpms ref.\n                #\n                # Type: AUTOMATIC\n                ref: somecoolbranchname\n\n                # buildorder:\n                # See the rpms buildorder.\n                #\n                # Type: AUTOMATIC\n                buildorder: 100\n\n    # artifacts:\n    # Artifacts shipped with this module\n    # This section lists binary artifacts shipped with the module, allowing\n    # software management tools to handle module bundles.  This section is\n    # populated by the module build system.\n    #\n    # Type: AUTOMATIC\n    artifacts:\n\n        # rpms:\n        # RPM artifacts shipped with this module\n        # A set of NEVRAs associated with this module. An epoch number in the\n        # NEVRA string is mandatory.\n        #\n        # Type: AUTOMATIC\n        rpms:\n            - bar-0:1.23-1.module_deadbeef.x86_64\n            - bar-devel-0:1.23-1.module_deadbeef.x86_64\n            - bar-extras-0:1.23-1.module_deadbeef.x86_64\n            - baz-0:42-42.module_deadbeef.x86_64\n            - xxx-0:1-1.module_deadbeef.x86_64\n            - xxx-0:1-1.module_deadbeef.i686\n            - xyz-0:1-1.module_deadbeef.x86_64\n\n        # rpm-map:\n        # The rpm-map exists to link checksums from repomd to specific\n        # artifacts produced by this module. Any item in this list must match\n        # an entry in the data.artifacts.rpms section.\n        #\n        # Type: AUTOMATIC\n        rpm-map:\n\n          # The digest-type of this checksum.\n          #\n          # Type: MANDATORY\n          sha256:\n\n            # The checksum of the artifact being sought.\n            #\n            # Type: MANDATORY\n            ee47083ed80146eb2c84e9a94d0836393912185dcda62b9d93ee0c2ea5dc795b:\n\n              # name:\n              # The RPM name.\n              #\n              # Type: Mandatory\n              name: bar\n\n              # epoch:\n              # The RPM epoch.\n              # A 32-bit unsigned integer.\n              #\n              # Type: OPTIONAL\n              epoch: 0\n\n              # version:\n              # The RPM version.\n              #\n              # Type: MANDATORY\n              version: 1.23\n\n              # release:\n              # The RPM release.\n              #\n              # Type: MANDATORY\n              release: 1.module_deadbeef\n\n              # arch:\n              # The RPM architecture.\n              #\n              # Type: MANDATORY\n              arch: x86_64\n\n              # nevra:\n              # The complete RPM NEVRA.\n              #\n              # Type: MANDATORY\n              nevra: bar-0:1.23-1.module_deadbeef.x86_64\n</code></pre>"},{"location":"team/release_engineering/rpm/local_module_builds/#module-template-and-keys-using-jinja","title":"Module Template and Keys using jinja","text":"<pre><code>{% if module_default_data is defined %}\n---\ndocument: modulemd-defaults\nversion: {{ module_default_data.version }}\ndata:\n  module: {{ module_default_data.data.module }}\n  stream: {{ module_default_data.data.stream }}\n  profiles:\n{% for k in module_default_data.data.profiles %}\n    {{ k }}: [{{ module_default_data.data.profiles[k]|join(', ') }}]\n{% endfor %}\n...\n{% endif %}\n---\ndocument: {{ module_data.document }}\nversion: {{ module_data.version }}\ndata:\n  name: {{ source_name | default(\"source\") }}\n  stream: \"{{ module_data.data.stream }}\"\n  version: {{ module_version | default(8040) }}\n  context: {{ module_context | default('01010110') }}\n  arch: {{ mock_arch | default(ansible_architecture) }}\n  summary: {{ module_data.data.summary | wordwrap(width=79) | indent(width=4) }}\n  description: {{ module_data.data.description | wordwrap(width=79) | indent(width=4) }}\n  license:\n{% for (key, value) in module_data.data.license.items() %}\n    {{ key }}:\n    - {{ value | join('\\n    - ') }}\n{% endfor %}\n  xmd: {}\n{% if module_data.data.dependencies is defined %}\n  dependencies:\n{% for l in module_data.data.dependencies %}\n{% for r in l.keys() %}\n{% if loop.index == 1 %}\n  - {{ r }}:\n{% else %}\n    {{ r }}:\n{% endif %}\n{% for (m, n) in l[r].items() %}\n      {{ m }}: [{{ n | join(', ') }}]\n{% endfor %}\n{% endfor %}\n{% endfor %}\n{% endif %}\n{% if module_data.data.filter is defined %}\n  filter:\n{% for (key, value) in module_data.data.filter.items() %}\n    {{ key }}:\n    - {{ value | join('\\n    - ') }}\n{% endfor %}\n{% endif %}\n{% if module_data.data.profiles is defined %}\n  profiles:\n{% for (key, value) in module_data.data.profiles.items() %}\n    {{ key }}:\n{% for (key, value) in value.items() %}\n{% if value is iterable and (value is not string and value is not mapping) %}\n      {{ key | indent(width=6) }}:\n      - {{ value | join('\\n      - ') }}\n{% else %}\n      {{ key | indent(width=6) }}: {{ value }}\n{% endif %}\n{% endfor %}\n{% endfor %}\n{% endif %}\n{% if module_data.data.api is defined %}\n  api:\n{% for (key, value) in module_data.data.api.items() %}\n    {{ key }}:\n    - {{ value | join('\\n    - ') }}\n{% endfor %}\n{% endif %}\n{% if module_data.data.buildopts is defined %}\n  buildopts:\n{% for (key, value) in module_data.data.buildopts.items() %}\n    {{ key }}:\n{% for (key, value) in value.items() %}\n      {{ key }}: |\n        {{ value | indent(width=8) }}\n{% endfor %}\n{% endfor %}\n{% endif %}\n{% if module_data.data.references is defined %}\n  references:\n{% for (key, value) in module_data.data.references.items() %}\n    {{ key }}: {{ value }}\n{% endfor %}\n{% endif %}\n{% if module_data.data.components is defined %}\n  components:\n{% for (key, value) in module_data.data.components.items() %}\n    {{ key }}:\n{% for (key, value) in value.items() %}\n      {{ key }}:\n{% for (key, value) in value.items() %}\n{% if value is iterable and (value is not string and value is not mapping) %}\n        {{ key | indent(width=8) }}: [{{ value | join(', ') }}]\n{% else %}\n        {{ key | indent(width=8) }}: {{ value }}\n{% endif %}\n{% endfor %}\n{% endfor %}\n{% endfor %}\n{% endif %}\n{% if artifacts is defined %}\n  artifacts:\n{% for (key, value) in artifacts.items() %}\n    {{ key }}:\n    - {{ value | join('\\n    - ') }}\n{% endfor %}\n{% endif %}\n...\n</code></pre>"},{"location":"team/testing/","title":"QA Testing Team","text":""},{"location":"team/testing/#team-members","title":"Team Members","text":"Role Name Email Mattermost Name IRC Name Testing Lead Chris Stackpole stack@rockylinux.org @stack Testing Team Al Bowles @raktajino raktajino Testing Team Trevor Cooper tcooper@rockylinux.org @tcooper Testing Team Lukas Magauer lukas@magauer.eu @lumarel Testing Team Alan Marshall @alangm alangm"},{"location":"team/testing/#responsibilities","title":"Responsibilities","text":"<p>The Testing Team handles testing and QA for Rocky Linux.</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/qa_test_cases/","title":"QA:Test Cases","text":"<p>This page lists all test cases in work and who is working on them...</p>"},{"location":"team/testing/qa_test_cases/#initialization-requirements","title":"Initialization Requirements","text":"Requirement Test Case Assignee Status Release-blocking images must bootRocky Linux 8 Rocky Linux 9 QA:Testcase Boot Methods Boot ISO @tcooper template exists, openQA covered (ref) Release-blocking images must bootRocky Linux 8 Rocky Linux 9 QA:Testcase Boot Methods DVD @tcooper template exists, openQA covered (ref) Basic Graphics Mode behaviorsRocky Linux 8 QA:Testcase Basic Graphics Mode @tcooper openQA TestCase VNC Graphics Mode behaviorsRocky Linux 9 QA:Testcase VNC Graphics Mode @tcooper openQA TestCase No Broken PackagesRocky Linux 8 Rocky Linux 9 QA:Testcase Media RepoclosureQA:Testcase Media File Conflicts @tcooper manual using scripts or automated in CI Repositories Must Match UpstreamRocky Linux 8 Rocky Linux 9  QA:Testcase repocompare @tcooper manual using Skip's repocompare DebrandingRocky Linux 8 Rocky Linux 9 QA:Testcase Debranding Analysis @tcooper manual using scripts or automated in CI"},{"location":"team/testing/qa_test_cases/#installer-requirements","title":"Installer Requirements","text":"Requirement Test Case Assignee Status Media Consistency Verification QA:Testcase Media USB ddQA:Testcase Boot Methods Boot ISOQA:Testcase Boot Methods DVD @raktajino Packages and Installer Sources QA:Testcase Packages and Installer Sources @raktajino Implemented in openQA, document NAS (Network Attached Storage) QA:Testcase Network Attached Storage @raktajino Installation Interfaces QA:Testcase Installation Interfaces @raktajino Implemented in openQA, document Minimal Installation QA:Testcase Minimal Installation @raktajino Implemented in openQA, document Kickstart Installation QA:Testcase Kickstart Installation @raktajino Implemented in openQA, document Disk Layouts QA:Testcase Disk Layouts @raktajino Implemented in openQA, document Firmware RAID QA:Testcase Firmware RAID @raktajino Bootloader Disk Selection QA:Testcase Bootloader Disk Selection @raktajino Storage Volume Resize QA:Testcase Storage Volume Resize @raktajino Implemented in openQA, document Update Image QA:Testcase Update Image @raktajino Implemented in openQA, document Installer Help QA:Testcase Installer Help @raktajino Implemented in openQA, document Installer Translations QA:Testcase Installer Translations @raktajino Implemented in openQA, document"},{"location":"team/testing/qa_test_cases/#cloud-image-requirements","title":"Cloud Image Requirements","text":"Requirement Test Case Assignee Status Images Published to Cloud Providers QA:Testcase TBD @tbd"},{"location":"team/testing/qa_test_cases/#post-installation-requirements","title":"Post-Installation Requirements","text":"Requirement Test Case Assignee Status System Services QA:Testcase System Services @lumarel manual guide documented or needs new openQA testcase Keyboard Layout QA:Testcase Keyboard Layout @lumarel implemented in openQA SELinux Errors (Server) QA:Testcase SELinux Errors on Server @lumarel implemented in openQA SELinux and Crash Notifications (Desktop Only) QA:Testcase SELinux Errors on Desktop @lumarel partly implemented in openQA Default Application Functionality (Desktop Only) QA:Testcase Application Functionality @lumarel manual guide documented Default Panel Functionality (Desktop Only) QA:Testcase GNOME UI Functionality @lumarel implemented in openQA, additionally documented for manual inspection Dual Monitor Setup (Desktop Only) QA:Testcase Multimonitor Setup @lumarel manual guide documented Artwork and Assets (Server and Desktop) QA:Testcase Artwork and Assets @lumarel implemented in openQA, additionally documented for manual inspection Packages and Module Installation QA:Testcase Basic Package installsQA:Testcase Module Streams @lumarel partly implemented in openQA, manual guide documented Identity Management (FreeIPA) QA:Testcase Identity Management @lumarel manual guide documented, PR open for openQA implementation Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Basic_Graphics_Mode/","title":"QA:Testcase Basic Graphics Mode","text":"<p>REFERENCED RELEASE CRITERIA IS OVERLY GENERAL AND UNTESTABLE</p> <p>The associated release criteria, Release_Criteria#basic-graphics-mode-behaviors, for this test case is overly general and must be modified to specific enough to be testable.</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#basic-graphics-mode-behaviors release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Basic_Graphics_Mode/#description","title":"Description","text":"<p>This test case will verify that release-blocking installers function as intended using the generic video driver option (\u201cbasic graphics mode\u201d) on supported systems and classes of hardware.</p> Supported Systems and Hardware Classes x86_64aarch64ppc64s309x <p>TBD</p> <p>TBD</p> <p>TBD</p> <p>TBD</p>"},{"location":"team/testing/QA/Testcase_Basic_Graphics_Mode/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Basic_Graphics_Mode/#how-to-test","title":"How to test","text":"<ol> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> <li>In the installer select the appropriate option to intall in basic graphics mode.</li> <li>Proceed with installation on the test system.Depending on installer choices this MAY destroy all the data on the test system.</li> </ol> <p>DATA LOSS</p> <p>If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Basic_Graphics_Mode/#expected-results","title":"Expected Results","text":"<ol> <li>Selection of basic graphics mode in the Anaconda installer is possible.</li> <li>Anaconda installer presents a usable graphical intallation environment.</li> <li>System under test can be installed normally.</li> <li>After reboot system boots into graphical environment.</li> <li>After login user is able to operate the graphical environment.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Boot_Iso/","title":"QA:Testcase Boot Methods Boot Iso","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#initialization-requirements release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Boot_Iso/#description","title":"Description","text":"<p>This is to verify that the Anaconda installer starts correctly when booting from the Rocky Linux boot.iso.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Boot_Iso/#setup","title":"Setup","text":"<ol> <li>Prepare your system for booting the boot.iso image. This may involve writing the image to a USB key or burning it to an optical disk. Additionally, attaching the boot.iso to a virtual machine instance as a Virtual Optical Disk or mounting the boot.iso to server via baseboard management controller virtual media attach should be possible but is not expressly required.</li> </ol>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Boot_Iso/#how-to-test","title":"How to test","text":"<ol> <li>Boot the system from the prepared optical, USB media or virtual device attachment.</li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Boot_Iso/#expected-results","title":"Expected Results","text":"<ol> <li>Graphical boot menu is displayed for users to select install options. Navigating the menu and selecting entries must work. If no option is selected, the installer should load after a reasonable timeout.</li> <li>System boots into the Anaconda installer.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Dvd/","title":"QA:Testcase Boot Methods DVD","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#initialization-requirements release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Dvd/#description","title":"Description","text":"<p>This is to verify that the Anaconda installer starts correctly when booting from DVD.iso.</p>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Dvd/#setup","title":"Setup","text":"<ol> <li>Prepare your system for booting the DVD.iso image. This may involve writing the image to a USB key or burning it to an optical disk of sufficient capacity. Additionally, attaching the DVD.iso to a virtual machine instance as a Virtual Optical Disk or mounting the DVD.iso to server via baseboard management controller virtual media attach should be possible but is not expressly required.</li> </ol>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Dvd/#how-to-test","title":"How to test","text":"<ol> <li>Boot the system from the prepared optical, USB media or virtual device attachment.</li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Boot_Methods_Dvd/#expected-results","title":"Expected Results","text":"<ol> <li>Graphical boot menu is displayed for users to select install options. Navigating the menu and selecting entries must work. If no option is selected, the installer should load after a reasonable timeout.</li> <li>System boots into the Anaconda installer.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Bootloader_Disk_Selection/","title":"QA:Testcase Bootloader Disk Selection","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Bootloader Disk Selection release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Bootloader_Disk_Selection/#description","title":"Description","text":"<p>This test case verifies that the user is able to select an alternative disk on which to install the bootloader. It also verifies that, if the user is so inclined, they may choose not to install a bootloader at all.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Bootloader_Disk_Selection/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Bootloader_Disk_Selection/#how-to-test","title":"How to test","text":"<ol> <li>In the Installation Destination spoke, select the disk(s) to install to, then click the \"Full disk summary and bootl loader...\" button at the bottom of the screen: </li> <li>Click the checkbox next to the disk on which the bootloader is desired</li> <li>Alternatively, uncheck the boot checkbox next to all disks to skip bootloader installation</li> <li>Proceed with installation on the test system.</li> </ol>"},{"location":"team/testing/QA/Testcase_Bootloader_Disk_Selection/#expected-results","title":"Expected Results","text":"<ol> <li>Installation should complete successfully.</li> <li>Note that if no bootloader is installed, the system may not boot after installation is complete. This is expected.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Custom_Boot_Methods_Boot_Iso/","title":"QA:Testcase Custom Boot Methods Boot Iso","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#vnc-graphics-mode-behaviors release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Custom_Boot_Methods_Boot_Iso/#description","title":"Description","text":"<p>This is to verify that the Anaconda installer starts correctly when booting from the Rocky Linux boot.iso using a custom kernel command line.</p>"},{"location":"team/testing/QA/Testcase_Custom_Boot_Methods_Boot_Iso/#setup","title":"Setup","text":"<ol> <li>Prepare your system for booting the boot.iso image. This may involve writing the image to a USB key or burning it to an optical disk. Additionally, attaching the boot.iso to a virtual machine instance as a Virtual Optical Disk or mounting the boot.iso to server via baseboard management controller virtual media attach should be possible but is not expressly required.</li> </ol>"},{"location":"team/testing/QA/Testcase_Custom_Boot_Methods_Boot_Iso/#how-to-test","title":"How to test","text":"<ol> <li>Boot the system from the prepared optical, USB media or virtual device attachment.</li> <li>In the boot menu select the appropriate option to boot the installer.</li> <li>Interrupt the normal boot and edit the kernel command line.</li> <li>Add appropriate/required options to the kernel command line and resume booting into the installer.<ul> <li>Example: For network install from an alternate repository add <code>--inst.url=http://&lt;server&gt;/&lt;path_to_BaseOS_repo&gt;</code> and (optionally) <code>--inst.repo=AppStream,http://&lt;server&gt;/&lt;path_to_AppStream_repo&gt;</code> to the kernel command line.</li> <li>Example: For VNC install in Direct Mode add <code>--inst.vnc</code> to the kernel command line. For VNC install in Connect Mode add <code>--inst.vnc</code> and <code>--inst.vncserver=&lt;host&gt;:&lt;port&gt;</code> to the kernel command line.</li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Custom_Boot_Methods_Boot_Iso/#expected-results","title":"Expected Results","text":"<ol> <li>Boot menu is displayed for users to select install options. Navigating the menu and selecting entries must work. Editing the boot command line must be possible. If no option is selected, the installer should load after a reasonable timeout.</li> <li>System boots into the Anaconda installer and any command line options specified are utilized.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Debranding/","title":"QA:Testcase Debranding","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria - Debranding release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Debranding/#description","title":"Description","text":"<p>The Rocky Linux Release Engineering Team builds and maintains tools to manage the debranding of packages received from the upstream vendor. They have published a comprehensive debranding guide and maintain a list of packages requiring debranding patches.</p> <p>This testcase will verify that all packages available on released media that Rocky Linux Release Engineering has identified as requiring debranding are debranded successfully per their specification.</p>"},{"location":"team/testing/QA/Testcase_Debranding/#setup","title":"Setup","text":"<ol> <li>Obtain access to an environment with the <code>dnf</code>, and <code>koji</code> commands and access to Rocky Linux Gitlab and Rocky Linux Koji</li> <li>Download the ISO to be tested to test machine.</li> <li>Configure <code>/etc/koji.conf</code> to access the Rocky Linux Koji.</li> <li>Download a recent copy the patch.yml from Rocky Linux Gitlab.</li> </ol> <p>patch.yml</p> <p>Packages listed in <code>patch.yml</code> are names of source RPMs. Binary RPMs containing content produced by building the patched source RPMs need to be validated. The easiest way to get the list of all possible binary RPMs for a particular package and arch is to ask obtain that information in koji.</p>"},{"location":"team/testing/QA/Testcase_Debranding/#how-to-test","title":"How to test","text":"<ol> <li>Mount the ISO to be tested locally.<ul> <li>Example: <pre><code>$ mount -o loop Rocky-8.5-x86_64-dvd1.iso /media\n</code></pre></li> </ul> </li> <li>Determine the path(s) to the <code>repodata</code> directory(ies) on the ISO.<ul> <li>Example: <pre><code>$ find /media -name repodata\n</code></pre></li> </ul> </li> <li>For each package to be validated get the names of the <code>noarch</code> and <code>&lt;arch&gt;</code> specific packages created from it.<ul> <li>Example: <pre><code>$ koji --quiet latest-build --arch=x86_64 dist-rocky8-compose &lt;package&gt;\n$ koji --quiet latest-build --arch=noarch dist-rocky8-compose &lt;package&gt;\n</code></pre></li> </ul> </li> <li>Use <code>dnf</code> to obtain the paths to the binary packages requiring debranding.<ul> <li>Example: <pre><code>$ dnf download --urls --repofrompath BaseOS,/media/BaseOS --repo BaseOS \\\n    --repofrompath Minimal,/media/Minimal --repo Minimal \\\n    &lt;binary_package&gt;\n</code></pre></li> </ul> </li> <li> <p>Copy the <code>&lt;binary_package&gt;</code> from the media and examine it's metadata and/or contents to determine if it has obviously been patched.</p> <ul> <li>Example: <pre><code>$ rpm -q --changelog -p &lt;path_to_binary_package&gt; | head | \\\n    grep \"Release Engineering &lt;releng@rockylinux.org&gt;\" -C2 | \\\n    grep -Eq \"&lt;pattern_to_find&gt;\"\n\n$ rpm2cpio &lt;path_to_binary_package&gt; |\n    cpio --quiet --extract --to-stdout .&lt;file_to_examine&gt; | \\\n    grep -Eq \"&lt;pattern_to_find&gt;\"\n</code></pre></li> </ul> <p>NOTE</p> <p>Note all debranding patches will patch files directly and leave very obvious traces, some patches don't even add changelog messages to use as an indicator that the package has been patched or debranded. Sometimes the only solution is to extract the binary package and examine the contents directly to find something to test.</p> </li> <li> <p>Unmount the ISO.</p> <ul> <li>Example: <pre><code>$ umount /media\n</code></pre></li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Debranding/#expected-results","title":"Expected Results","text":"<ol> <li>Packages tracked by Release Engineering as requiring debranding and published on installation media are, in fact, debranded per their specification.</li> </ol> Sample Output SuccessFailure <pre><code>$ sudo mount -o loop Rocky-8.5-aarch64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ find /media -name repodata\n/media/BaseOS/repodata\n/media/Minimal/repodata\n\n$ curl -LOR https://git.rockylinux.org/rocky/metadata/-/raw/main/patch.yml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3410  100  3410    0     0  20419      0 --:--:-- --:--:-- --:--:-- 20419\n\n$ yq .debrand.all[] patch.yml | column -x -c 100 -o \" \"\nabrt                   anaconda               anaconda-user-help   chrony\ncloud-init             cockpit                crash                dhcp\ndnf                    firefox                fwupd                gcc\ngcc-toolset-9-gcc      gcc-toolset-10-gcc     gcc-toolset-11-gcc   gcc-toolset-12-gcc\ngnome-settings-daemon  grub2                  httpd                initial-setup\nkernel                 kernel-rt              libdnf               libreoffice\nlibreport              nginx                  opa-ff               opa-fm\nopenscap               pesign                 PackageKit           python-pip\npython3                redhat-rpm-config      scap-security-guide  shim\nshim-unsigned-x64      shim-unsigned-aarch64  sos                  subscription-manager\nsystemd                thunderbird            WALinuxAgent\n\n$ ./yq .debrand.r8[] patch.yml | column -x -c 100 -o \" \"\ndotnet3.0  fwupdate  gnome-boxes  libguestfs  pcs  plymouth\npython2\n\nNOTE: Only a single package will be shown in this Example.\n\n$ koji --quiet latest-build --arch=x86_64 dist-rocky8-compose sos\n\n$ koji --quiet latest-build --arch=noarch dist-rocky8-compose sos\nsos-4.1-9.el8_5.rocky.3.noarch\nsos-audit-4.1-9.el8_5.rocky.3.noarch\n\n$ dnf download --urls --repofrompath BaseOS,/media/BaseOS --repo BaseOS \\\n  --repofrompath Minimal,/media/Minimal --repo Minimal \\\n  sos sos-audit | grep -E \"^file\"\nfile:///media/BaseOS/Packages/s/sos-4.1-5.el8.noarch.rpm\nfile:///media/BaseOS/Packages/s/sos-audit-4.1-5.el8.noarch.rpm\n\n$ rpm -q --changelog -p /media/BaseOS/Packages/s/sos-4.1-5.el8.noarch.rpm | \\\n    head | grep \"Release Engineering &lt;releng@rockylinux.org&gt;\" -C2\n* Mon Oct 18 2021 Release Engineering &lt;releng@rockylinux.org&gt; - 4.1-5\n- Remove Red Hat branding from sos\n$ echo $?\n0\n\n$ rpm -q --changelog -p /media/BaseOS/Packages/s/sos-audit-4.1-5.el8.noarch.rpm | \\\n    head | grep \"Release Engineering &lt;releng@rockylinux.org&gt;\" -C2\n* Mon Oct 18 2021 Release Engineering &lt;releng@rockylinux.org&gt; - 4.1-5\n- Remove Red Hat branding from sos\n$ echo $?\n0\n\n$ umount /media\n</code></pre> <pre><code>$ sudo mount -o loop Rocky-8.5-aarch64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ find /media -name repodata\n/media/BaseOS/repodata\n/media/Minimal/repodata\n\n$ curl -LOR https://git.rockylinux.org/rocky/metadata/-/raw/main/patch.yml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3410  100  3410    0     0  20419      0 --:--:-- --:--:-- --:--:-- 20419\n\n$ yq .debrand.all[] patch.yml | column -x -c 100 -o \" \"\nabrt                   anaconda               anaconda-user-help   chrony\ncloud-init             cockpit                crash                dhcp\ndnf                    firefox                fwupd                gcc\ngcc-toolset-9-gcc      gcc-toolset-10-gcc     gcc-toolset-11-gcc   gcc-toolset-12-gcc\ngnome-settings-daemon  grub2                  httpd                initial-setup\nkernel                 kernel-rt              libdnf               libreoffice\nlibreport              nginx                  opa-ff               opa-fm\nopenscap               pesign                 PackageKit           python-pip\npython3                redhat-rpm-config      scap-security-guide  shim\nshim-unsigned-x64      shim-unsigned-aarch64  sos                  subscription-manager\nsystemd                thunderbird            WALinuxAgent\n\n$ ./yq .debrand.r8[] patch.yml | column -x -c 100 -o \" \"\ndotnet3.0  fwupdate  gnome-boxes  libguestfs  pcs  plymouth\npython2\n\nNOTE: Only a single package will be shown in this Example.\n\n$ koji --quiet latest-build --arch=x86_64 dist-rocky8-compose sos\n\n$ koji --quiet latest-build --arch=noarch dist-rocky8-compose sos\nsos-4.1-9.el8_5.rocky.3.noarch\nsos-audit-4.1-9.el8_5.rocky.3.noarch\n\n$ dnf download --urls --repofrompath BaseOS,/media/BaseOS --repo BaseOS \\\n  --repofrompath Minimal,/media/Minimal --repo Minimal \\\n  sos sos-audit | grep -E \"^file\"\nfile:///media/BaseOS/Packages/s/sos-4.1-5.el8.noarch.rpm\nfile:///media/BaseOS/Packages/s/sos-audit-4.1-5.el8.noarch.rpm\n\n$ rpm -q --changelog -p /media/BaseOS/Packages/s/sos-4.1-5.el8.noarch.rpm | \\\n    head | grep \"Release Engineering &lt;releng@rockylinux.org&gt;\" -C2\n$ echo $?\n1\n\n$ rpm -q --changelog -p /media/BaseOS/Packages/s/sos-audit-4.1-5.el8.noarch.rpm | \\\n    head | grep \"Release Engineering &lt;releng@rockylinux.org&gt;\" -C2\n$ echo $?\n1\n\n$ umount /media\n</code></pre> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/","title":"QA:Testcase Disk Layouts","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Disk Layouts release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/#description","title":"Description","text":"<p>This test case verifies successful installation to any supported partition layout using any file system or format combination.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/#how-to-test","title":"How to test","text":"<ol> <li>Select the Installation Destination spoke.</li> <li>Select the volumes to which the operating system should be installed.</li> <li>Select the Custom radio button under the Storage Configuration section, then click \"Done\".</li> <li>For each volume, perform these steps:<ol> <li>Choose the desired partitioning scheme from the dropdown menu. Supported options are Standard Partition, LVM, and LVM Thin Provisioning.</li> <li>Select the \"Encrypt my data\" checkbox to create an encrypted filesystem.</li> <li>Select the plus (+) button in the lower left hand corner to add a partition.</li> <li>Define the desired mount point and volume capacity, then click \"Add mount point\".</li> <li>Set the device type. Supported options are LVM, RAID, Standard Partition, and LVM Thin Provisioning.</li> <li>If device type was set to RAID, select the RAID level. Supported options are RAID0, RAID1, RAID4, RAID5, RAID6, and RAID10.</li> <li>Set the filesystem type. Supported options are BIOS Boot, ext2, ext3, ext4, swap, vfat, and xfs.</li> <li>In supported cases you may choose to disable formatting of existing partitions by unchecking the Reformat checkbox.</li> </ol> </li> <li>When all partitions have been created, click the blue Done button in the upper left corner.</li> <li>Review the Summary of Changes dialog, then click Accept Changes.</li> <li>Continue the installation as normal.</li> </ol>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete successfully and boot to the appropriate disk.</li> <li>The specified filesystem type and partition scheme should be used.</li> <li>If configured, software RAID should function as expected.</li> </ol>"},{"location":"team/testing/QA/Testcase_Disk_Layouts/#testing-with-openqa","title":"Testing with openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_standard_partition_ext4</code></li> <li><code>install_custom_gui_standard_partition_ext4</code></li> <li><code>install_lvm_ext4</code></li> <li><code>install_custom_gui_lvm_ext4</code></li> <li><code>install_software_raid</code></li> <li><code>install_custom_gui_software_raid</code></li> <li><code>install_xfs</code></li> <li><code>install_custom_gui_xfs</code></li> <li><code>install_lvmthin</code></li> <li><code>install_multi</code></li> <li><code>install_multi_empty</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Firmware_RAID/","title":"QA:Testcase Firmware RAID","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Firmware RAID release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Firmware_RAID/#description","title":"Description","text":"<p>The installer must be able to detect and install to firmware RAID devices. Note that system-specific bugs do not count as blockers. It is likely that some hardware support might be broken or not available at all. DUDs (driver update disks) are not considered for this criteria.</p>"},{"location":"team/testing/QA/Testcase_Firmware_RAID/#setup","title":"Setup","text":"<ol> <li>Add steps for setup for this Testcase.</li> </ol>"},{"location":"team/testing/QA/Testcase_Firmware_RAID/#how-to-test","title":"How to test","text":"<ol> <li>Do this first...</li> <li>Then do this...</li> </ol>"},{"location":"team/testing/QA/Testcase_Firmware_RAID/#expected-results","title":"Expected Results","text":"<ol> <li>This is what you should see/verify.</li> <li>You should also see/verify this.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/","title":"QA:Testcase Installation Interfaces","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Installation Interfaces release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/#description","title":"Description","text":"<p>This test case verifies that the installer can complete an installation using all Anaconda spokes.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/#how-to-test","title":"How to test","text":"<ol> <li>Select a keyboard layout in the Keyboard Layout spoke</li> <li>Set language support in the Language spoke</li> <li>Set the system time and date in the Time and Date spoke</li> </ol> <ol> <li>Set a root password in the Root Password spoke</li> <li>Create a user in the user creation spoke</li> </ol> <ol> <li>Select an installation source from the Installation Source spoke</li> <li>Select a set of packages to install from the Package Selection spoke</li> </ol> <ol> <li>Set a disk to which the operating system should install in the Installation Destination spoke</li> <li>Set the kdump state from the Kdump spoke</li> <li>Configure the system's network and hostname from the Network and Hostname spoke</li> <li>Select a security policy from the Security Policy spoke</li> </ol>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete and boot successfully.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installation_Interfaces/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_arabic_language</code> OR <code>install_asian_language</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Installer_Help/","title":"QA:Testcase Installer Help","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Installer Help release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Installer_Help/#description","title":"Description","text":"<p>Any element in the installer which contains a \u201chelp\u201d text must display the appropriate help documentation when selected.</p>"},{"location":"team/testing/QA/Testcase_Installer_Help/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Help/#how-to-test","title":"How to test","text":"<ol> <li>From the Anaconda Hub, click the Help button in the upper right hand corner.</li> <li>Verify that you see the \"Customizing your Installation\" help page.</li> <li>Verify that the \"Configuring language and location settings\" link displays a topically appropriate page.</li> <li>Close the Help browser to return to the Anaconda Hub.</li> <li>Verify that the Localization help page displays for the Keyboard, Language Support, and Time &amp; Date spokes:<ol> <li>Select the spoke, then click the Help button.</li> <li>Verify that you see the \"Configuring localization options\" page containing a functioning link to the \"Configuring keyboard, language, and time and date settings\" page.</li> <li>Close the Help browser (and click Done if necessary) to return to the Anaconda Hub.</li> </ol> </li> <li>Verify that the Help button in the Installation Source spoke displays the \"Configuring installation source\" page.</li> <li>Verify that the Help button in the Software Selection spoke displays the \"Configuring software selection\" page.</li> <li>Verify that the Help button in the Installation Destination spoke displays the \"Configuring storage devices\" page.</li> <li>Verify that the Help button in the Network &amp; Host Name spoke displays the \"Configuring network and host name options\" page.</li> <li>Verify that the Help button in the Root Password spoke displays the \"Configuring a root password\" page.</li> <li>Verify that the Help button in the User Creation spoke displays the \"Creating a user account\" page.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Help/#expected-results","title":"Expected Results","text":"<ol> <li>All links should work and display relevant content.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Help/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>anaconda_help</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Installer_Translations/","title":"QA:Testcase Installer Translations","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Installer Translations release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Installer_Translations/#description","title":"Description","text":"<p>The installer must correctly display all complete translations that are available for use.</p>"},{"location":"team/testing/QA/Testcase_Installer_Translations/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Translations/#how-to-test","title":"How to test","text":"<ol> <li>From the Language Selection spoke, select a language.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Translations/#expected-results","title":"Expected Results","text":"<ol> <li>All spokes should display at least some of the content in the selected language.</li> <li>It is expected to still see some content displayed in Latin characters even if a language that does not use Latin characters is selected.</li> </ol>"},{"location":"team/testing/QA/Testcase_Installer_Translations/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_asian_language</code></li> <li><code>install_arabic_language</code></li> <li><code>install_cyrillic_language</code></li> <li><code>install_european_language</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/","title":"QA:Testcase Kickstart Installation","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Kickstart Installation release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/#description","title":"Description","text":"<p>This test case verifies that installations via both local and remote Kickstart configuration files are successful.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/#setup","title":"Setup","text":"<ol> <li>Copy a valid Kickstart file to a USB stick</li> <li>Connect the USB stick to the test system</li> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> <li>Hit the Tab key to edit the boot command</li> <li>Provide a local Kickstart file by supplying the GRUB boot option <code>inst.ks=file:/path/to/local.ks</code> or a remote Kickstart file by supplying the GRUB boot option <code>inst.ks=https://git.resf.org/testing/createhdds/raw/branch/rocky/server.ks</code>.</li> </ol>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/#how-to-test","title":"How to test","text":"<ol> <li>Continue booting the installer as normal.</li> </ol>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete and boot successfully, automatically populating the options specified in the Kickstart file.</li> </ol>"},{"location":"team/testing/QA/Testcase_Kickstart_Installation/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_kickstart_nfs</code></li> <li><code>server_realmd_join_kickstart</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Media_File_Conflicts/","title":"QA:Testcase Media File Conflicts","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#no-broken-packages release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Media_File_Conflicts/#description","title":"Description","text":"<p>This testcase will verify that the offline repository included on release blocking images will not contain any file conflicts between packages without explicit <code>Conflicts:</code> tag in the package metadata.</p>"},{"location":"team/testing/QA/Testcase_Media_File_Conflicts/#setup","title":"Setup","text":"<ol> <li>Obtain access to an environment with the <code>dnf</code> and <code>python3</code> commands.</li> <li>Download the ISO to be tested to that machine.</li> <li>Download the <code>potential_conflict.py</code> script provided by Rocky Linux Testing Team.</li> </ol>"},{"location":"team/testing/QA/Testcase_Media_File_Conflicts/#how-to-test","title":"How to test","text":"<ol> <li>Mount the ISO to be tested locally.<ul> <li>Example:<code>mount -o loop Rocky-8.5-x86_64-minimal.iso /media</code></li> </ul> </li> <li>Determine the path to the <code>repodata</code> directory(ies) on the ISO.<ul> <li>Example:<code>find /media -name repodata</code></li> </ul> </li> <li>Run the <code>potential_conflict.py</code> script on the mounted ISO.<ul> <li>Example:<code>python3 /vagrant/scripts/potential_conflict.py --repofrompath BaseOS,/media/BaseOS --repoid BaseOS --repofrompath Minimal,/media/Minimal --repoid Minimal</code></li> </ul> </li> <li>Unmount the ISO.<ul> <li>Example:<code>umount /media</code></li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Media_File_Conflicts/#expected-results","title":"Expected Results","text":"<ol> <li>The <code>potential_conflict.py</code> script does not report any packages with non-declared conflicts.</li> </ol> Sample Output SuccessFailure <pre><code>$ sudo mount -o loop Rocky-8.5-aarch64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ python3 /vagrant/scripts/potential_conflict.py \\\n  --repofrompath BaseOS,/media/BaseOS --repoid BaseOS \\\n  --repofrompath Minimal,/media/Minimal --repoid Minimal\n\nAdded BaseOS repo from /media/BaseOS\nAdded Minimal repo from /media/Minimal\nGetting complete filelist for:\nfile:///media/BaseOS\nfile:///media/Minimal\n168374 files found.\n\nLooking for duplicated filenames:\n524 duplicates found.\n\nDoing more advanced checks to see if these are real conflicts:\n 10% complete (    52/   524,  1139/sec),    0 found - eta 0:00:00\n 35% complete (   182/   524,  1146/sec),    0 found - eta 0:00:00\n 45% complete (   234/   524,  1818/sec),    0 found - eta 0:00:00\n 50% complete (   260/   524, 592673/sec),    0 found - eta 0:00:00\n 55% complete (   286/   524, 778942/sec),    0 found - eta 0:00:00\n 60% complete (   312/   524, 801852/sec),    0 found - eta 0:00:00\n 79% complete (   416/   524,   234/sec),    0 found - eta 0:00:00\n 84% complete (   442/   524,   902/sec),    0 found - eta 0:00:00\n 89% complete (   468/   524,   935/sec),    0 found - eta 0:00:00\n 94% complete (   494/   524,  1616/sec),    0 found - eta 0:00:00\n 99% complete (   520/   524,  1114/sec),    0 found - eta 0:00:00\n\n0 file conflicts found.\n0 package conflicts found.\n\n== Package conflicts ==\n\n== File conflicts, listed by conflicting packages ==\n\n$ sudo umount /media\n</code></pre> <pre><code>$ sudo mount -o loop Rocky-8.5-x86_64-dvd1.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n\n$ python3 /vagrant/scripts/potential_conflict.py \\\n  --repofrompath AppStream,/media/AppStream --repoid AppStream \\\n  --repofrompath BaseOS,/media/BaseOS --repoid BaseOS\n\n  Added AppStream repo from /media/AppStream\n  Added BaseOS repo from /media/BaseOS\n  Getting complete filelist for:\n  file:///media/AppStream\n  file:///media/BaseOS\n  851967 files found.\n\n  Looking for duplicated filenames:\n  101865 duplicates found.\n\n  Doing more advanced checks to see if these are real conflicts:\n    5% complete (  5093/101865,  8713/sec),    0 found - eta 0:00:11\n   10% complete ( 10186/101865, 1787281/sec),    0 found - eta 0:00:05\n   15% complete ( 15279/101865, 2223312/sec),    0 found - eta 0:00:03\n   20% complete ( 20372/101865, 23614/sec),    0 found - eta 0:00:03\n   25% complete ( 25465/101865, 57188/sec),    0 found - eta 0:00:02\n   30% complete ( 30558/101865,  3831/sec),    0 found - eta 0:00:05\n   35% complete ( 35651/101865, 48455/sec),    0 found - eta 0:00:04\n   40% complete ( 40744/101865, 32067/sec),    0 found - eta 0:00:03\n   45% complete ( 45837/101865, 2136586/sec),    0 found - eta 0:00:03\n   50% complete ( 50930/101865, 72529/sec),    0 found - eta 0:00:02\n   55% complete ( 56023/101865, 176294/sec),    0 found - eta 0:00:02\n   60% complete ( 61116/101865, 68622/sec),    1 found - eta 0:00:01\n   65% complete ( 66209/101865, 155133/sec),    1 found - eta 0:00:01\n   70% complete ( 71302/101865, 13874/sec),    1 found - eta 0:00:01\n   75% complete ( 76395/101865, 10835/sec),    1 found - eta 0:00:01\n   80% complete ( 81488/101865, 27477/sec),    1 found - eta 0:00:00\n   85% complete ( 86581/101865,  9075/sec),    1 found - eta 0:00:00\n   90% complete ( 91674/101865, 14807/sec),    1 found - eta 0:00:00\n   95% complete ( 96767/101865, 197437/sec),    1 found - eta 0:00:00\n  100% complete (101860/101865, 38727/sec),    1 found - eta 0:00:00\n\n  1 file conflicts found.\n  11 package conflicts found.\n\n  == Package conflicts ==\n  mariadb-server-utils-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-server-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  python3-mod_wsgi-4.6.4-4.el8.x86_64\n  python38-mod_wsgi-4.6.8-3.module+el8.4.0+570+c2eaf144.x86_64\n  python39-mod_wsgi-4.7.1-4.module+el8.4.0+574+843c4898.x86_64\n\n  libcmpiCppImpl0-2.0.3-15.el8.i686\n  tog-pegasus-libs-2:2.14.1-46.el8.i686\n\n  mariadb-connector-c-devel-3.1.11-2.el8_3.i686\n  mariadb-connector-c-devel-3.1.11-2.el8_3.x86_64\n  mariadb-devel-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-devel-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  mariadb-server-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-server-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  mariadb-test-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-test-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  mariadb-connector-c-devel-3.1.11-2.el8_3.i686\n  mariadb-connector-c-devel-3.1.11-2.el8_3.x86_64\n  mysql-devel-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  mariadb-devel-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-devel-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  mariadb-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n\n  libcmpiCppImpl0-2.0.3-15.el8.x86_64\n  tog-pegasus-libs-2:2.14.1-46.el8.x86_64\n\n  libev-libevent-devel-4.24-6.el8.i686\n  libev-libevent-devel-4.24-6.el8.x86_64\n  libevent-devel-2.1.8-5.el8.i686\n  libevent-devel-2.1.8-5.el8.x86_64\n\n\n  == File conflicts, listed by conflicting packages ==\n  mariadb-server-3:10.3.28-1.module+el8.4.0+427+adf35707.x86_64\n  mysql-test-8.0.26-1.module+el8.4.0+652+6de068a7.x86_64\n    /usr/bin/mysqld_safe\n\n$ sudo umount /media\n</code></pre> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Media_Repoclosure/","title":"QA:Testcase Media Repoclosure","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#no-broken-packages release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Media_Repoclosure/#description","title":"Description","text":"<p>This testcase will verify that the offline repository included on release blocking images will not contain broken dependencies.</p>"},{"location":"team/testing/QA/Testcase_Media_Repoclosure/#setup","title":"Setup","text":"<ol> <li>Obtain access to an environment with the <code>dnf repoclosure</code> command.</li> <li>Download the ISO to be tested to that machine.</li> </ol>"},{"location":"team/testing/QA/Testcase_Media_Repoclosure/#how-to-test","title":"How to test","text":"<ol> <li>Mount the ISO to be tested locally.<ul> <li>Example:<code>mount -o loop Rocky-8.5-x86_64-minimal.iso /media</code></li> </ul> </li> <li>Determine the path to the <code>repodata</code> directory(ies) on the ISO.<ul> <li>Example:<code>find /media -name repodata</code></li> </ul> </li> <li>Run the <code>dnf repoclosure</code> command on the mounted ISO.<ul> <li>Example:<code>dnf --verbose repoclosure --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath Minimal,/media/Minimal --repo Minimal</code></li> </ul> </li> <li>Unmount the ISO.<ul> <li>Example:<code>umount /media</code></li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Media_Repoclosure/#expected-results","title":"Expected Results","text":"<ol> <li>The <code>dnf repoclosure</code> command does not generate any errors.</li> </ol> Sample Output SuccessFailure <pre><code>$ sudo mount -o loop Rocky-8.5-x86_64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n[vagrant@localhost ~]$ dnf --refresh repoclosure \\\n  --repofrompath BaseOS,/media/BaseOS --repo BaseOS \\\n  --repofrompath Minimal,/media/Minimal --repo Minimal\nAdded BaseOS repo from /media/BaseOS\nAdded Minimal repo from /media/Minimal\nBaseOS                                               102 MB/s | 2.6 MB     00:00\nMinimal                                               90 kB/s | 384  B     00:00\n\n$ sudo umount /media\n</code></pre> <p>NOTE: In this example the content of the <code>Rocky-8.5-x86_64-minimal.iso</code> was copied to <code>/tmp</code> then the BaseOS repository was modified to remove the <code>setup-2.12.2-6.el8.noarch.rpm</code> package and the repository metadata was regenerated.</p> <pre><code>[vagrant@localhost ~]$ dnf --refresh repoclosure \\\n  --repofrompath BaseOS,/tmp/media/BaseOS --repo BaseOS \\\n  --repofrompath Minimal,/tmp/media/Minimal --repo Minimal\nAdded BaseOS repo from /tmp/media/BaseOS\nAdded Minimal repo from /tmp/media/Minimal\nBaseOS                                               3.7 MB/s | 3.8 kB     00:00\nMinimal                                              3.7 MB/s | 3.8 kB     00:00\npackage: basesystem-11-5.el8.noarch from BaseOS\n  unresolved deps:\n    setup\npackage: dump-1:0.4-0.36.b46.el8.x86_64 from BaseOS\n  unresolved deps:\n    setup\npackage: filesystem-3.8-6.el8.x86_64 from BaseOS\n  unresolved deps:\n    setup\npackage: initscripts-10.00.15-1.el8.x86_64 from BaseOS\n  unresolved deps:\n    setup\npackage: rpcbind-1.2.5-8.el8.x86_64 from BaseOS\n  unresolved deps:\n    setup\npackage: shadow-utils-2:4.6-14.el8.x86_64 from BaseOS\n  unresolved deps:\n    setup\nError: Repoclosure ended with unresolved dependencies.\n</code></pre> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Media_USB_dd/","title":"QA:Testcase Media USB dd","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#initialization-requirements release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Media_USB_dd/#description","title":"Description","text":"<p>This verifies that Rocky Linux ISO image can be written to USB media using <code>dd</code> command, and the resulting USB media successfully boots to the Anaconda Installer.</p> <p>DATA LOSS</p> <p>Any data on the USB stick used for this test is likely to be destroyed. Please do not use a stick whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Media_USB_dd/#setup","title":"Setup","text":"<ol> <li>Provide a USB media device that is larger than the ISO image you wish to test and that it can be completely erased.</li> <li>Provide a Linux (or other *nix system) that has the <code>dd</code> command available and an unoccupied USB port.</li> <li>Download the Rocky Linux ISO image you wish to test onto the test system.<ul> <li>Example command:<code>curl -LOR https://dl.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-x86_64-boot.iso</code></li> </ul> </li> <li>Download the <code>CHECKSUM</code> file that goes with the Rocky Linux ISO image that you wish to test.<ul> <li>Example command:<code>curl -LOR https://dl.rockylinux.org/pub/rocky/8/isos/x86_64/CHECKSUM</code></li> </ul> </li> <li>Download the <code>CHECKSUM.sig</code> file that does with the <code>CHECKSUM</code> file.<ul> <li>Example command:<code>curl -LOR https://dl.rockylinux.org/pub/rocky/8/isos/x86_64/CHECKSUM.sig</code></li> </ul> </li> <li>Download the Rocky Release Engineering GPG key.<ul> <li>Example command:<code>curl -LOR https://dl.rockylinux.org/pub/rocky/RPM-GPG-KEY-rockyofficial</code></li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Media_USB_dd/#how-to-test","title":"How to test","text":"<ol> <li>Import the Rocky Release Engineering GPG key.<ul> <li>Example command:<code>gpg --import RPM-GPG-KEY-rockyofficial</code></li> </ul> </li> <li>Verify the signature of the CHECKSUM file.<ul> <li>Example command:<code>gpg --verify-file CHECKSUM.sig</code></li> </ul> </li> <li>Verify the CHECKSUM of the Rocky Linux ISO...<ul> <li>Example command:<code>shasum -a 256 --ignore-missing -c CHECKSUM</code></li> </ul> </li> <li>Write the Rocky Linux ISO to the USB media using <code>dd</code>...<ul> <li>Example command:<code>dd if=Rocky-8.5-x86_64-boot.iso of=/dev/sdX bs=16M status=progress oflag=direct</code>...where you replace <code>sdX</code> with the device identifier of your USB media.This will destroy all data on the disk.</li> </ul> </li> <li>Boot the test system with the USB media.</li> <li>In the boot menu select the appropriate option to boot the installer.</li> <li>[OPTIONAL] Proceed with installation on the test system.Depending on installer choices this MAY destroy all the data on the test system.</li> </ol>"},{"location":"team/testing/QA/Testcase_Media_USB_dd/#expected-results","title":"Expected Results","text":"<ol> <li>The gpg signature on the <code>CHECKSUM</code> file is valid.</li> <li>The <code>CHECKSUM</code> of the Rocky Linux ISO is valid.</li> <li>The Rocky Linux ISO is written to the USB stick without errors.</li> <li>The USB stick boots without errors.</li> <li>The Anaconda Installer starts without errors.</li> </ol> <p>DATA LOSS</p> <p>If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p> <p>[OPTIONALLY] 6. The installation finishes successfully and, if the minimal or DVD ISO were used, the package repository on the USB stick (not a network based repository) was used for the installation.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/","title":"QA:Testcase Minimal Installation","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Minimal Installation release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/#description","title":"Description","text":"<p>This test case verifies that a networked minimal installation is able to install the 'Minimal' package set. The installation should not require use of local packages to complete.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/#how-to-test","title":"How to test","text":"<ol> <li>From the Installation Source spoke, configure a remote repository source from MirrorManager appropriate to the architecture under test.</li> <li>From the Software Selection spoke, select the Minimal package set.</li> <li>Complete the installation using desired parameters.</li> </ol>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete and boot successfully.</li> </ol>"},{"location":"team/testing/QA/Testcase_Minimal_Installation/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_minimal</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/","title":"QA:Testcase Network Attached Storage","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Network Attached Storage release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#description","title":"Description","text":"<p>The installer must be able to detect and install to supported NAS devices (if possible and supported by the kernel).</p>"},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#setup","title":"Setup","text":"<ol> <li>Add steps for setup for this Testcase.</li> </ol>"},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#how-to-test","title":"How to test","text":""},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#nfs","title":"NFS","text":"<p>install nfs-utils sudo mount -t nfs nfs-server:/nfs/path /mnt then a created a file echo 1 &gt; /mnt/1 verified it and permissions ls /mnt; cat /mnt/1 then deleted it rm /mnt/1 then unmounted sudo umount /mnt</p>"},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#iscsi","title":"iSCSI","text":""},{"location":"team/testing/QA/Testcase_Network_Attached_Storage/#expected-results","title":"Expected Results","text":"<ol> <li>This is what you should see/verify.</li> <li>You should also see/verify this.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/","title":"QA:Testcase Packages and Installer Sources","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Packages and Installer Sources release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/#description","title":"Description","text":"<p>This test case verifies that the installer can successfully install any of the supported package sets via any of the supported installer sources.</p> <p>The following package sets are supported for installs from local media:</p> <ul> <li>server</li> <li>minimal</li> </ul> <p>The following package sets are only available from remote sources and require a network connection:</p> <ul> <li>workstation</li> <li>graphical-server</li> <li>virtualization-host</li> </ul> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/#how-to-test","title":"How to test","text":"<ol> <li>For local package installations it is not necessary to enable networking or specify a mirror.</li> <li>For package installation from remote sources:<ol> <li>From the Network and Hostname spoke, enable networking.</li> <li>From the Installation Source spoke, configure a remote software source, supplying an appropriate mirror for the version and architecture under test.</li> </ol> </li> <li>Complete the installer and wait for the machine to reboot.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete and boot successfully.</li> <li>If a graphical package set was specified, the system should boot to a graphical login screen.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_Installer_Sources/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria, provided they pass the <code>_do_install_reboot</code> module at a minimum:</p> <ul> <li><code>install_packageset_server</code></li> <li><code>install_packageset_minimal</code></li> <li><code>install_packageset_workstation</code></li> <li><code>install_packageset_graphical-server</code></li> <li><code>install_packageset_virtualization-host</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Packages_No_Insights/","title":"QA:Testcase Packages No Insights","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#repositories-must-match-upstream release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Packages_No_Insights/#description","title":"Description","text":"<p>This test will verify that <code>insights-client</code> package is not declared be installed as part of a package group.</p>"},{"location":"team/testing/QA/Testcase_Packages_No_Insights/#setup","title":"Setup","text":"<ol> <li>Obtain access to an environment with the <code>dnf</code> command.</li> <li>Download the ISO to be tested to that machine.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_No_Insights/#how-to-test","title":"How to test","text":"<ol> <li>Mount the ISO to be tested locally.</li> <li>Determine the path to the <code>comps</code> file(s) on the ISO.</li> <li>Verify that <code>insights-client</code> is not declared to be installed automatically.<ul> <li>Example 1:<code>find /media -name \"*comps*.xml\" -exec grep -H \"insights-client\" '{}' \\;</code></li> <li>Example 2:<code>dnf --refresh --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream groupinfo base | grep -E \":|insights\"</code></li> </ul> </li> <li>Unmount the ISO.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_No_Insights/#expected-results","title":"Expected Results","text":"<ol> <li><code>insights-client</code> is not declared to be installed by default.</li> </ol> Sample Output SuccessFailure <p>UPDATE SAMPLE</p> <p>NOTE: This example needs to be refreshed when the 8.6 ISO has been produced. As seen in the Failure section below the <code>Rocky-8.5-x86_64-dvd1.iso</code> includes the <code>insights-client</code> as part of the <code>base</code> group. The package should be included on the DVD ISO but should not be installed automatically.</p> <pre><code>$ sudo mount -o loop Rocky-8.5-aarch64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ dnf --refresh --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath Minimal,/media/Minimal --repo Minimal search insights-client\nAdded BaseOS repo from /media/BaseOS\nAdded Minimal repo from /media/Minimal\nBaseOS                                                                    3.8 MB/s | 3.9 kB     00:00\nMinimal                                                                   3.7 MB/s | 3.8 kB     00:00\nNo matches found.\n\n$ find /media -name \"*comps*.xml\" -exec grep -H \"insights-client\" '{}' \\;\n\n$ dnf --refresh --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath Minimal,/media/Minimal --repo Minimal groupinfo base | grep -E \":|insights\"\nBaseOS                                          3.8 MB/s | 3.9 kB     00:00\nMinimal                                         3.7 MB/s | 3.8 kB     00:00\nGroup: Base\n Description: The standard installation of Rocky Linux.\n Mandatory Packages:\n Default Packages:\n Optional Packages:\n\n$ sudo umount /media\n</code></pre> <pre><code>$ sudo mount -o loop Rocky-8.5-x86_64-dvd1.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ dnf --refresh --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream search insights-client\nAdded BaseOS repo from /media/BaseOS\nAdded AppStream repo from /media/AppStream\nBaseOS                                                                    3.8 MB/s | 3.9 kB     00:00\nAppStream                                                                 4.2 MB/s | 4.3 kB     00:00\n================================= Name Exactly Matched: insights-client ==================================\ninsights-client.noarch : Uploads Insights information to Red Hat on a periodic basis\n\n$ find /media -name \"*comps*.xml\" -exec grep -H \"insights-client\" '{}' \\;\n/media/AppStream/repodata/a6742e1300e1c786af91656b152d3b98bb7aff598e650509381417970e1f1b7e-comps-AppStream.x86_64.xml:      &lt;packagereq type=\"default\"&gt;insights-client&lt;/packagereq&gt;\n/media/AppStream/repodata/a6742e1300e1c786af91656b152d3b98bb7aff598e650509381417970e1f1b7e-comps-AppStream.x86_64.xml:      &lt;packagereq type=\"default\"&gt;insights-client&lt;/packagereq&gt;\n\n$ dnf --refresh --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream groupinfo base | grep -E \":|insights\"\nBaseOS                                          3.8 MB/s | 3.9 kB     00:00\nAppStream                                       4.2 MB/s | 4.3 kB     00:00\nGroup: Base\n Description: The standard installation of Rocky Linux.\n Mandatory Packages:\n Default Packages:\n   insights-client\n Optional Packages:\n\n$ sudo umount /media\n</code></pre> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Packages_No_RHSM/","title":"QA:Testcase Packages No RHSM","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#repositories-must-match-upstream release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Packages_No_RHSM/#description","title":"Description","text":"<p>This test will verify that packages that are availble from upstream do not have hard requirements on <code>subscription-manager</code> (RHSM).</p>"},{"location":"team/testing/QA/Testcase_Packages_No_RHSM/#setup","title":"Setup","text":"<ol> <li>Obtain access to an environment with the <code>dnf</code> command.</li> <li>Download the ISO to be tested to that machine.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_No_RHSM/#how-to-test","title":"How to test","text":"<ol> <li>Mount the ISO to be tested locally.</li> <li>Obtain a list of packages that have <code>Requires:</code> for <code>subscription-manager</code><ul> <li>Example:<code>package_list=($(dnf --refresh repoquery --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream --whatrequires subscription-manager 2&gt;/dev/null| grep el8))</code></li> </ul> </li> <li>Download the packages with explicity <code>Requires:</code> for <code>subscription-manager</code><ul> <li>Example:<code>dnf --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream download \"${package_list[@]}\"</code></li> </ul> </li> <li>Obtain the <code>SOURCEPKG</code> definition for the above packages<ul> <li>Example:<code>rpm -q --queryformat=\"%{NAME}|%{SOURCERPM}\\n\" subscription-manager*.rpm | column -s\\| -t</code></li> </ul> </li> <li>Unmount the ISO.</li> </ol>"},{"location":"team/testing/QA/Testcase_Packages_No_RHSM/#expected-results","title":"Expected Results","text":"<ol> <li>No packages have an explicit requirement for <code>subscription-manager</code>.</li> </ol> Sample Output SuccessFailure <pre><code>$ sudo mount -o loop Rocky-8.5-aarch64-minimal.iso /media\nmount: /media: WARNING: device write-protected, mounted read-only.\n\n$ package_list=($(dnf --refresh repoquery --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream --whatrequires subscription-manager 2&gt;/dev/null| grep el8))\n\n$ dnf --repofrompath BaseOS,/media/BaseOS --repo BaseOS --repofrompath AppStream,/media/AppStream --repo AppStream download \"${package_list[@]}\"\nAdded BaseOS repo from /media/BaseOS\nAdded AppStream repo from /media/AppStream\nLast metadata expiration check: 0:00:25 ago on Sun 24 Apr 2022 10:57:13 PM UTC.\n\n$ rpm -q --queryformat=\"%{NAME}|%{SOURCERPM}\\n\" subscription-manager*.rpm | column -s\\| -t\nsubscription-manager-cockpit        subscription-manager-1.28.21-3.el8.src.rpm\nsubscription-manager-migration      subscription-manager-1.28.21-3.el8.src.rpm\nsubscription-manager-plugin-ostree  subscription-manager-1.28.21-3.el8.src.rpm\n\n$ sudo umount /media\n</code></pre> <p>TBD</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Application_Functionality/","title":"QA:Testcase Application Functionality","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#default-application-functionality-desktop-only release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p> <p>REFERENCED RELEASE CRITERIA IS OVERLY GENERAL AND UNTESTABLE</p> <p>The associated release criteria, Release_Criteria#default-application-functionality-desktop-only, for this test case is overly general and must be modified to specific enough to be testable.</p>"},{"location":"team/testing/QA/Testcase_Post_Application_Functionality/#description","title":"Description","text":"<p>This testcase handles all applications, considered as core applications of the desktop environment GNOME or user facing commandline applications.</p> <p>The following tasks apply in general to all of the following applications:</p> <ul> <li>Firefox</li> <li>Files (Nautilus)</li> <li>GNOME Software</li> <li>(Image Viewer)</li> <li>(Document Viewer)</li> <li>Gedit (Text Editor)</li> <li>Archive Manager</li> <li>GNOME Terminal (Terminal Emulator)</li> <li>Problem Reporter</li> <li>Help Viewer</li> <li>System Settings</li> <li>vim (Console Text Editor)</li> </ul>"},{"location":"team/testing/QA/Testcase_Post_Application_Functionality/#setup","title":"Setup","text":"<p>Obtain access to a suitable system with either a Workstation or a Graphical Server installation.</p>"},{"location":"team/testing/QA/Testcase_Post_Application_Functionality/#how-to-test","title":"How to test","text":"<ol> <li>Check that the application starts without any errors</li> <li>Further check that the context menus for the correct function</li> <li>Open files to test the functionality of the individual applications</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Application_Functionality/#expected-results","title":"Expected Results","text":"<p>Make sure that the individual applications behave as they should.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Artwork_and_Assets/","title":"QA:Testcase Artwork and Assets","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#artwork-and-assets-server-and-desktop release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_Artwork_and_Assets/#description","title":"Description","text":"<p>There are several brand artworks and assets throughout the whole OS, this testcase will take care of checking, that these are actually in place, and don't produce any UI errors. This is exclusively for installations with the default desktop environment GDM and GNOME.</p>"},{"location":"team/testing/QA/Testcase_Post_Artwork_and_Assets/#setup","title":"Setup","text":"<ol> <li>Acquire access to either a baremetal machine or a VM host, to install a new machine</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Artwork_and_Assets/#how-to-test","title":"How to test","text":"<ol> <li>While booting the image check, that the correct logo is visible in the loading screen before Anaconda comes up</li> <li>Look at the Anaconda images in the rocky-logos repo and check if all assets are correctly applied in Anaconda (they will generally be visible right away while going through the install process)</li> <li>Install the system with either the Workstation install set or Graphical Server</li> <li>While the OS does its first boot, check that the correct logo is visible in the loading screen before the boot login screen shows up</li> <li>Check the logo and background of the boot login screen</li> <li>After the login check the desktop background and further all available options in the settings menu for the desktop background</li> <li>Lock the screen and check the background visible in the flyover</li> <li>At last check the logo and background of the login screen</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Artwork_and_Assets/#expected-results","title":"Expected Results","text":"<p>The tests during the process could be successfully finished.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_GNOME_UI_Functionality/","title":"QA:Testcase GNOME UI Functionality","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>REFERENCED RELEASE CRITERIA IS OVERLY GENERAL AND UNTESTABLE</p> <p>The associated release criteria, Release_Criteria#default-panel-functionality-desktop-only, for this test case is overly general and must be modified to specific enough to be testable.</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#default-panel-functionality-desktop-only release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_GNOME_UI_Functionality/#description","title":"Description","text":"<p>This test collection takes care of the correct functionality of the GNOME UI.</p>"},{"location":"team/testing/QA/Testcase_Post_GNOME_UI_Functionality/#setup","title":"Setup","text":"<p>Obtain access to a suitable system with either a Workstation or a Graphical Server installation.</p>"},{"location":"team/testing/QA/Testcase_Post_GNOME_UI_Functionality/#how-to-test","title":"How to test","text":"<ol> <li>Login to the Rocky Machine via the UI</li> <li>Navigate through the GNOME UI</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_GNOME_UI_Functionality/#expected-results","title":"Expected Results","text":"<ol> <li>After the login you should have landed on the desktop with the background and the top bar of GNOME visible</li> <li>Clicking the the Activities button in the upper right should bring up the overview</li> <li>Further there should be the favourite applications ribbon on the left</li> <li>And after clicking the 9-dot-icon all applications should appear</li> <li>Back on the desktop check the function of the system and clock panel on the upper right and middle</li> </ol> <p>It is also a good measure to do some more basic clicking through the GNOME UI, like opening applications, interacting with the application headerbar, moving applications to different desktops or changing settings in the System settings.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/","title":"QA:Testcase Identity Management","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#packages-and-module-installation release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/#description","title":"Description","text":"<p>Setting up a IdM system (FreeIPA) and using it's functionality leverages not also a lot of the packages in the official repos, it also tests quite a lot of used functions a corporate environment. This installatation will host it's own dns server for more generic testing without relying on the individual infrastructure of the environment.</p>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/#requirements","title":"Requirements","text":"<ul> <li>A freshly provisioned system (no other functions are allowed on this system except running the IdM services)</li> <li>IPv4 network with unmanaged domain name (installer will check for dns servers) and unmanaged reverse dns network (in my case here 10.30.30.0/24 and ipa1.network)</li> <li>In the case of this writeup the external dns server has the domain <code>example.com</code>, this has to have a entry for <code>r8-ipa1-dev.example.com</code> (this could also be replaced by a entry in the <code>/etc/hosts</code> file if no external dns server should be involved)</li> </ul>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/#setup","title":"Setup","text":"<ol> <li><code>dnf module enable idm:DL1</code></li> <li><code>dnf module install idm:DL1/dns</code></li> <li> <p><code>ipa-server-install</code></p> <ul> <li>Do you want to configure integrated DNS (BIND)? [no]: yes</li> <li>Server host name [r8-ipa1-dev.example.com]: r8-ipa1-dev.example.com</li> <li>Please confirm the domain name [ipa1.network]: ipa1.network</li> <li>Please provide a realm name [IPA1.NETWORK]: IPA1.NETWORK</li> <li>Directory Manager password: <code>&lt;password&gt;</code>   Password (confirm): <code>&lt;password&gt;</code></li> <li>IPA admin password: <code>&lt;other-password&gt;</code>   Password (confirm): <code>&lt;other-password&gt;</code></li> <li>Please provide the IP address to be used for this host name: 10.30.30.1</li> <li>Enter an additional IP address, or press Enter to skip: <code>leave empty</code></li> <li>Do you want to configure DNS forwarders? [yes]: yes</li> <li>Do you want to configure these servers as DNS forwarders? [yes]: yes</li> <li>Enter an IP address for a DNS forwarder, or press Enter to skip: <code>leave empty</code></li> <li>Do you want to search for missing reverse zones? [yes]: yes</li> <li>NetBIOS domain name [IPA1]: IPA1</li> <li>Do you want to configure chrony with NTP server or pool address? [no]: yes</li> <li>Enter NTP source server addresses separated by comma, or press Enter to skip: <code>leave empty</code></li> <li>Enter a NTP source pool address, or press Enter to skip: pool.ntp.org</li> <li>Continue to configure the system with these values? [no]: yes</li> </ul> </li> <li> <p><code>firewall-cmd --add-service={freeipa-4,dns} --permanent</code></p> </li> <li><code>firewall-cmd --add-service={freeipa-4,dns}</code></li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/#how-to-test","title":"How to test","text":"<ol> <li>Make sure Kerberos works, by running <code>kinit admin</code> and <code>klist</code></li> <li>Make sure the webfrontend is reachable and login works</li> <li>Furthermore you can also attach another system (DNS + connecting via SSSD)</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Identity_Management/#expected-results","title":"Expected Results","text":"<p>After installation all services should be available and work correctly.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/","title":"QA:Testcase Keyboard Layout","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#keyboard-layout release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#description","title":"Description","text":"<p>As there are a lot of different keyboard layouts available, it is necessary to test if the keyboard functionality works without any issues throughout the system.</p>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#setup","title":"Setup","text":"<ul> <li>Obtain access to a few different system configurations, especially with and without UI, and not to forget with disk encryption.</li> <li>Acquire access to either a baremetal machine or a VM host, to install a new machine<ul> <li>Prepare appropriate media for the selected ISO to be tested.</li> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> </ul>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#how-to-test","title":"How to test","text":""},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#installer","title":"Installer","text":"<ol> <li>Bootup the installer</li> <li>Choose a language</li> <li>Make sure that the keyboard layout got chosen correctly corresponding to the language setting</li> <li>Change the keyboard layout if needed to test</li> <li>Enter text all over Anaconda to make sure the keyboard layout works correctly with the chosen keyboard layout</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#disk-encryption","title":"Disk Encryption","text":"<ol> <li>Setup a system with disk encryption</li> <li>Check that the password for the disk encryption works on bootup with graphical UI</li> <li>Check that the password for the disk encryption works on bootup with text mode</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#text-mode","title":"Text mode","text":"<p>Check that the chosen keyboard layout works correctly on text mode.</p>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#gnome-and-application","title":"GNOME and Application","text":"<ol> <li>Check the login, that the keyboard layout works correctly on the graphical UI login screen</li> <li>Also check that the GNOME UI works correctly with the chosen keyboard layout</li> <li>And finally check some applications, that the keyboard works as expected</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Keyboard_Layout/#expected-results","title":"Expected Results","text":"<p>The tests during the process could be successfully finished.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Module_Streams/","title":"QA:Testcase Module Streams","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#packages-and-module-installation release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_Module_Streams/#description","title":"Description","text":"<p>This test case takes care of testing the module streams, that they are all installable, all available and working as expected.</p>"},{"location":"team/testing/QA/Testcase_Post_Module_Streams/#setup","title":"Setup","text":"<p>For this tests you will need to install every module stream on its own, so it's the best to setup a new system which gets snapshoted after the initial setup. After that it can be rolled back for every module install.</p> <p>It's enough to setup a system with the Minimal Install group.</p>"},{"location":"team/testing/QA/Testcase_Post_Module_Streams/#how-to-test","title":"How to test","text":"<ol> <li>Login to the machine</li> <li>Get a list of all module streams and compare it to the stream list from RHEL and to the source in Git source repo</li> <li>The easiest way to test all streams is to install the package groups in the individual streams, i.e. for postgresql:</li> </ol> <pre><code>dnf module install postgresql\ndnf module install postgresql:13\ndnf module install postgresql:13/client\n</code></pre> <p>Repeat step 3 as often as module streams and package groups are available.</p> <p>This could be automated with i.e. Ansible to do all the <code>install -&gt; rollback -&gt; install -&gt; rollback -&gt; ...</code> and emiting the output via Ansible.</p>"},{"location":"team/testing/QA/Testcase_Post_Module_Streams/#expected-results","title":"Expected Results","text":"<p>All module streams should be available and there shouldn't be any errors while installing any of the package groups of the individual streams. (some of the installs will show warnings though because they are incompatible with other streams)</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Multimonitor_Setup/","title":"QA:Testcase Multimonitor Setup","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#dual-monitor-setup-desktop-only release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_Multimonitor_Setup/#description","title":"Description","text":"<p>This test covers the check if GNOME behaves as it should in multi-monitor setups.</p>"},{"location":"team/testing/QA/Testcase_Post_Multimonitor_Setup/#setup","title":"Setup","text":"<p>You will need either a machine which can be reinstalled with multiple screens, or a virtualization software which is capable of providing multiple screens (like VMware Workstation (Pro or Player) or VMware Fusion, but there is also a hack for VMware ESXi)</p>"},{"location":"team/testing/QA/Testcase_Post_Multimonitor_Setup/#how-to-test","title":"How to test","text":"<ol> <li>Run installer with multiple screens connected and install with either the Workstation or Graphical Server group</li> <li>Login to the machine after the finished install</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Multimonitor_Setup/#expected-results","title":"Expected Results","text":"<p>There shouldn't be any graphical glitches, or scaling issues through the install and the usage.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_Package_installs/","title":"QA:Testcase Basic Package installs","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#packages-and-module-installation release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p> <p>REFERENCED RELEASE CRITERIA IS OVERLY GENERAL AND UNTESTABLE</p> <p>The associated release criteria, Release_Criteria#packages-and-module-installation, for this test case is overly general and must be modified to specific enough to be testable.</p>"},{"location":"team/testing/QA/Testcase_Post_Package_installs/#description","title":"Description","text":"<p>Installing several packages should work without any issues.</p> <p>Please also test these usecases (it's basically the fun of learning to install software, it's even good if it's done differently each other time):</p> <ul> <li>httpd</li> <li>httpd with php and ssl</li> <li>nginx</li> <li>nginx with php and ssl</li> <li>mysql-server</li> <li>mysql-server with secure setup</li> <li>mariadb-server</li> <li>postgresql-server</li> <li>postgresql-server with secure setup</li> <li>compiling packages with:<ul> <li>cmake</li> <li>g++</li> </ul> </li> <li>ipa-server</li> <li>ipa-server with dns</li> </ul>"},{"location":"team/testing/QA/Testcase_Post_Package_installs/#setup","title":"Setup","text":"<p>Obtain access to a suitable system where any of the tested packages can be installed without any issues.</p>"},{"location":"team/testing/QA/Testcase_Post_Package_installs/#how-to-test","title":"How to test","text":"<ol> <li>Install a list of packages or usecases</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_Package_installs/#expected-results","title":"Expected Results","text":"<p>Installs work without any issues.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Desktop/","title":"QA:Testcase SELinux Errors on Desktop clients","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#selinux-and-crash-notifications-desktop-only release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Desktop/#description","title":"Description","text":"<p>Basically running a Workstation or Graphical Server install for a longer amount of time, while using it and then checking if there were any SELinux audit messages.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Desktop/#setup","title":"Setup","text":"<p>Obtain access to a suitable system with either a Workstation or a Graphical Server installation.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Desktop/#how-to-test","title":"How to test","text":"<ol> <li>Setup new machine or get access to a installed machine</li> <li>Click through the system and various applications, to mimic user behavior</li> <li>Leave the system running for a few more minutes, if possible hours</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Desktop/#expected-results","title":"Expected Results","text":"<ol> <li>Open the SETroubleshoot Application and invoke the error summarization. </li> <li>There must not be shown any errors / denials</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Server/","title":"QA:Testcase SELinux Errors on Server installations","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#selinux-errors-server release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Server/#description","title":"Description","text":"<p>Basically running a text mode installation for a longer amount of time, while using it and then checking if there were any SELinux audit messages.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Server/#setup","title":"Setup","text":"<p>Obtain access to a suitable system with one of the text mode installation base groups.</p> <p>It might also be beneficial to run this test with other than the core installation, but that is a long term test and a bit out of scope of this test.</p>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Server/#how-to-test","title":"How to test","text":"<ol> <li>Setup new machine or get access to a installed machine</li> <li>As this test is mostly about the stability of the core system it is mostly only needed to let the system run for a few minutes, if possible hours</li> </ol>"},{"location":"team/testing/QA/Testcase_Post_SELinux_Errors_Server/#expected-results","title":"Expected Results","text":"<ol> <li>Install <code>sealert</code> with <code>dnf install setroubleshoot-server</code></li> <li>Run <code>sealert -a /var/log/audit/audit.log</code></li> <li>There must not be shown any errors / denials</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Post_System_Services/","title":"QA:Testcase System Services","text":"<p>Release relevance</p> <p>This Testcase applies the following versions of Rocky Linux: 8, 9</p> <p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#system-services release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Post_System_Services/#description","title":"Description","text":"<p>This test covers the check, that all basic system service which are getting installed with the base groups are starting / running normally.</p>"},{"location":"team/testing/QA/Testcase_Post_System_Services/#setup","title":"Setup","text":"<ol> <li>Acquire access to either a baremetal machine or a VM host, to install a new machine</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> </ol>"},{"location":"team/testing/QA/Testcase_Post_System_Services/#how-to-test","title":"How to test","text":"<p>Startup the system and check that all services are running without any failure:</p> <pre><code>systemctl status\n</code></pre>"},{"location":"team/testing/QA/Testcase_Post_System_Services/#expected-results","title":"Expected Results","text":"<p>The tests during the process could be successfully finished.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Repo_Compare/","title":"QA:Testcase Media Repo Compare","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#repositories-must-match-upstream release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Repo_Compare/#description","title":"Description","text":"<p>This test case will verify that repositories and the packages within them match upstream as closely as possible.</p>"},{"location":"team/testing/QA/Testcase_Repo_Compare/#setup","title":"Setup","text":"<ol> <li>Verify access to the Rocky Linux repocompare tooling.</li> </ol>"},{"location":"team/testing/QA/Testcase_Repo_Compare/#how-to-test","title":"How to test","text":"<ol> <li>Access Rocky Linux repocompare website.</li> <li>Verify similarity of Rocky Linux repositories with upstream content.</li> </ol>"},{"location":"team/testing/QA/Testcase_Repo_Compare/#expected-results","title":"Expected Results","text":"<ol> <li>Rocky Linux repositories should match, as closely as possible, upstream repositories.</li> <li>The content of Rocky Linux packages should match, as closely as possible, upstream repositories.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/","title":"QA:Testcase Storage Volume Resize","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Storage Volume Resize release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#description","title":"Description","text":"<p>This test case verifies that the installer will successfully resize or delete and overwrite existing partitions on storage volumes.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#how-to-test","title":"How to test","text":""},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#resize","title":"Resize","text":"<ol> <li>From the Installation Destination spoke, in the Storage Configuration section, select the Custom radio button, then click Done.</li> <li>Expand the list of available partitions by clicking the black arrow to the left of the release version and architecture.</li> <li>Select the partition you wish to resize. Be sure to uncheck the Reformat checkbox if you wish to resize without reformatting the partition.</li> <li>Click the Update Settings button to save your settings.</li> <li>Click the + button to create a new partition off of the existing partition. Provide a mount point and desired capacity, then click Add Mount Point.</li> <li>Repeat as necessary for additional partitions, or click Done to return to the Anaconda main hub.</li> </ol>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#delete","title":"Delete","text":"<ol> <li>From the Installation Destination spoke, in the Storage Configuration section, select the Automatic radio button, then click Done.</li> <li>You should be presented with an \"Installation Options\" dialog, indicating the amount of disk space that is available for use and available to reclaim.</li> <li>Click the Reclaim Space button.</li> <li>Select a partition, then click the Delete button to delete the partition and reclaim the space.</li> <li>Alternatively, click the Delete All button to delete all existing partitions.</li> <li>When you have finished, click the Reclaim Space button to reclaim available free space.</li> </ol>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#expected-results","title":"Expected Results","text":"<ol> <li>The installation should complete and boot successfully.</li> <li>Resized partitions should correctly reflect the desired size. This may be verified using the <code>lsblk</code> command.</li> <li>Deleted partitions should no longer exist.</li> </ol>"},{"location":"team/testing/QA/Testcase_Storage_Volume_Resize/#testing-in-openqa","title":"Testing in openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_delete_partial</code></li> <li><code>install_delete_pata</code></li> <li><code>install_resize_lvm</code></li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Template/","title":"QA:Testcase Template","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#TBD release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Template/#description","title":"Description","text":"<p>Add a short description here for this Testcase.</p>"},{"location":"team/testing/QA/Testcase_Template/#setup","title":"Setup","text":"<ol> <li>Add steps for setup for this Testcase.</li> </ol>"},{"location":"team/testing/QA/Testcase_Template/#how-to-test","title":"How to test","text":"<ol> <li>Do this first...</li> <li>Then do this...</li> </ol>"},{"location":"team/testing/QA/Testcase_Template/#expected-results","title":"Expected Results","text":"<ol> <li>This is what you should see/verify.</li> <li>You should also see/verify this.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_Update_Image/","title":"QA:Testcase Update Image","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#Update Image release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_Update_Image/#description","title":"Description","text":"<p>This test case verifies that an update image can be loaded into Anaconda and applied during the install process.</p> <p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_Update_Image/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> <li>Hit the Tab key to edit the boot command</li> </ol>"},{"location":"team/testing/QA/Testcase_Update_Image/#how-to-test","title":"How to test","text":"<ol> <li>Supply <code>inst.updates=https://fedorapeople.org/groups/qa/updates/updates-openqa.img</code> to the GRUB command line</li> <li>Boot into the installer as usual.</li> <li>In Anaconda, open the Installation Destination spoke.</li> </ol>"},{"location":"team/testing/QA/Testcase_Update_Image/#expected-results","title":"Expected Results","text":"<ol> <li>Within the Installation Destination spoke, the selected install disk should have a pink background</li> </ol> FAILPASS <ol> <li>If you cannot verify visually, check for the existence of <code>/tmp/updates</code>, which should contain updated source files if the update was successfully applied. Note that if the update image doesn't actually contain any source files, this directory will not be created.</li> </ol>"},{"location":"team/testing/QA/Testcase_Update_Image/#testing-with-openqa","title":"Testing with openQA","text":"<p>The following openQA test suites satisfy this release criteria:</p> <ul> <li><code>install_scsi_updates_img</code></li> </ul>"},{"location":"team/testing/QA/Testcase_Update_Image/#additional-references","title":"Additional References","text":"<p>Red Hat Debug Boot Options Fedora QA:Testcase Anaconda updates.img via URL Fedora QA:Testcase Anaconda updates.img via local media</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/QA/Testcase_VNC_Graphics_Mode/","title":"QA:Testcase VNC Graphics Mode","text":"<p>Associated release criterion</p> <p>This test case is associated with the Release_Criteria#vnc-graphics-mode-behaviors release criterion. If you are doing release validation testing, a failure of this test case may be a breach of that release criterion.</p>"},{"location":"team/testing/QA/Testcase_VNC_Graphics_Mode/#description","title":"Description","text":"<p>This test case will verify that release-blocking installers function as intended using the VNC installation method on supported systems and classes of hardware.</p> Supported Systems and Hardware Classes x86_64aarch64ppc64s309x <p>TBD</p> <p>TBD</p> <p>TBD</p> <p>TBD</p>"},{"location":"team/testing/QA/Testcase_VNC_Graphics_Mode/#setup","title":"Setup","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Obtain access to remote system with a VNC client installed to use for VNC connection.</li> </ol> <p>Suggested VNC Clients</p> <p>Both <code>tigervnc</code> and <code>vinagre</code> are VNC clients provided in Rocky Linux but any VNC client may be used.</p>"},{"location":"team/testing/QA/Testcase_VNC_Graphics_Mode/#how-to-test","title":"How to test","text":"<ol> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Custom Boot Methods Boot ISO</li> </ul> </li> <li>Interrupt the kernel boot and specify the appropriate VNC installation option on the boot command line.</li> <li>Proceed with installation on the test system.Depending on installer choices this MAY destroy all the data on the test system.</li> <li>Depending on the choice or <code>direct</code> or <code>connect</code> mode connect inbound to the system under test or wait for it to connect to your listening VNC client.</li> </ol> <p>DATA LOSS</p> <p>If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"team/testing/QA/Testcase_VNC_Graphics_Mode/#expected-results","title":"Expected Results","text":"<ol> <li>Connection to (with direct mode) or from (in connect mode) to the Anaconda installer using VNC is possible.</li> <li>Anaconda installer presents a usable graphical intallation environment.</li> <li>System under test can be installed normally.</li> <li>After reboot system boots into graphical environment.</li> <li>After login user is able to operate the graphical environment.</li> </ol> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/dev_guides/commit_signing/","title":"Creating your primary keypair","text":"<ol> <li> <p>Initiate the keypair generation wizard</p> <pre><code>gpg --full-generate-key --expert\n</code></pre> </li> <li> <p>Select option <code>(9) ECC and ECC</code> for the key type</p> </li> <li>Select option <code>(1) Curve 25519</code> for the elliptic curve</li> <li>Set a validity period of your choice, ideally less than 1 year</li> <li>Specify real name and email address to associate with this keypair. The email address must match your verified Github email address or be set to <code>your-github-username@users.noreply.github.com</code>.</li> <li>Type a passphrase (twice)</li> </ol>"},{"location":"team/testing/dev_guides/commit_signing/#create-a-signing-keypair","title":"Create a signing keypair","text":"<ol> <li> <p>Add a signing subkey</p> <pre><code>gpg --expert --edit-key my@email.addr\ngpg&gt; addkey\n</code></pre> </li> <li> <p>Select option <code>(10) ECC (sign only)</code> for the key type</p> </li> <li>Select option <code>(1) Curve 25519</code> for the elliptic curve</li> <li>Set a validity period of your choice, ideally less than 1 year</li> <li>Accept the prompts and type a passphrase (twice)</li> <li>Save and exit<pre><code>gpg&gt; save\n</code></pre> </li> </ol>"},{"location":"team/testing/dev_guides/commit_signing/#create-revocation-certificate","title":"Create revocation certificate","text":"<pre><code>gpg --output my_email_addr.gpg-revocation-certificate --gen-revoke my@email.addr\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#back-up-your-keypair","title":"Back up your keypair","text":"<p>Export the primary keypair (put these somewhere very safe along with revocation certificate)</p> <pre><code>gpg --export-secret-keys --armor my@email.addr &gt; my_email_addr.private.gpg-key\ngpg --export --armor my@email.addr &gt; my_email_addr.public.gpg-key\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#remove-the-primary-keypair-from-your-keyring","title":"Remove the primary keypair from your keyring","text":"<ol> <li> <p>Export all subkeys from the new keypair to a file</p> <pre><code>gpg --export-secret-subkeys my@email.addr &gt; $HOME/.gnupg/subkeys\n</code></pre> </li> <li> <p>Delete primary key from keyring - BE SURE TO BACK UP YOUR PRIMARY KEYPAIR FIRST!</p> <pre><code>gpg --delete-secret-key my@email.addr\n</code></pre> </li> <li> <p>Re-import the previously exported keys</p> <pre><code>gpg --import $HOME/.gnupg/subkeys\n</code></pre> </li> <li> <p>Look for <code>sec#</code> instead of <code>sec</code> in the output - pound sign means signing subkey is not in the keypair located in the keyring</p> <pre><code>gpg --list-secret-keys $HOME/.gnupg/secring.gpg\n</code></pre> </li> </ol>"},{"location":"team/testing/dev_guides/commit_signing/#revoking-a-signing-keypair","title":"Revoking a signing keypair","text":"<p>Find the primary keypair and import it (preferably into an ephemeral system like a liveUSB)</p> <pre><code>gpg --import /path/to/my_email_addr.public.gpg-key /path/to/my_email_addr.private.gpg-key\ngpg --edit-key my@email.addr\ngpg&gt; revkey\n[ passphrase twice ]\ngpg&gt; save\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#renew-an-expired-or-expiring-keypair","title":"Renew an expired or expiring keypair","text":"<pre><code>gpg --edit-key my@email.addr\n[select a key]\ngpg&gt; expire\n[specify an expiration]\ngpg&gt; save\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#create-a-single-signed-git-commit","title":"Create a single signed git commit","text":"<pre><code>git commit -S -m \"my awesome signed commit\"\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#configure-git-to-always-sign-commits-with-a-specified-key","title":"Configure git to always sign commits with a specified key","text":"<pre><code>$ gpg --list-secret-keys --keyid-format=long # grab the fingerprint from the 'sec' line\ngit config [--global] commit.gpgsign true\ngit config [--global] user.signingkey DEADB33FBAD1D3A\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#configure-vscode-to-sign-commits","title":"Configure VSCode to sign commits","text":"<pre><code># User or workspace setting\n\"git.enableCommitSigning\": true\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#upload-your-public-key-to-a-keyserver","title":"Upload your public key to a keyserver","text":"<pre><code>gpg --keyserver pgp.mit.edu --send-keys 0xDEADB33FBAD1D3A\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#verify-your-key-has-been-published","title":"Verify your key has been published","text":"<pre><code>gpg --keyserver pgp.mit.edu --search-key my@email.addr\n</code></pre>"},{"location":"team/testing/dev_guides/commit_signing/#references","title":"References","text":"<p>OpenPGP Best Practices Github: Signing Commits Braincoke's Log: Create a GPG Key Creating the Perfect GPG Keypair Digital Neanderthal: Generate GPG Keys With Curve Ed25519</p>"},{"location":"team/testing/dev_guides/openqa_access/","title":"openQA - Access","text":""},{"location":"team/testing/dev_guides/openqa_access/#system-requirements","title":"System Requirements","text":"<p>To complete any of the examples below you will need access to a system providing the openQA client. Typically that will be a Fedora based system/container with the <code>openqa-client</code> package and it's (~239) dependencies installed.</p>"},{"location":"team/testing/dev_guides/openqa_access/#access-requirement","title":"Access Requirement","text":""},{"location":"team/testing/dev_guides/openqa_access/#api-get-access","title":"API <code>GET</code> access","text":"<p>The Rocky Linux openQA system allows unrestricted public access via it's web interface or using the <code>openqa-client</code> for <code>GET</code> operations against the API.</p>"},{"location":"team/testing/dev_guides/openqa_access/#api-post-access","title":"API <code>POST</code> access","text":"<p>In order to use the openQA client to interact with the Rocky Linux openQA system for <code>POST</code> operations the following are required:</p> <ul> <li>an account in good standing in the Rocky Linux Account Services system,</li> <li>authorization for API <code>POST</code> access from the Rocky Linux Testing Team, and</li> <li>an openQA API key generated on the Rocky Linux openQA system.</li> </ul>"},{"location":"team/testing/dev_guides/openqa_access/#configuring-your-openqa-client","title":"Configuring your openqa client","text":"<p>Per the openqa client command help you can configure your client to use your API key in a number of ways.</p> <p>The following example shows how to configure your client by the most common method used. It's possible to configure multiple openqa client API keys in this way.</p> <pre><code>$ mkdir -p ~/.config/openqa\n\n$ vim ~/.config/openqa/client.conf\n\n$ cat ~/.config/openqa/client.conf\n[localhost]\nkey = your_localhost_api_key\nsecret = your_localhost_api_secret\n[openqa.rockylinux.org]\nkey = your_api_key\nsecret = your_api_secret\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_access/#testing-your-openqa-client-installation","title":"Testing your openqa client installation","text":"<pre><code>$ openqa-cli api --host http://openqa.rockylinux.org --pretty jobs/1\n{\n\"job\" : {\n\"assets\" : {\n\"iso\" : [\n\"Rocky-8.6-x86_64-boot.iso\"\n]\n},\n      \"assigned_worker_id\" : 2,\n      \"blocked_by_id\" : null,\n      \"children\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"clone_id\" : null,\n      \"group\" : \"Rocky\",\n      \"group_id\" : 2,\n      \"has_parents\" : 0,\n      \"id\" : 1,\n      \"name\" : \"rocky-8.6-boot-iso-x86_64-Build-8.6-boot-iso--20221110.223812.0-install_default@64bit\",\n      \"parents\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"parents_ok\" : 1,\n      \"priority\" : 10,\n      \"result\" : \"failed\",\n      \"settings\" : {\n\"ARCH\" : \"x86_64\",\n         \"ARCH_BASE_MACHINE\" : \"64bit\",\n         \"BACKEND\" : \"qemu\",\n         \"BUILD\" : \"-8.6-boot-iso--20221110.223812.0\",\n         \"DESKTOP\" : \"gnome\",\n         \"DISTRI\" : \"rocky\",\n         \"FLAVOR\" : \"boot-iso\",\n         \"GRUB\" : \"ip=dhcp\",\n         \"HDDSIZEGB\" : \"15\",\n         \"ISO\" : \"Rocky-8.6-x86_64-boot.iso\",\n         \"MACHINE\" : \"64bit\",\n         \"NAME\" : \"00000001-rocky-8.6-boot-iso-x86_64-Build-8.6-boot-iso--20221110.223812.0-install_default@64bit\",\n         \"PACKAGE_SET\" : \"default\",\n         \"PART_TABLE_TYPE\" : \"mbr\",\n         \"POSTINSTALL\" : \"_collect_data\",\n         \"QEMUCPU\" : \"Nehalem\",\n         \"QEMUCPUS\" : \"2\",\n         \"QEMURAM\" : \"3072\",\n         \"QEMUVGA\" : \"virtio\",\n         \"QEMU_VIRTIO_RNG\" : \"1\",\n         \"TEST\" : \"install_default\",\n         \"TEST_SUITE_NAME\" : \"install_default\",\n         \"TEST_TARGET\" : \"ISO\",\n         \"VERSION\" : \"8.6\",\n         \"WORKER_CLASS\" : \"qemu_x86_64\"\n},\n      \"state\" : \"done\",\n      \"t_finished\" : \"2022-11-10T22:44:19\",\n      \"t_started\" : \"2022-11-10T22:38:12\",\n      \"test\" : \"install_default\"\n}\n}\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_access/#references","title":"References","text":"<p>openQA Documentation</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/","title":"openqa-cli POST Examples","text":"<p>This page will provide a brief overview of some basic <code>openqa-cli</code> <code>POST</code> examples.</p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#system-access-requirements","title":"System / Access Requirements","text":"<p>To complete any of the examples please complete the API <code>POST</code> Access steps outlined in the openQA - Access document.</p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#basic-post","title":"Basic POST","text":"<p>A basic <code>POST</code> can be used for any of the default test suites for the various Rocky Linux media that are made available. The following examples show some of these standard <code>POST</code>s that are commonly used by our team and will be used to demonstrate how some minor variations.</p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#flavorboot-iso","title":"FLAVOR=boot-iso","text":"<p>This first <code>POST</code> is the most basic, simply providing the minimal set of variables required to trigger the standard test suite for the Rocky Linux 9.1 boot ISO on openqa workers for the <code>x86_64</code> architecture. All tests of the test suite are predetermined and configure on the openQA server. Since the boot ISO doesn't contain any packages this test suite is effectively a network install from standard Rocky Linux repository servers and/or mirrors.</p> <pre><code>$ openqa-cli api -X POST isos ISO=Rocky-9.1-x86_64-boot.iso ARCH=x86_64 \\\nDISTRI=rocky FLAVOR=boot-iso VERSION=9.1 CURRREL=9 BUILD=20230409-Rocky-9.1-x86_64.0\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#flavorminimal-iso","title":"FLAVOR=minimal-iso","text":"<p>This <code>POST</code> demonstrates how a different media type, in this case the minimal ISO, for an alternate Rocky Linux version, in this case Rocky Linux 8.7, can be triggered. As can be seen by this and the previous <code>POST</code> the <code>BUILD</code> variable will typically be designate the date, version and architecture of the test suite. Since the minimal ISO contains all packages required to conduct a minimal install of Rocky Linux that is the behavior of this test suite.</p> <pre><code>$ openqa-cli api -X POST isos ISO=Rocky-8.7-x86_64-minimal.iso ARCH=x86_64 \\\nDISTRI=rocky FLAVOR=minimal-iso VERSION=8.7 CURRREL=8 BUILD=20230409-Rocky-8.7-x86_64.0\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#flavorpackage-set","title":"FLAVOR=package-set","text":"<p>This <code>POST</code> demonstrates specification of the final normal media type, the dvd ISO, along with what is called a <code>FLAVOR</code>, in this case <code>package-set</code> for the <code>x86_64</code> architecture and Rocky Linux 9.1. Since the dvd ISO contains all of the packages available at release of a specific version or Rocky Linux the <code>package-set</code> test suite will test installation of all primary installation types of Rocky Linux not included in the <code>minimal-iso</code> test suite above.</p> <pre><code>$ openqa-cli api -X POST isos ISO=Rocky-9.1-20221214.1-x86_64-dvd.iso ARCH=x86_64 \\\nDISTRI=rocky FLAVOR=package-set VERSION=9.1 CURRREL=9 BUILD=20230409-Rocky-9.1-x86_64.0\n</code></pre> <p>These three test suites provide for the minimal testing of all ISOs produced for a given release of Rocky Linux. </p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#advanced-post","title":"Advanced POST","text":"<p>In addition to the Basic POSTs described above there are additional default test suites that use the dvd ISO media and include substantially more test cases. Those include:</p> <ul> <li>installing in graphical, text and serial console</li> <li>installation for standard BIOS and UEFI</li> <li>validation of the Anaconda help system</li> <li>disk layout variations including LVM, RAID, partition shrink and/or grow, iSCSI and LUKS</li> <li>PXE installation from various network sources</li> <li>installation in various languages</li> </ul> <p>Standard <code>POST</code>s for these test suites is very similar to the basic POSTs above and are shown below...</p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#flavordvd-iso","title":"FLAVOR=dvd-iso","text":"<pre><code>$ openqa-cli api -X POST isos ISO=Rocky-9.1-20221214.1-x86_64-dvd.iso ARCH=x86_64 \\\nDISTRI=rocky FLAVOR=dvd-iso VERSION=9.1 CURRREL=9 BUILD=20230409-Rocky-9.1-x86_64.0\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#flavoruniversal","title":"FLAVOR=universal","text":"<pre><code>$ openqa-cli api -X POST isos ISO=Rocky-9.1-20221214.1-x86_64-dvd.iso ARCH=x86_64 \\\nDISTRI=rocky FLAVOR=universal VERSION=9.1 CURRREL=9 BUILD=20230409-Rocky-9.1-x86_64.0\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#collection-of-test-suites-by-build","title":"Collection of test suites by BUILD","text":"<p>A feature of openQA is that for a given job group test suites which use the same <code>BUILD</code> identifier are collected into a single view in the web UI.</p> <p></p> <p>Thus, the examples show above which all use <code>BUILD=20230409-Rocky-9.1-x86_64.0</code> are all shown in a single view. Additionally, that view is accessible via a predictable URI, for example <code>https://openqa.rockylinux.org/tests/overview?build=20230409-Rocky-9.1-x86_64.0</code> as shown below...</p> <p></p>"},{"location":"team/testing/dev_guides/openqa_cli_post_examples/#references","title":"References","text":"<p>openQA Documentation</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/","title":"openqa-clone-custom-git-refspec Examples","text":"<p>This page will provide a brief overview of basic and advanced job cloning using the <code>openqa-clone-custom-git-refspec</code> command.</p> <p>At a high level <code>openqa-clone-custom-git-refspec</code> can be viewed as a mechanism to test PRs for openQA tests directly in a Rocky Linux openQA instance with making changes to the default configuration. As such, it can support testing of PRs that change test code and needles as long as changes to <code>templates.fif.json</code> are not also required. A combination of <code>openqa-clone-custom-git-refspec</code> and <code>openqa-clone-job</code> (which is actually used by <code>openqa-clone-custom-git-refspec</code> under the hood) can be used for some cases where <code>POST</code> variables are pre-defined in <code>templates.fif.json</code>.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#system-access-requirements","title":"System / Access Requirements","text":"<p>To complete any of the examples please complete the API <code>POST</code> Access steps outlined in the openQA - Access document.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#basic-openqa-clone-custom-git-refspec","title":"Basic <code>openqa-clone-custom-git-refspec</code>","text":"<p>The following example demonstrates the testing of an open Github pull request in the Rocky Linux openQA production system. The PR only changes test code and does not supply updated needles for the test.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#github-pr-information","title":"Github PR information","text":"<p>NOTE: The Github CLI tool (<code>gh</code>) is used to display PR information statically in this guide.</p> <pre><code>\u279c  os-autoinst-distri-rocky git:(develop) gh pr view 168\nSerial console install #168\nMerged \u2022 AlanMarshall wants to merge 1 commit into develop from serial_console \u2022 about 27 days ago\n+5 -2 \u2022 No checks\nReviewers: akatch (Approved), tcooper (Approved), lumarel (Requested)\nLabels: priority: medium, type: bug, test suite\n\n\n  Network is enabled by default at v9 so requires conditional code to handle multiple versions.\n  Tested for 9.1, 8.7 &amp; 8.8:\n\n    openqa-cli api -X POST isos ISO=Rocky-9.1-20221214.1-x86_64-dvd.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal\n  VERSION=9.1 BUILD=-\"$(date +%Y%m%d.%H%M%S).0\"-9.1-20221214.1-universal TEST=install_serial_console\n    openqa-cli api -X POST isos ISO=Rocky-8.7-x86_64-dvd1.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal VERSION=8.7 BUILD=-\n  \"$(date +%Y%m%d.%H%M%S).0\"-8.7-20221110-universal TEST=install_serial_console\n    openqa-cli api -X POST isos ISO=Rocky-8.8-x86_64-dvd1.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal VERSION=8.8 BUILD=-\n  \"$(date +%Y%m%d.%H%M%S).0\"-8.8-lookahead-universal TEST=install_serial_console\n\n  Result: Tests pass.\n  Also confirm that all main hub check boxes are checked and user test created prior to start of installation.\n  Fixes Issue #102\n\nView this pull request on GitHub: https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168\n</code></pre> <p>Above is the information provided in the original PR and it includes tests performed in Alan's openQA development system. We can rerun failing tests in the Rocky Linux openQA system after identifying an appropriate job ID for each Rocky Linux version we are testing. For this example the openQA WebUI was used to find appropriate test IDs to clone.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#run-openqa-clone-custom-git-refspec-in-verbose-dry-run-mode","title":"Run <code>openqa-clone-custom-git-refspec</code> in <code>--verbose --dry-run</code> mode","text":"<p>In practice it is useful to run <code>openqa-clone-custom-git-refspec</code> in <code>--verbose</code> and <code>--dry-run</code> mode to observe it's behavior even for the Basic cases...</p> <pre><code>$ openqa-clone-custom-git-refspec --verbose --dry-run \\\nhttps://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168 \\\nhttps://openqa.rockylinux.org/tests/16080 2&gt;&amp;1 | tee pr-168\n</code></pre> <p>NOTE: The full output of <code>openqa-clone-custom-git-refspece</code> will not be shown here.</p> <pre><code>+ shift\n+ true\n+ case \"$1\" in\n+ dry_run=true\n+ shift\n+ true\n+ case \"$1\" in\n+ shift\n+ break\n+ job_list=https://openqa.rockylinux.org/tests/16080\n+ [[ -z '' ]]\n+ first_arg=https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168\n+ [[ https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168 == *\\p\\u\\l\\l* ]]\n+ pr_url=https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168\n+ target_repo_part=https://github.com/rocky-linux/os-autoinst-distri-rocky\n+ pr=168\n+ pr=168\n+ [[ -z '' ]]\n+ pr_url=https://api.github.com/repos/rocky-linux/os-autoinst-distri-rocky/pulls/168\n++ eval 'curl -s https://api.github.com/repos/rocky-linux/os-autoinst-distri-rocky/pulls/168'\n+++ curl -s https://api.github.com/repos/rocky-linux/os-autoinst-distri-rocky/pulls/168\n\n...&lt;snip&gt;...\n\n++ jq -r '.NEEDLES_DIR | select (.!=null)'\n+ old_needledir=\n+ local needles_dir=\n+ needles_dir=rocky/needles\n+ local repo_branch=AlanMarshall/os-autoinst-distri-rocky#serial_console\n+ local test_suffix=@AlanMarshall/os-autoinst-distri-rocky#serial_console\n+ local build=AlanMarshall/os-autoinst-distri-rocky#168\n+ local casedir=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#serial_console\n+ local GROUP=0\n+ local dry_run=true\n+ local scriptdir\n++ dirname /usr/bin/openqa-clone-custom-git-refspec\n+ scriptdir=/usr/bin\n+ local 'cmd=true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance \"https://openqa.rockylinux.org\" \"15973\" _GROUP=\"0\" TEST+=\"@AlanMarshall/os-autoinst-distri-rocky#serial_console\" BUILD=\"AlanMarshall/os-autoinst-distri-rocky#168\" CASEDIR=\"https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#serial_console\" PRODUCTDIR=\"os-autoinst-distri-rocky\" NEEDLES_DIR=\"rocky/needles\"'\n+ [[ 0 -ne 0 ]]\n+ [[ -n '' ]]\n+ eval 'true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance \"https://openqa.rockylinux.org\" \"15973\" _GROUP=\"0\" TEST+=\"@AlanMarshall/os-autoinst-distri-rocky#serial_console\" BUILD=\"AlanMarshall/os-autoinst-distri-rocky#168\" CASEDIR=\"https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#serial_console\" PRODUCTDIR=\"os-autoinst-distri-rocky\" NEEDLES_DIR=\"rocky/needles\"'\n++ true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org 15973 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#serial_console BUILD=AlanMarshall/os-autoinst-distri-rocky#168 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#serial_console PRODUCTDIR=os-autoinst-distri-rocky NEEDLES_DIR=rocky/needles\n</code></pre> <p>What can be seen from the complete <code>--dry-run</code> output for <code>openqa-clone-custom-git-refspec</code> is that both the job to be cloned and the PR to be used are inspected and a <code>openqa-clone-job</code> command is generated to be submitted to the openQA system the job is being cloned on.</p> <p>Without using <code>--dry-run</code> the final <code>openqa-clone-job</code> command shown above will be run causing the job of interest to be cloned with additional <code>POST</code> variables that will cause the repository/branch referenced in the PR to be cloned into the test directory with important files referenced in the cloned job.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#run-openqa-clone-custom-git-refspec-without-verbose-dry-run-mode","title":"Run <code>openqa-clone-custom-git-refspec</code> without <code>--verbose --dry-run</code> mode...","text":"<pre><code>$ openqa-clone-custom-git-refspec \\\nhttps://github.com/rocky-linux/os-autoinst-distri-rocky/pull/168 \\\nhttps://openqa.rockylinux.org/tests/16080\nCreated job #16119: rocky-9.1-universal-x86_64-Build20230329-Rocky-9.1-x86_64.0-install_serial_console@64bit -&gt; https://openqa.rockylinux.org/t16119\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#cloned-job-information","title":"Cloned job information...","text":"<pre><code>$ openqa-cli api jobs/16119 --pretty\n{\n\"job\" : {\n\"assets\" : {\n\"iso\" : [\n\"Rocky-9.1-20221214.1-x86_64-dvd.iso\"\n]\n},\n      \"assigned_worker_id\" : 5,\n      \"blocked_by_id\" : null,\n      \"children\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"clone_id\" : 16121,\n      \"group_id\" : null,\n      \"has_parents\" : 0,\n      \"id\" : 16119,\n      \"name\" : \"rocky-9.1-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_168-install_serial_console@AlanMarshall_os-autoinst-distri-rocky_serial_console@64bit\",\n      \"parents\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"parents_ok\" : 1,\n      \"priority\" : 10,\n      \"reason\" : \"isotovideo abort: isotovideo received signal TERM\",\n      \"result\" : \"user_restarted\",\n      \"settings\" : {\n\"ANACONDA_TEXT\" : \"1\",\n         \"ARCH\" : \"x86_64\",\n         \"ARCH_BASE_MACHINE\" : \"64bit\",\n         \"BACKEND\" : \"qemu\",\n         \"BUILD\" : \"AlanMarshall\\/os-autoinst-distri-rocky#168\",\n         \"CASEDIR\" : \"https:\\/\\/github.com\\/AlanMarshall\\/os-autoinst-distri-rocky.git#serial_console\",\n         \"CLONED_FROM\" : \"https:\\/\\/openqa.rockylinux.org\\/tests\\/15973\",\n         \"CURRREL\" : \"9\",\n         \"DISTRI\" : \"rocky\",\n         \"FLAVOR\" : \"universal\",\n         \"HDDSIZEGB\" : \"15\",\n         \"ISO\" : \"Rocky-9.1-20221214.1-x86_64-dvd.iso\",\n         \"LOCATION\" : \"https:\\/\\/download.rockylinux.org\\/pub\\/rocky\\/9.1\\/BaseOS\",\n         \"MACHINE\" : \"64bit\",\n         \"NAME\" : \"00016119-rocky-9.1-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_168-install_serial_console@AlanMarshall_os-autoinst-distri-rocky_serial_console@64bit\",\n         \"NEEDLES_DIR\" : \"rocky\\/needles\",\n         \"NICTYPE_USER_OPTIONS\" : \"net=172.16.2.0\\/24\",\n         \"NO_UEFI_POST\" : \"1\",\n         \"PART_TABLE_TYPE\" : \"mbr\",\n         \"PRODUCTDIR\" : \"os-autoinst-distri-rocky\",\n         \"QEMUCPU\" : \"Nehalem\",\n         \"QEMUCPUS\" : \"2\",\n         \"QEMURAM\" : \"2048\",\n         \"QEMU_HOST_IP\" : \"172.16.2.2\",\n         \"QEMU_VIDEO_DEVICE\" : \"virtio-vga\",\n         \"QEMU_VIRTIO_RNG\" : \"1\",\n         \"SERIAL_CONSOLE\" : \"1\",\n         \"TEST\" : \"install_serial_console@AlanMarshall\\/os-autoinst-distri-rocky#serial_console\",\n         \"TEST_SUITE_NAME\" : \"install_serial_console\",\n         \"TEST_TARGET\" : \"ISO\",\n         \"VERSION\" : \"9.1\",\n         \"VIRTIO_CONSOLE_NUM\" : \"2\",\n         \"WORKER_CLASS\" : \"qemu_x86_64\",\n         \"XRES\" : \"1024\",\n         \"YRES\" : \"768\"\n},\n      \"state\" : \"done\",\n      \"t_finished\" : \"2023-03-29T06:19:37\",\n      \"t_started\" : \"2023-03-29T06:12:26\",\n      \"test\" : \"install_serial_console@AlanMarshall\\/os-autoinst-distri-rocky#serial_console\"\n}\n}\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#advanced-openqa-clone-custom-git-refspec","title":"Advanced <code>openqa-clone-custom-git-refspec</code>","text":"<p>The following example demonstrates the testing of an open Github pull request in the Rocky Linux openQA production system. The PR changes test code and supplies updated needles for the test.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#github-pr-information_1","title":"Github PR information","text":"<pre><code>\u279c  os-autoinst-distri-rocky git:(nazunalika/develop) gh pr view 162\n\nAnaconda text install #162\nOpen \u2022 AlanMarshall wants to merge 2 commits into develop from anaconda-txt \u2022 about 1 day ago\n+30 -5 \u2022 No checks\nReviewers: akatch (Approved), lumarel (Requested), tcooper (Requested)\nLabels: priority: medium, type: bug, test suite\n\n\n  Added new needle for text install.\n  Deleted redundant code.\n  Tested for 9.1, 8.7 &amp; 8.8:\n\n    openqa-cli api -X POST isos ISO=Rocky-9.1-20221214.1-x86_64-dvd.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal\n  VERSION=9.1 BUILD=-\"$(date +%Y%m%d.%H%M%S).0\"-9.1-20221214.1-universal TEST=install_anaconda_text\n    openqa-cli api -X POST isos ISO=Rocky-8.7-x86_64-dvd1.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal VERSION=8.7 BUILD=-\n  \"$(date +%Y%m%d.%H%M%S).0\"-8.7-20221110-universal TEST=install_anaconda_text\n    openqa-cli api -X POST isos ISO=Rocky-8.8-x86_64-dvd1.iso ARCH=x86_64 DISTRI=rocky FLAVOR=universal VERSION=8.8 BUILD=-\n  \"$(date +%Y%m%d.%H%M%S).0\"-8.8-lookahead-universal TEST=install_anaconda_text\n\n  Result: Pass\n  Fixes Issue #145\n\n\nakatch approved (Member) \u2022 18h \u2022 Newest comment\n\n  All indicated tests pass.\n\n\nView this pull request on GitHub: https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/162\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#run-openqa-clone-custom-git-refspec-in-verbose-dry-run-mode_1","title":"Run <code>openqa-clone-custom-git-refspec</code> in <code>--verbose --dry-run</code> mode","text":"<pre><code>$ openqa-clone-custom-git-refspec --verbose --dry-run https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/162 https://openqa.rockylinux.org/tests/13371\n+ shift\n+ true\n+ case \"$1\" in\n+ dry_run=true\n+ shift\n+ true\n+ case \"$1\" in\n+ shift\n+ break\n+ job_list=https://openqa.rockylinux.org/tests/13371\n+ [[ -z '' ]]\n+ first_arg=https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/162\n+ [[ https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/162 == *\\p\\u\\l\\l* ]]\n+ pr_url=https://github.com/rocky-linux/os-autoinst-distri-rocky/pull/162\n+ target_repo_part=https://github.com/rocky-linux/os-autoinst-distri-rocky\n\n\n...&lt;snip&gt;...\n\n++ jq -r '.NEEDLES_DIR | select (.!=null)'\n+ old_needledir=\n+ local needles_dir=\n+ needles_dir=rocky/needles\n+ local repo_branch=AlanMarshall/os-autoinst-distri-rocky#anaconda-txt\n+ local test_suffix=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt\n+ local build=AlanMarshall/os-autoinst-distri-rocky#162\n+ local casedir=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt\n+ local GROUP=0\n+ local dry_run=true\n+ local scriptdir\n++ dirname /usr/bin/openqa-clone-custom-git-refspec\n+ scriptdir=/usr/bin\n+ local 'cmd=true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance \"https://openqa.rockylinux.org\" \"13371\" _GROUP=\"0\" TEST+=\"@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt\" BUILD=\"AlanMarshall/os-autoinst-distri-rocky#162\" CASEDIR=\"https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt\" PRODUCTDIR=\"os-autoinst-distri-rocky\" NEEDLES_DIR=\"rocky/needles\"'\n+ [[ 0 -ne 0 ]]\n+ [[ -n '' ]]\n+ eval 'true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance \"https://openqa.rockylinux.org\" \"13371\" _GROUP=\"0\" TEST+=\"@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt\" BUILD=\"AlanMarshall/os-autoinst-distri-rocky#162\" CASEDIR=\"https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt\" PRODUCTDIR=\"os-autoinst-distri-rocky\" NEEDLES_DIR=\"rocky/needles\"'\n++ true /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org 13371 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt BUILD=AlanMarshall/os-autoinst-distri-rocky#162 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt PRODUCTDIR=os-autoinst-distri-rocky NEEDLES_DIR=rocky/needles\n</code></pre> <p>This PR provides updated needles and the default behavior of <code>openqa-clone-custom-git-refspec</code> is to not provide an alternate location for <code>NEEDLES</code>. The <code>--verbose --dry-run</code> output needs to be modified to ensure the needles provided in the PR are used in the test.</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#modify-verbose-dry-run-output-to-point-to-needles-in-the-pr","title":"Modify <code>--verbose --dry-run</code> output to point to needles in the PR...","text":"<p>Use output to modify clone job...</p>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#original","title":"original","text":"<pre><code>$ /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org \\\n13371 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt \\\nBUILD=AlanMarshall/os-autoinst-distri-rocky#162 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt \\\nPRODUCTDIR=os-autoinst-distri-rocky\nNEEDLES_DIR=rocky/needles\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#specify-needles_dir-manually-pointing-at-pr-branch","title":"specify NEEDLES_DIR manually pointing at PR branch","text":"<pre><code>$ /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org \\\n13371 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt \\\nBUILD=AlanMarshall/os-autoinst-distri-rocky#162 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt \\\nPRODUCTDIR=os-autoinst-distri-rocky NEEDLES_DIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt/needles\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#rocky-linux-91","title":"Rocky Linux 9.1","text":"<pre><code>$ /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org \\\n13255 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt \\\nBUILD=AlanMarshall/os-autoinst-distri-rocky#162 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt \\\nPRODUCTDIR=os-autoinst-distri-rocky NEEDLES_DIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt/needles\nCreated job #14228: rocky-9.1-universal-x86_64-Build20230319-Rocky-9.1-x86_64.0-install_anaconda_text@64bit -&gt; https://openqa.rockylinux.org/t14228\n</code></pre> <pre><code>$ openqa-cli api jobs/14228 --pretty\n{\n\"job\" : {\n\"assets\" : {\n\"iso\" : [\n\"Rocky-9.1-20221214.1-x86_64-dvd.iso\"\n]\n},\n      \"assigned_worker_id\" : 9,\n      \"blocked_by_id\" : null,\n      \"children\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"clone_id\" : null,\n      \"group_id\" : null,\n      \"has_parents\" : 0,\n      \"id\" : 14228,\n      \"name\" : \"rocky-9.1-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_162-install_anaconda_text@AlanMarshall_os-autoinst-distri-rocky_anaconda-txt@64bit\",\n      \"parents\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"parents_ok\" : 1,\n      \"priority\" : 0,\n      \"result\" : \"passed\",\n      \"settings\" : {\n\"ANACONDA_TEXT\" : \"1\",\n         \"ARCH\" : \"x86_64\",\n         \"ARCH_BASE_MACHINE\" : \"64bit\",\n         \"BACKEND\" : \"qemu\",\n         \"BUILD\" : \"AlanMarshall\\/os-autoinst-distri-rocky#162\",\n         \"CASEDIR\" : \"https:\\/\\/github.com\\/AlanMarshall\\/os-autoinst-distri-rocky.git#anaconda-txt\",\n         \"CLONED_FROM\" : \"https:\\/\\/openqa.rockylinux.org\\/tests\\/13255\",\n         \"CURRREL\" : \"9\",\n         \"DISTRI\" : \"rocky\",\n         \"FLAVOR\" : \"universal\",\n         \"HDDSIZEGB\" : \"15\",\n         \"ISO\" : \"Rocky-9.1-20221214.1-x86_64-dvd.iso\",\n         \"LOCATION\" : \"https:\\/\\/dl.rockylinux.org\\/pub\\/rocky\\/9.1\",\n         \"MACHINE\" : \"64bit\",\n         \"NAME\" : \"00014228-rocky-9.1-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_162-install_anaconda_text@AlanMarshall_os-autoinst-distri-rocky_anaconda-txt@64bit\",\n         \"NEEDLES_DIR\" : \"https:\\/\\/github.com\\/AlanMarshall\\/os-autoinst-distri-rocky.git#anaconda-txt\\/needles\",\n         \"NICTYPE_USER_OPTIONS\" : \"net=172.16.2.0\\/24\",\n         \"PART_TABLE_TYPE\" : \"mbr\",\n         \"PRODUCTDIR\" : \"os-autoinst-distri-rocky\",\n         \"QEMUCPU\" : \"Nehalem\",\n         \"QEMUCPUS\" : \"2\",\n         \"QEMURAM\" : \"2048\",\n         \"QEMU_HOST_IP\" : \"172.16.2.2\",\n         \"QEMU_VIDEO_DEVICE\" : \"virtio-vga\",\n         \"QEMU_VIRTIO_RNG\" : \"1\",\n         \"TEST\" : \"install_anaconda_text@AlanMarshall\\/os-autoinst-distri-rocky#anaconda-txt\",\n         \"TEST_SUITE_NAME\" : \"install_anaconda_text\",\n         \"TEST_TARGET\" : \"ISO\",\n         \"VERSION\" : \"9.1\",\n         \"WORKER_CLASS\" : \"qemu_x86_64\",\n         \"XRES\" : \"1024\",\n         \"YRES\" : \"768\"\n},\n      \"state\" : \"done\",\n      \"t_finished\" : \"2023-03-22T05:28:28\",\n      \"t_started\" : \"2023-03-22T05:07:09\",\n      \"test\" : \"install_anaconda_text@AlanMarshall\\/os-autoinst-distri-rocky#anaconda-txt\"\n}\n}\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#rocky-linux-87","title":"Rocky Linux 8.7","text":"<pre><code>$ /usr/bin/openqa-clone-job --skip-chained-deps --parental-inheritance --within-instance https://openqa.rockylinux.org \\\n13371 _GROUP=0 TEST+=@AlanMarshall/os-autoinst-distri-rocky#anaconda-txt \\\nBUILD=AlanMarshall/os-autoinst-distri-rocky#162 CASEDIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt \\\nPRODUCTDIR=os-autoinst-distri-rocky NEEDLES_DIR=https://github.com/AlanMarshall/os-autoinst-distri-rocky.git#anaconda-txt/needles\nCreated job #14229: rocky-8.7-universal-x86_64-Build20230319-Rocky-8.7-x86_64.0-install_anaconda_text@64bit -&gt; https://openqa.rockylinux.org/t14229\n</code></pre> <pre><code>$ openqa-cli api jobs/14229 --pretty\n{\n\"job\" : {\n\"assets\" : {\n\"iso\" : [\n\"Rocky-8.7-x86_64-dvd1.iso\"\n]\n},\n      \"assigned_worker_id\" : 8,\n      \"blocked_by_id\" : null,\n      \"children\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"clone_id\" : null,\n      \"group_id\" : null,\n      \"has_parents\" : 0,\n      \"id\" : 14229,\n      \"name\" : \"rocky-8.7-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_162-install_anaconda_text@AlanMarshall_os-autoinst-distri-rocky_anaconda-txt@64bit\",\n      \"parents\" : {\n\"Chained\" : [],\n         \"Directly chained\" : [],\n         \"Parallel\" : []\n},\n      \"parents_ok\" : 1,\n      \"priority\" : 0,\n      \"result\" : \"passed\",\n      \"settings\" : {\n\"ANACONDA_TEXT\" : \"1\",\n         \"ARCH\" : \"x86_64\",\n         \"ARCH_BASE_MACHINE\" : \"64bit\",\n         \"BACKEND\" : \"qemu\",\n         \"BUILD\" : \"AlanMarshall\\/os-autoinst-distri-rocky#162\",\n         \"CASEDIR\" : \"https:\\/\\/github.com\\/AlanMarshall\\/os-autoinst-distri-rocky.git#anaconda-txt\",\n         \"CLONED_FROM\" : \"https:\\/\\/openqa.rockylinux.org\\/tests\\/13371\",\n         \"CURRREL\" : \"8\",\n         \"DISTRI\" : \"rocky\",\n         \"FLAVOR\" : \"universal\",\n         \"HDDSIZEGB\" : \"15\",\n         \"ISO\" : \"Rocky-8.7-x86_64-dvd1.iso\",\n         \"LOCATION\" : \"https:\\/\\/dl.rockylinux.org\\/pub\\/rocky\\/8.7\",\n         \"MACHINE\" : \"64bit\",\n         \"NAME\" : \"00014229-rocky-8.7-universal-x86_64-BuildAlanMarshall_os-autoinst-distri-rocky_162-install_anaconda_text@AlanMarshall_os-autoinst-distri-rocky_anaconda-txt@64bit\",\n         \"NEEDLES_DIR\" : \"https:\\/\\/github.com\\/AlanMarshall\\/os-autoinst-distri-rocky.git#anaconda-txt\\/needles\",\n         \"NICTYPE_USER_OPTIONS\" : \"net=172.16.2.0\\/24\",\n         \"PART_TABLE_TYPE\" : \"mbr\",\n         \"PRODUCTDIR\" : \"os-autoinst-distri-rocky\",\n         \"QEMUCPU\" : \"Nehalem\",\n         \"QEMUCPUS\" : \"2\",\n         \"QEMURAM\" : \"2048\",\n         \"QEMU_HOST_IP\" : \"172.16.2.2\",\n         \"QEMU_VIDEO_DEVICE\" : \"virtio-vga\",\n         \"QEMU_VIRTIO_RNG\" : \"1\",\n         \"TEST\" : \"install_anaconda_text@AlanMarshall\\/os-autoinst-distri-rocky#anaconda-txt\",\n         \"TEST_SUITE_NAME\" : \"install_anaconda_text\",\n         \"TEST_TARGET\" : \"ISO\",\n         \"VERSION\" : \"8.7\",\n         \"WORKER_CLASS\" : \"qemu_x86_64\",\n         \"XRES\" : \"1024\",\n         \"YRES\" : \"768\"\n},\n      \"state\" : \"done\",\n      \"t_finished\" : \"2023-03-22T05:31:22\",\n      \"t_started\" : \"2023-03-22T05:10:46\",\n      \"test\" : \"install_anaconda_text@AlanMarshall\\/os-autoinst-distri-rocky#anaconda-txt\"\n}\n}\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_custom_git_refspec_examples/#references","title":"References","text":"<p>openQA Documentation</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/","title":"openqa-clone-job Examples","text":"<p>This page will provide a brief overview of basic and advanced job cloning using the <code>openqa-clone-job</code> command.</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#system-access-requirements","title":"System / Access Requirements","text":"<p>To complete any of the examples please complete the API <code>POST</code> Access steps outlined in the openQA - Access document.</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#basic-openqa-clone-job","title":"Basic <code>openqa-clone-job</code>","text":""},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#querying-openqa-for-a-specific-test-or-job","title":"Querying openQA for a specific test or job","text":"<p>First you might want to query the Rocky Linux openQA system for the latest job ID for a specific job or test. The openQA client, hereafter refered to as <code>openqa-cli</code> will allow you to quickly do that via the API. Here is an example...</p> <pre><code>$ openqa-cli api --host http://openqa.rockylinux.org jobs/overview groupid=0 distri=rocky version=9.1 test=install_default_upload latest=1 | jq '.'\n[\n{\n\"id\": 22735,\n    \"name\": \"rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\"\n}\n]\n</code></pre> <p>This basically says \"give me the job id and name of the most recent <code>install_default_upload</code> test for Rocky Linux 9.1\".</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#cloning-a-job-as-is","title":"Cloning a job \"as-is\"","text":"<p>With that job id in hand you can now clone that job directly to your local openQA development system with...</p> <pre><code>$ openqa-clone-job --from https://openqa.rockylinux.org --skip-download 22735\nCloning children of rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\nCreated job #23: rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit -&gt; http://localhost/t23\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#basic-job-overview","title":"Basic job overview","text":"<p>Now you should have the same job running in your local instance...</p> <pre><code>$ openqa-cli api jobs/overview\n[{\"id\":23,\"name\":\"rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\"}]\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#basic-job-details","title":"Basic job details","text":"<pre><code>$ openqa-cli api jobs/23 | jq '.'\n{\n\"job\": {\n\"assets\": {\n\"iso\": [\n\"Rocky-9.1-20221214.1-x86_64-dvd.iso\"\n]\n},\n    \"assigned_worker_id\": 2,\n    \"blocked_by_id\": null,\n    \"children\": {\n\"Chained\": [],\n      \"Directly chained\": [],\n      \"Parallel\": []\n},\n    \"clone_id\": null,\n    \"group\": \"Rocky\",\n    \"group_id\": 2,\n    \"has_parents\": 0,\n    \"id\": 23,\n    \"name\": \"rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\",\n    \"parents\": {\n\"Chained\": [],\n      \"Directly chained\": [],\n      \"Parallel\": []\n},\n    \"parents_ok\": 1,\n    \"priority\": 50,\n    \"result\": \"none\",\n    \"settings\": {\n\"ARCH\": \"x86_64\",\n      \"ARCH_BASE_MACHINE\": \"64bit\",\n      \"BACKEND\": \"qemu\",\n      \"BUILD\": \"20230423-Rocky-9.1-x86_64.0\",\n      \"CLONED_FROM\": \"https://openqa.rockylinux.org/tests/22735\",\n      \"CURRREL\": \"9\",\n      \"DEPLOY_UPLOAD_TEST\": \"install_default_upload\",\n      \"DESKTOP\": \"gnome\",\n      \"DISTRI\": \"rocky\",\n      \"FLAVOR\": \"dvd-iso\",\n      \"HDDSIZEGB\": \"15\",\n      \"ISO\": \"Rocky-9.1-20221214.1-x86_64-dvd.iso\",\n      \"LOCATION\": \"https://download.rockylinux.org/pub/rocky/9.1/BaseOS\",\n      \"MACHINE\": \"64bit\",\n      \"NAME\": \"00000023-rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\",\n      \"NICTYPE_USER_OPTIONS\": \"net=172.16.2.0/24\",\n      \"PACKAGE_SET\": \"default\",\n      \"PART_TABLE_TYPE\": \"mbr\",\n      \"POSTINSTALL\": \"_collect_data\",\n      \"QEMUCPU\": \"Nehalem\",\n      \"QEMUCPUS\": \"2\",\n      \"QEMURAM\": \"2048\",\n      \"QEMU_HOST_IP\": \"172.16.2.2\",\n      \"QEMU_VIDEO_DEVICE\": \"virtio-vga\",\n      \"QEMU_VIRTIO_RNG\": \"1\",\n      \"STORE_HDD_1\": \"disk_dvd-iso_64bit.qcow2\",\n      \"TEST\": \"install_default_upload\",\n      \"TEST_SUITE_NAME\": \"install_default_upload\",\n      \"TEST_TARGET\": \"ISO\",\n      \"VERSION\": \"9.1\",\n      \"WORKER_CLASS\": \"qemu_x86_64\",\n      \"XRES\": \"1024\",\n      \"YRES\": \"768\"\n},\n    \"state\": \"running\",\n    \"t_finished\": null,\n    \"t_started\": \"2023-04-23T03:02:06\",\n    \"test\": \"install_default_upload\"\n}\n}\n</code></pre> <p>NOTE: In the above job information you can clearly see the job was cloned from <code>https://openqa.rockylinux.org/tests/22735</code>.</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#advanced-openqa-clone-job","title":"Advanced <code>openqa-clone-job</code>","text":"<p>You can, of course, perform more elaborate operations while cloneing a job either from your local instance or from the production instance. Typically, this might be done to modify some of the job POST variables in the cloned job while keeping all other variables unchanged.</p>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#changing-variable-during-clone","title":"Changing variable during clone","text":"<p>Here is an example where the ISO is changed in the cloned job...</p> <pre><code>$ openqa-clone-job --from https://openqa.rockylinux.org --skip-download 22735 ISO=Rocky-9.1-x86_64-dvd.iso\nCloning children of rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\nCreated job #24: rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit -&gt; http://localhost/t24\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#job-overview","title":"Job overview","text":"<pre><code>$ openqa-cli api jobs/overview\n[{\"id\":24,\"name\":\"rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\"}]\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#job-details","title":"Job details","text":"<pre><code>$ openqa-cli api jobs/24 | jq '.'\n{\n\"job\": {\n\"assets\": {\n\"iso\": [\n\"Rocky-9.1-x86_64-dvd.iso\"\n]\n},\n    \"assigned_worker_id\": 1,\n    \"blocked_by_id\": null,\n    \"children\": {\n\"Chained\": [],\n      \"Directly chained\": [],\n      \"Parallel\": []\n},\n    \"clone_id\": null,\n    \"group\": \"Rocky\",\n    \"group_id\": 2,\n    \"has_parents\": 0,\n    \"id\": 24,\n    \"name\": \"rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\",\n    \"parents\": {\n\"Chained\": [],\n      \"Directly chained\": [],\n      \"Parallel\": []\n},\n    \"parents_ok\": 1,\n    \"priority\": 50,\n    \"result\": \"none\",\n    \"settings\": {\n\"ARCH\": \"x86_64\",\n      \"ARCH_BASE_MACHINE\": \"64bit\",\n      \"BACKEND\": \"qemu\",\n      \"BUILD\": \"20230423-Rocky-9.1-x86_64.0\",\n      \"CLONED_FROM\": \"https://openqa.rockylinux.org/tests/22735\",\n      \"CURRREL\": \"9\",\n      \"DEPLOY_UPLOAD_TEST\": \"install_default_upload\",\n      \"DESKTOP\": \"gnome\",\n      \"DISTRI\": \"rocky\",\n      \"FLAVOR\": \"dvd-iso\",\n      \"HDDSIZEGB\": \"15\",\n      \"ISO\": \"Rocky-9.1-x86_64-dvd.iso\",\n      \"LOCATION\": \"https://download.rockylinux.org/pub/rocky/9.1/BaseOS\",\n      \"MACHINE\": \"64bit\",\n      \"NAME\": \"00000024-rocky-9.1-dvd-iso-x86_64-Build20230423-Rocky-9.1-x86_64.0-install_default_upload@64bit\",\n      \"NICTYPE_USER_OPTIONS\": \"net=172.16.2.0/24\",\n      \"PACKAGE_SET\": \"default\",\n      \"PART_TABLE_TYPE\": \"mbr\",\n      \"POSTINSTALL\": \"_collect_data\",\n      \"QEMUCPU\": \"Nehalem\",\n      \"QEMUCPUS\": \"2\",\n      \"QEMURAM\": \"2048\",\n      \"QEMU_HOST_IP\": \"172.16.2.2\",\n      \"QEMU_VIDEO_DEVICE\": \"virtio-vga\",\n      \"QEMU_VIRTIO_RNG\": \"1\",\n      \"STORE_HDD_1\": \"disk_dvd-iso_64bit.qcow2\",\n      \"TEST\": \"install_default_upload\",\n      \"TEST_SUITE_NAME\": \"install_default_upload\",\n      \"TEST_TARGET\": \"ISO\",\n      \"VERSION\": \"9.1\",\n      \"WORKER_CLASS\": \"qemu_x86_64\",\n      \"XRES\": \"1024\",\n      \"YRES\": \"768\"\n},\n    \"state\": \"running\",\n    \"t_finished\": null,\n    \"t_started\": \"2023-04-23T03:08:03\",\n    \"test\": \"install_default_upload\"\n}\n}\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#difference-between-basic-and-advanced-openqa-clone-job","title":"Difference between Basic and Advanced <code>openqa-clone-job</code>","text":"<p>You should notice that the only substantive difference between the two cloned jobs is the ISO that is used to run the <code>install_default_upload</code> test...</p> <pre><code>$ openqa-cli api jobs/23 | jq '.job.settings.ISO'\n\"Rocky-9.1-20221214.1-x86_64-dvd.iso\"\n\n$ openqa-cli api jobs/24 | jq '.job.settings.ISO'\n\"Rocky-9.1-x86_64-dvd.iso\"\n</code></pre>"},{"location":"team/testing/dev_guides/openqa_clone_job_examples/#references","title":"References","text":"<p>openQA Documentation</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/dev_guides/wiki_development_boxes/","title":"How to create a live system to work on the documentation","text":"<p>There are several ways how to setup your development environment, here are the currently used once by the testing team:</p>"},{"location":"team/testing/dev_guides/wiki_development_boxes/#vagrant","title":"Vagrant","text":"<p>For now here is the link to Trevor's vagrant box setup, this might be merged here in the future!</p>"},{"location":"team/testing/dev_guides/wiki_development_boxes/#manual-setup-for-wsl-and-toolbox","title":"Manual setup for WSL and toolbox","text":""},{"location":"team/testing/dev_guides/wiki_development_boxes/#wsl-specific","title":"WSL specific","text":"<p>Create a WSL machine like described here, make sure to give it a name like <code>rocky-wiki</code>.</p>"},{"location":"team/testing/dev_guides/wiki_development_boxes/#toolbox-specific","title":"toolbox specific","text":"<ul> <li>Make sure you have <code>toolbox</code> installed on your system</li> <li>Create a toolbox <code>toolbox create rocky-wiki</code> (on Rocky Linux 8 and 9 machines this will create either a Rocky Linux 8 or 9 toolbox container)</li> </ul>"},{"location":"team/testing/dev_guides/wiki_development_boxes/#container-setup-for-both","title":"Container setup for both","text":"<ul> <li>Run <code>dnf -y update</code> to update the system</li> <li>Run <code>dnf -y install git python39-pip</code> to install Python 3.9 and pip (Python 3.9 is default for Rocky Linux 9, the package is called <code>python3-pip</code> there)</li> <li>Run <code>python3.9 -m pip install -U pip</code> to update pip</li> <li>Clone the repo <code>git clone &lt;path-to-git-project&gt;</code></li> <li>And get into the folder of the repo <code>cd &lt;git-project-name&gt;</code></li> <li>Sometimes you will need to switch the branch here</li> <li>Install all the requirements of the repo <code>python3.9 -m pip install -r requirements.txt</code></li> <li>If you just want to look at the output run <code>mkdocs serve 2&gt;&amp;1 | tee ./mkdocs.serve.log</code></li> </ul> <p>To develop then, the easiest way is to use VS Code with the Remote - WSL, where you have to open the repo in the container (click on the Remote symbol on the lower left, 'Open folder in WSL...').</p> <p>For toolbox just place the repo inside your user profile and you will be able to access it with VS Code inside and outside of the toolbox container.</p> <p>And finally run <code>mkdocs serve 2&gt;&amp;1 | tee ./mkdocs.serve.log</code> in the terminal of this VS Code session. Then you are ready to start changing stuff!</p>"},{"location":"team/testing/dev_guides/wiki_development_boxes/#docker","title":"Docker","text":"<p>From the root of this repository on a machine with Docker installed, run</p> <pre><code>docker-compose up\n</code></pre> <p>When the container finishes starting up, you can access the documentation in your web browser at http://localhost:8000.</p> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Release Requirements documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/release_criteria/release_criteria/","title":"Rocky Linux Release Status","text":"<p>The QA and Testing efforts during releases are tracked in online shared documents. After release the status track and go/no-go documents are published here.</p> Rocky Linux Version Release Criteria QA and Testing Status QA and Testing GO / NO-GO Summary Official Release Date Rocky Linux 8.5 not available not available not available NOVEMBER 15, 2021 Rocky Linux 8.6 AVAILABLE AVAILABLE AVAILABLE MAY 16, 2022 Rocky Linux 9.0 AVAILABLE AVAILABLE AVAILABLE TBD Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/","title":"Rocky Linux 8.6 QA and Testing : GO / NO GO Status","text":"<p>This document summarizes the GO / NO GO Status for Release of Rocky Linux 8.6 from perspective of the QA / Testing efforts. It is based largely on the Release Criteria (https://wiki.rockylinux.org/team/testing/release_criteria/) as was started as an import of that document. If there are differences between the official Release Critieria document and this document the official Release Criteria document will override and this document shall be updated.</p> <p>As a reminder, the objective of a release (major or minor) is to provide a solid Enterprise Linux release that is suitable to: -   Meet the needs of end users -   Meet the needs of enterprises big or small</p>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#summary","title":"SUMMARY","text":"Category Proportion Remaining Items TO_CONFIRM 3 / 29 (10%) PASS 25 / 29 (86%) FAIL_NON_BLOCKING 1 / 29 (3%) cloud-images FAIL_BLOCKING 0 / 29 (0%)"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#sop","title":"SOP","text":"<p>In this document each requirement is described and status is specified in the title.</p> <p>Current choices are...</p>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#to_confirm","title":"TO_CONFIRM","text":"<ul> <li>this means the item may be [INCOMPLETE], [PASS], [FAIL_NON_BLOCKING[] or [FAIL_BLOCKING] and must be verified</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#pass","title":"PASS","text":"<ul> <li>this means that the release criteria has been met and is not a blocker</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#fail_non_blocking","title":"FAIL_NON_BLOCKING","text":"<ul> <li>this means the release criter has not been met but is non-blocking</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#fail_blocking","title":"FAIL_BLOCKING","text":"<ul> <li>this means the release criteria has not been met and is blocking</li> </ul> <p>In this document criteria status should include who completed the item and generally how it was complete.</p> <p>Examples...</p> <ul> <li>[PASS] - (@tcooper, virt only, manual)</li> <li>[PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic , openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#initialization-requirements","title":"Initialization Requirements","text":"<ul> <li>Release-blocking images must boot - [PASS] - (@neil, @atomicturtle)</li> <li>Optical Media Requirements - [PASS] - (@atomicturtle)</li> <li>Basic Graphics Mode behaviors - [PASS] - (@tcooper, virt only, manual)</li> <li>No Broken Packages - [PASS] - (@tcooper, scripted, manual)</li> <li>Repositories Must Match Upstream -TO_CONFIRM- (@tcooper, manual)</li> <li>Debranding - [PASS] - (@tcooper, scripted, manual)</li> <li>Media Consistency Verification - [PASS] - (@tcooper, scripted, manual)</li> <li>Packages and Installer Sources - [PASS] - (@lumarel, semi-automatic, openQA test)</li> <li>NAS (Network Attached Storage) -TO_CONFIRM- (@lumarel?, semi-automatic, openQA dual-host test)</li> <li>Installation Interfaces - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA, @atomicturtle, manual?, SCAP)</li> <li>Minimal Installation - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic , openQA)</li> <li>Kickstart Installation - [PASS] - (@label, @tcooper, manual, createhdds)</li> <li>Disk Layouts - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Firmware RAID -TO_CONFIRM- (@tbd, missing hardware support?)</li> <li>Bootloader Disk Selection - [PASS] - (@raktajino, manual)</li> <li>Storage Volume Resize - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Update Image - [PASS] - (@raktajino,@tcooper, semi-automatic, openQA)</li> <li>Installer Help - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Installer Translations - [PASS] - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#cloud-image-requirements","title":"Cloud Image Requirements","text":"<ul> <li>Images Published to Cloud Providers - FAIL_NON_BLOCKING- (@neil)</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_go_no_go/#post-installation-requirements","title":"Post-Installation Requirements","text":"<ul> <li>System Services - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Keyboard Layout - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>SELinux Errors (Server) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>SELinux and Crash Notifications (Desktop Only) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Default Application Functionality (Desktop Only) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Default Panel Functionality (Desktop Only) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Dual Monitor Setup (Desktop Only) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Artwork and Assets (Server and Desktop) - [PASS] - (@lumarel, semi-automatic, openQA)</li> <li>Packages and Module Installation - [PASS] - (@lumarel, semi-automatic, openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/","title":"Rocky Linux 8.6 QA and Testing Summary","text":"<p>Last updated: Fri May 13 17:36:41 UTC 2022</p>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#scope","title":"Scope","text":"<p>This document will record a summary of all QA and Testing results for Rocky Linux 8.6 release. It is only a record of success and/or failure. Solution discussion should take place elsewhere.</p>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#sop","title":"SOP","text":"<ul> <li>Please include PASS, FAIL, NOTABUG, INVESTIGATE or UPSTREAM as appropriate in all entries.</li> <li>Please only provide brief summary. Details should go to Rocky Pastebin, links here is OK.</li> <li>Especially for an negative result please leave your MM @handle so we can talk to you to get resolution.</li> <li>If the item you are reported is related to a QA:Testcase please mention it. If it should be a QA:Testcase, even if it's not a current requirement, suggest a title and create an issue in the wiki repository so we can add it.</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#investigate","title":"INVESTIGATE","text":"<ul> <li>errors in all tests in openQA - INVESTIGATE - see openQA section below.</li> <li>INVESTIGATE whether kdump issue affects qcows with encrypted partitions in createhdds. These are pre-reqs for openQA multi-machine tests. NOTE: This is addressed below in section - @tcooper</li> <li>KDE and XFCE Life images are broken - INVESTIGATE - @label</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#upstream","title":"UPSTREAM","text":"<ul> <li>Anaconda error when specific steps get executed in the right order (configure network -&gt; disable kdump -&gt; select some os install group -&gt; configure default storage -&gt; configure the storage a second time, but this time with encryption enabled, confirmed via several openqa test suites and manual installation on ESXi) - retested in RC1_2 - UPSTREAM - @lumarel</li> <li>Issue repeated on RHEL8.6 - @atomicturtle</li> <li>Issue reported to RH https://bugzilla.redhat.com/show_bug.cgi?id=2085321 - @stack</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#fail","title":"FAIL","text":"<ul> <li>ESXi secureboot (x86_64) still FAILing, but expected - @lumarel</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#notabug","title":"NOTABUG","text":"<ul> <li>Minimal: Selecting a SCAP profile with dependencies not available (aide, etc), selecting Ignore dependency during installation will crash anaconda at the final oscap check. NOTABUG, this is for documentation - @atomicturtle</li> <li>Minimal ISO: is missing the source for rsyslog again, and somehow also doesn't pull it in when installing, which means it is missing it after the install (doesn't happen for boot ISO and dvd1 ISO) - NOTABUG (per @label) - @lumarel</li> <li>Minimal ISO: if the server base environment is installed with the minimal iso and cockpit is enabled after the installation, the SELinux submenu shows an error \"semanage: command not found\" (doesn't happen with boot/dvd-iso) - also marked as expected - NOTABUG (per @label) - @lumarel</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#manual-success-reported-in-mm","title":"Manual success reported in MM","text":"<ul> <li>minimal install from minimal ISO fine - PASS - @Luna Jernberg</li> <li>workstation (x86_64) install with applications fine - retested in RC1_2 - PASS - @lumarel</li> <li>all repos are available with the exact naming as they are in the rocky-repos package (nfv needs fix for that) - retested in RC1_2 - PASS - @lumarel</li> <li>packer build for 8.6 worked flawlessly - retested by @neil in RC1_2 - PASS - @gmazrael</li> <li>security profiles look good in anaconda UI - PASS - @atomicturtle (need openQA testing)</li> <li>minimal and dvd recognized as Rocky Linux 8 in KVM - PASS - @atomicturtle</li> <li>CIS profiles confirmed good in lvl1/2 in anaconda - PASS - @atomicturtle</li> <li>DISA profiles confirmed good in anaconda  - PASS - @atomicturtle</li> <li>DVD: libvirt correctly boots when Rocky Linux 8 profile is selected  - PASS - @atomicturtle</li> <li>SELinux checks on Server (x86_64) (letting it run for an hour and run sealert -a /var/log/audit/audit.log) - everything okay - retested in RC1_2 - PASS - @lumarel</li> <li>SELinux checks on Desktop (x86_64) (start the GNOME SETroubleshooter after some minutes of running) - everything okay - retested in RC1_2 - PASS - @lumarel</li> <li>DVD: Anaconda manual network configuration, and PCI-DSS SCAP profile selected confirmed good - PASS - @atomicturtle</li> <li>QA:Testcase_Mediacheck - PASS for all x86_64 ISOs - @tcooper</li> <li>QA:Testcase_Mediacheck - PASS for all aarch64 ISOs - @tcooper</li> <li>QA:Testcase Media Repoclosure - PASS for minimal &amp; dvd1 for x86_64 &amp; aarch64 (confirms RelEng results) - @tcooper</li> <li>QA:Testcase Media File Conflicts - PASS for minimal for x86_64 &amp; aarch64 (0 file conflicts found and 0 package conflicts found) - @tcooper</li> <li>QA:Testcase Basic Graphics Mode - PASS - verified manually for Rocky-8.6-x86_64-dvd1.iso in VirtualBox on macOS X - @tcooper</li> <li>DVD: Anaconda install with 3rd party repo, encrypted filesystem, HIPAA SCAP profile selected, confirmed good - PASS - @atomicturtle</li> <li>Upgrade tests on several test machines from 8.5 to 8.6, no issues no SELinux alerts - PASS - @lumarel</li> <li>All module streams except perl:5.32 and log4j:2 correctly have the dependencies set and packages look to be built correctly - PASS - @lumarel</li> <li>log4j module stream was broken, (should be able to hook against java-8 and 11) - got fixed now in RC1_2 - PASS - @lumarel</li> <li>Anything perl 5.32 (module stream) was broken - got fixed in RC1_2 - PASS - @nazunalika</li> <li>Greenbone appliance installation test (https://rpa.st/DQNA) - PASS - @atomicturtle</li> <li>QA:Testcase Debranding for RC2 content from koji (srpms, kernel-rt and pcs are not all on the dvd1) - 46/47 PASS , 1 FALSE PASS - https://rpa.st/raw/QK3A - @tcooper</li> <li>QA:Testcase Media Consistency Verification (not written yet) for all RC2 ISOs x86_64, aarch64 - PASS - @tcooper</li> <li>QA:Testcase Media File Conflicts - EXPECTED(per @label) for Rocky-8.6-x86_64-dvd1.iso (4 file conflicts found and 13 package conflicts found, these appear to be same as 8.5 conflict between mariadb and mysql packages/files, full results - https://rpa.st/raw/ZWPQ) - @tcooper</li> <li>QA:Testcase Media File Conflicts - EXPECTED(per @label) for Rocky-8.6-aarch64-dvd1.iso (modular dependency problems, 3 file conflicts found 4 package conflicts found, full results - https://rpa.st/raw/KOFQ) - @tcooper</li> <li>QA:Testcase Media File Conflicts for both x86_64 (https://rpa.st/raw/NLGA) and aarch64 (https://rpa.st/raw/4SFQ) are essentially unchanged and remain - EXPECTED(per @label) with RC1_2 ISOs. - @tcooper</li> <li>OpenQA tests @lumarel - there are errors from the test cases, but everything image and repo related looks good - PASS - @lumarel</li> <li>the dvd1 iso of aarch64 doesn't show an workstation base environment - it doesn't have an workstation environment - PASS - @lumarel</li> <li>Installs of aarch64 systems of all 3 isos look good and installs with all base environments work as expected from these - PASS - @lumarel</li> <li>Live Image Workstation and Workstation Lite looks good - PASS - @lumarel</li> <li>QA:Testcase Boot Methods Boot Iso - PASS - @neil</li> <li>QA:Testcase Boot Methods DVD - PASS - @neil</li> <li>QA: Testcase boot/install minimal x86_64 over DVD/Bluray (burned with fedora mediawriter) on G752 ASUS laptop - PASS - @atomicturtle</li> <li>Container images for x86_64 and aarch64 work as expected in Docker, Podman and WSL - PASS - @lumarel</li> <li>QA: Testcase Storage Volume Resize - PASS - @raktajino https://rpa.st/MQSA</li> <li>QA: Testcase Update Image - PASS - @raktajino (manually checked against Fedora's testcase (https://fedoraproject.org/wiki/QA:Testcase_Anaconda_updates.img_via_URL), needles also still match in openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#openqa-summary","title":"openQA summary","text":"<ul> <li>errors in all tests in openQA - INVESTIGATE</li> <li>RC1_1 run 1:<ul> <li>@lumarel: https://rpa.st/CCPQ</li> <li>@raktajino: https://rpa.st/5RVA</li> </ul> </li> <li>RC1_1 run 2<ul> <li>@lumarel: https://rpa.st/FWTQ</li> <li>@raktajino:</li> </ul> </li> <li>RC1_2 run 1:<ul> <li>@lumarel: https://rpa.st/EOGQ</li> </ul> </li> <li>@raktajino:https://rpa.st/VHLQ<ul> <li>RC1_2 run 2:</li> </ul> </li> <li>@raktajino: https://rpa.st/DKCQ</li> <li>Upgrade F35 -&gt; F36 needs    postgresql-setup  --upgrade    to convert openqa databse to new format  - @alangm</li> <li>Per discussion in Testing Team meeting we have 4-8 (ish) issues to fix in openQA (needles and code) to be able to complete all tests. @lumarel has created issues our openQA repo (https://github.com/rocky-linux/os-autoinst-distri-rocky) and we'll pick up and resolve ASAP.</li> </ul>"},{"location":"team/testing/release_criteria/r8/8.6_qa_testing_summary/#createhdds-kickstart-file-test-summary","title":"createhdds kickstart file test summary","text":"<p>Test method:  Used packer to build VM.  Booted VM.  Verified root login.  Shutdown VM.</p> <ul> <li>UEFI Testing:<ul> <li>desktop.ks - PASS - Note: resulting image asks for EULA acceptance when booted due to <code>firstboot --enable</code> (unsure if that is desired behavior)</li> <li>desktopencrypt.ks - PASS - Note: resulting image asks for EULA acceptance when booted due to <code>firstboot --enable</code> (unsure if that is desired behavior)</li> <li>minimal-uefi.ks - PASS</li> <li>server.ks - PASS</li> <li>support.ks - PASS</li> </ul> </li> <li>BIOS Testing:<ul> <li>desktop.ks - PASS - Note: resulting image asks for EULA acceptance when booted due to <code>firstboot --enable</code> (unsure if that is desired behavior)</li> <li>desktopencrypt.ks - PASS - Note: resulting image asks for EULA acceptance when booted due to <code>firstboot --enable</code> (unsure if that is desired behavior)</li> <li>minimal.ks - PASS</li> <li>server.ks - PASS</li> <li>support.ks - PASS</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/","title":"Rocky Linux 8 Final Release Objectives","text":"<p>The objective of a release (major or minor) is to provide a solid Enterprise Linux release that is suitable to:</p> <ul> <li>Meet the needs of end users</li> <li>Meet the needs of enterprises big or small</li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#rocky-linux-8-final-release-requirements","title":"Rocky Linux 8 Final Release Requirements","text":"<p>In order for Rocky Linux to be released to the general public, a compose must be able to meet all the following criteria as provided in this document. This is allows the decision process to be straightforward and as clear as possible. This document only contains \u201chard requirement\u201d items. Optional/nice to have items are not to be included in this list.</p> <p>There may cases where a requirement cannot be met but only in particular configurations. In these types of cases, the Release Engineering Team should use their judgement to determine whether or not the issue should be considered to block the release. They should consider the number of users likely to be affected by said issue, the severity of the case, if the issue can be avoided with ease (by both informed and uninformed users), and if the problem exists upstream in the current Red Hat Enterprise Linux that the release is based on.</p> <p>Release-blocking Server</p> <p>...means bugs as it pertains to server functionality can be considered to block a release. This applies to any packages that provide a service such as httpd, nginx, etc. All architectures apply.</p> <p>Release-blocking Desktop</p> <p>...means bugs as it pertains to desktop functionality (GNOME) can be considered to block a release. This applies to both x86_64 and aarch64. Additional desktops (as provided by EPEL or a SIG) are not considered blockers.</p> <p>Release-blocking Image</p> <p>...means bugs as it pertains to the images built that can block a release. This applies to the DVD, minimal, and boot images on all architectures.</p>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#initialization-requirements","title":"Initialization Requirements","text":""},{"location":"team/testing/release_criteria/r8/8_release_criteria/#release-blocking-images-must-boot","title":"Release-blocking images must boot","text":"<p>Release-blocking installer images must boot when written to optical media or USB flash drive of appropriate sizes (if applicable) via officially supported methods. It is not the testing team\u2019s responsibility to test optical media, but they can and report back. If a bug is found, it is considered a blocker.</p> Optical Media Requirements <p>Release-blocking images must boot when written to optical media of an appropriate size. Current size requirements are: boot.iso = 789M, minimal.iso = 2.0G and dvd.iso = 10G.</p> Officially supported USB flash drive writing methods <p>The following methods of writing USB flash drives are officially support: dd The following methods of writing USB flash drives are not supported: rufus</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Boot Methods Boot ISO</li> <li>QA:Testcase Boot Methods DVD</li> <li>QA:Testcase Media USB dd</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#basic-graphics-mode-behaviors","title":"Basic Graphics Mode behaviors","text":"<p>The generic video driver option (\u201cbasic graphics mode\u201d) on all release-blocking installers must function as intended. This means launching the installer or desktop and attempting to use a generic driver. There must be no bugs that prevent the installer from being reached in this configuration on all systems and classes of hardware supported by the enterprise linux kernel.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Basic Graphics Mode</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#no-broken-packages","title":"No Broken Packages","text":"<p>Critical errors, such as undeclared conflicts, unresolved dependencies, or modules relying on packages from another stream will be considered an automatic blocker. There are potential exceptions to this (eg, freeradius cannot be installed on an older perl stream, this is a known issue upstream).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Media Repoclosure</li> <li>QA:Testcase Media File Conflicts</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#repositories-must-match-upstream","title":"Repositories Must Match Upstream","text":"<p>Repositories and the packages within them should match upstream as closely as possible. Notable exceptions would be kmods, kpatch, or what is deemed as \u201cspyware\u201d like insights. Packages that are available from upstream should not have hard requirements on RHSM and packages that have it default built in should be patched out.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Repo Compare</li> <li>QA:Testcase Packages No Insights</li> <li>QA:Testcase Packages No RHSM</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#debranding","title":"Debranding","text":"<p>Assets and functionality that are Red Hat specific should not be included. If they are not patched out, it will be considered an automatic blocker.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Debranding</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#installer-requirements","title":"Installer Requirements","text":""},{"location":"team/testing/release_criteria/r8/8_release_criteria/#media-consistency-verification","title":"Media Consistency Verification","text":"<p>This means that the installer\u2019s mechanism for verifying the install medium is intact and must complete successfully, with the assumption that the medium was correctly written. It should return a failure message if this not the case.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Media USB dd</li> <li>QA:Testcase Boot Methods Boot ISO</li> <li>QA:Testcase Boot Methods DVD</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#packages-and-installer-sources","title":"Packages and Installer Sources","text":"<p>The installer must be able to use all supported local/remote packages and installer sources.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Packages and Installer Sources</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#nas-network-attached-storage","title":"NAS (Network Attached Storage)\"","text":"<p>The installer must be able to detect and install to supported NAS devices (if possible and supported by the kernel).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Network Attached Storage</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#installation-interfaces","title":"Installation Interfaces","text":"<p>The installer must be able to complete an installation using all supported spokes.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installation Interfaces</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#minimal-installation","title":"Minimal Installation","text":"<p>A minimal installation (via network) must be able to install the minimal package set.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Minimal Installation</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#kickstart-installation","title":"Kickstart Installation","text":"<p>A kickstart installation should succeed, whether from optical/USB media or via the network.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Kickstart Installation</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#disk-layouts","title":"Disk Layouts","text":"<p>The installer must be able to create and install to any workable partition layout using any file system or format combination offered or supported by the installer. File systems that are not supported by the EL kernel is not tested here (this means btrfs, zfs, both of wish are not supported).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Disk Layouts</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#firmware-raid","title":"Firmware RAID","text":"<p>The installer must be able to detect and install to firmware RAID devices. Note that system-specific bugs do not count as blockers. It is likely that some hardware support might be broken or not available at all. DUDs (driver update disks) are not considered for this criteria.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Firmware RAID</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#bootloader-disk-selection","title":"Bootloader Disk Selection","text":"<p>The installer must allow the user to choose which disk the bootloader will be installed to or, if the user so chooses, not to install a bootloader.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Bootloader Disk Selection</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#storage-volume-resize","title":"Storage Volume Resize","text":"<p>Any installer mechanism for resizing storage volumes must correctly attempt the requested operation. This means that if the installer offers a way to resize storage volumes, then it must use the correct resizing tool with the correct parameters. However, it does not require the installer to disallow resizing of unformatted or volumes with an unknown filesystem type.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Storage Volume Resize</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#update-image","title":"Update Image","text":"<p>The installer must be able to use an installer update image retrieved from removable media or a remote package source. This includes DUDs (driver update disks).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Update Image</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#installer-help","title":"Installer Help","text":"<p>Any element in the installer which contains a \u201chelp\u201d text must display the appropriate help documentation when selected.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installer Help</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#installer-translations","title":"Installer Translations","text":"<p>The installer must correctly display all complete translations that are available for use.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installer Translations</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#cloud-image-requirements","title":"Cloud Image Requirements","text":""},{"location":"team/testing/release_criteria/r8/8_release_criteria/#images-published-to-cloud-providers","title":"Images Published to Cloud Providers","text":"<p>Release-blocking cloud disk images must be published to appropriate cloud providers (such as Amazon) and they must successfully boot. This also applies to KVM based instances, such as x86 and aarch64 systems.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase TBD</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#post-installation-requirements","title":"Post-Installation Requirements","text":""},{"location":"team/testing/release_criteria/r8/8_release_criteria/#system-services","title":"System Services","text":"<p>All system services present after installation must start properly, with the exception of services that require hardware which is not present. Examples of such services would be:</p> <ul> <li>sshd</li> <li>firewalld</li> <li>auditd</li> <li>chronyd</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase System Services</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#keyboard-layout","title":"Keyboard Layout","text":"<p>If a particular keyboard layout has been configured for the system, that layout must be used:</p> <ul> <li>When unlocking storage volumes (encrypted by LUKS)</li> <li>When logging in at a TTY console</li> <li>When logging in via GDM</li> <li>After logging into a GNOME desktop system, if the user does not have their own layout configuration set.</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Keyboard Layout</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#selinux-errors-server","title":"SELinux Errors (Server)","text":"<p>There must be no SELinux denial logs in /var/log/audit/audit.log</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase SELinux Errors on Server installations</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#selinux-and-crash-notifications-desktop-only","title":"SELinux and Crash Notifications (Desktop Only)","text":"<p>There must be no SELinux denial notifications or crash notifications on boot, during installation, or during first login.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase SELinux Errors on Desktop clients</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#default-application-functionality-desktop-only","title":"Default Application Functionality (Desktop Only)","text":"<p>Applications that can be launched within GNOME or on the command line must start successfully and withstand basic functionality tests. This includes:</p> <ul> <li>Web browser</li> <li>File manager</li> <li>Package manager</li> <li>Image/Document Viewers</li> <li>Text editors (gedit, vim)</li> <li>Archive manager</li> <li>Terminal Emulator (GNOME Terminal)</li> <li>Problem Reporter</li> <li>Help Viewer</li> <li>System Settings</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Application Functionality</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#default-panel-functionality-desktop-only","title":"Default Panel Functionality (Desktop Only)","text":"<p>All elements of GNOME should function properly in regular use.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase GNOME UI Functionality</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#dual-monitor-setup-desktop-only","title":"Dual Monitor Setup (Desktop Only)","text":"<p>Computers using two monitors, the graphical output is correctly shown on both monitors.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Multimonitor Setup</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#artwork-and-assets-server-and-desktop","title":"Artwork and Assets (Server and Desktop)","text":"<p>Proposed final artwork (such as wallpapers and other assets) must be included. A wallpaper from this package should show up as a default for GDM and GNOME.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Artwork and Assets</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#packages-and-module-installation","title":"Packages and Module Installation","text":"<p>Packages (non-module) should be able to be installed without conflicts or dependent on repositories outside of Rocky Linux.</p> <ul> <li>Default modules (as listed in dnf module list) should be installed without requiring them to be enabled.</li> <li>Module streams should be able to be switched and those packages should be able to be installed without errors or unresolved dependencies.</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Basic Package installs</li> <li>QA:Testcase Module Streams</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r8/8_release_criteria/#identity-management-server-setup","title":"Identity Management Server Setup","text":"<p>It should be possible to setup a IdM server (FreeIPA), use it's functionality and connect clients.</p> References <ul> <li>Test cases<ul> <li>QA:Testcase Identity Management</li> </ul> </li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Release Requirements documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/","title":"Rocky Linux 9 QA and Testing : GO / NO GO Status","text":"<p>This document summarizes the GO / NO GO Status for Release of Rocky Linux 9.0 from perspective of the QA / Testing efforts. It is based largely on the Release Criteria (https://wiki.rockylinux.org/team/testing/release_criteria/) as was started as an import of that document. If there are differences between the official Release Critieria document and this document the official Release Criteria document will override and this document shall be updated.</p> <p>As a reminder, the objective of a release (major or minor) is to provide a solid Enterprise Linux release that is suitable to: -   Meet the needs of end users -   Meet the needs of enterprises big or small</p>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#summary","title":"SUMMARY","text":"Category Proportion Remaining Items TO_CONFIRM 1 / 29 (3%) Firmware RAID PASS 28/ 29 (97%) FAIL_NON_BLOCKING 0 / 29 (0%) FAIL_BLOCKING 0 / 29 (0%)"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#sop","title":"SOP","text":"<p>In this document each requirement is described and status is specified in the title.</p> <p>Current choices are...</p>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#to_confirm","title":"TO_CONFIRM","text":"<ul> <li>this means the item may be INCOMPLETE, PASS, FAIL_NON_BLOCKING or FAIL_BLOCKING and must be verified</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#pass","title":"PASS","text":"<ul> <li>this means that the release criteria has been met and is not a blocker</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#fail_non_blocking","title":"FAIL_NON_BLOCKING","text":"<ul> <li>this means the release criter has not been met but is non-blocking</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#fail_blocking","title":"FAIL_BLOCKING","text":"<ul> <li>this means the release criteria has not been met and is blocking</li> </ul> <p>In this document criteria status should include who completed the item and generally how it was complete.</p> <p>Examples...</p> <ul> <li>PASS - (@tcooper, virt only, manual)</li> <li>PASS - (@lumarel, @raktajino, @tcooper, semi-automatic , openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#initialization-requirements","title":"Initialization Requirements","text":"<ul> <li>Release-blocking images must boot - PASS - (@neil, @atomicturtle, @lumarel)</li> <li>Optical Media Requirements - PASS - (@neil)</li> <li>Basic Graphics Mode behaviors - PASS - (@tcooper, virt only, manual)</li> <li>No Broken Packages - PASS - (@tcooper, scripted, manual)</li> <li>Repositories Must Match Upstream - PASS - (@tcooper, manual)</li> <li>Debranding - PASS - (@tcooper, scripted, manual)</li> <li>Media Consistency Verification - PASS - (@tcooper, scripted, manual)</li> <li>Packages and Installer Sources - PASS - (@lumarel, semi-automatic, openQA test)</li> <li>NAS (Network Attached Storage) - PASS - (@stack, manual)</li> <li>Installation Interfaces - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA, @atomicturtle, manual?, SCAP)</li> <li>Minimal Installation - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic , openQA)</li> <li>Kickstart Installation - PASS - (@label, @tcooper, manual, createhdds)</li> <li>Disk Layouts - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Firmware RAID - TO_CONFIRM - (@tbd, missing hardware support?)</li> <li>Bootloader Disk Selection - PASS - (@raktajino, manual)</li> <li>Storage Volume Resize - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Update Image - PASS - (@raktajino,@tcooper, semi-automatic, openQA)</li> <li>Installer Help - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> <li>Installer Translations - PASS - (@lumarel, @raktajino, @tcooper, semi-automatic, openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#cloud-image-requirements","title":"Cloud Image Requirements","text":"<ul> <li>Images Published to Cloud Providers - PASS - (@neil)</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_go_no_go/#post-installation-requirements","title":"Post-Installation Requirements","text":"<ul> <li>System Services - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Keyboard Layout - PASS - (@lumarel, semi-automatic, openQA)</li> <li>SELinux Errors (Server) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>SELinux and Crash Notifications (Desktop Only) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Default Application Functionality (Desktop Only) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Default Panel Functionality (Desktop Only) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Dual Monitor Setup (Desktop Only) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Artwork and Assets (Server and Desktop) - PASS - (@lumarel, semi-automatic, openQA)</li> <li>Packages and Module Installation - PASS - (@lumarel, semi-automatic, openQA)</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/","title":"Rocky Linux 9 QA and Testing Summary","text":"<p>Last updated:"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#scope","title":"Scope","text":"<p>This document will record a summary of all QA and Testing results for Rocky Linux {{ no such element: dict object[9] }} release. It is only a record of success and/or failure. Solution discussion should take place elsewhere.</p>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#reference","title":"Reference","text":"<ul> <li>Please check RHEL 9 Release Notes BEFORE marking issue here as FAIL.</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#sop","title":"SOP","text":"<ul> <li>Please include PASS, FAIL, NOTABUG, INVESTIGATE or UPSTREAM as appropriate in all entries.</li> <li>Please only provide brief summary. Details should go to Rocky Pastebin, links here is OK.</li> <li>Please leave your MM @handle on all items you have done or are working on so we can talk to you to get resolution.</li> <li>If the item you have reported is related to a QA:Testcase please mention it.</li> <li>If you think the item you have reported should be a QA:Testcase, even if it's not a current requirement, suggest a title and create an issue in the wiki repository so we can add it.</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#investigate","title":"INVESTIGATE","text":"<p>This is a list of items that are being INVESTIGATEd further before being assigned a PASS, FAIL, NOTABUG or UPSTREAM status. PLEASE add your MM handle if you are working on this item to minimize duplication of work. More than one handle is allowed but please communicate.</p> <ul> <li>QA:Testcase Firmware RAID                        - [INVESTIGATE] - @neil</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#upstream","title":"UPSTREAM","text":"<p>This is a list of items that have been verified to be replicated UPSTREAM in RHEL {{ no such element: dict object[9] }} and/or are described clearly in the RHEL 9 Release Notes.</p> <ul> <li>QA:Testcase_Some_Testcase                                - [UPSTREAM] - @your_mm_handle -"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#fail","title":"FAIL","text":"<p>This is a list of items that have been verified to FAIL the QA:Testcase. In addition to recording who did the test please indicate if the item is BLOCKING release or not.</p> <ul> <li>QA:Testcase_Some_Testcase                                - [FAIL] - @your_mm_handle -  <li>RC1 -  The blue side banner  background at the left side of the Anaconda installer display is not displaying correctly in virt-viewer. [minor BUG] - @alangm</li>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#notabug","title":"NOTABUG","text":"<p>This is a list of items that have been verified as less than optimal but are expected and NOTABUG.</p> <ul> <li>QA:Testcase Basic Graphics Mode                             - [DEPRICATED]      - @tcooper</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#pass","title":"PASS","text":"<p>This is a list of item that have been verified as PASSing the QA:Testcase named (or proposed).</p> <ul> <li>QA:Testcase_Debranding - [PASS] - @tcooper - preliminary pass based on Peridot yumrepofs</li> <li>RC1 - QA:Testcase System Services - [PASS] - @lumarel - tested with boot-iso and every base environment</li> <li>RC1 - Basic Installs - [PASS] - @lumarel - Installs of all base environments on x86_64 without additional optional package groups</li> <li>RC1 - QA:Testcase Packages and Installer Sources - [PASS] - @raktajino - tested against RC1-boot-iso in openQA, all package sets pass.</li> <li>RC1 - QA:Testcase GNOME UI Functionality - [PASS] - @lumarel - Nothing to mention</li> <li>RC1 - QA:Testcase SELinux Errors on Server - [PASS] - @lumarel - no errors</li> <li>RC1 - QA:Testcase SELinux Errors on Desktop- [PASS] - @lumarel - no errors</li> <li>RC1 - QA:Testcase Artwork and Assets - [PASS] - @lumarel - everything looks correct</li> <li>RC1 - QA:Testcase Minimal Installation - [PASS] - @raktajino - nothing to report</li> <li>RC1 - QA: Testcase Boot Methods Boot Iso - [PASS] - @alangm - minimal system, graphical server &amp; basic workstation - nothing to report except as above ^^^</li> <li>RC1 - Minimal install on QEMU/KVM passing - [PASS] - @boris - reboot takes slightly longer on the first reboot</li> <li>RC1 - Repo Health Check - [PASS] - @lumarel - sqlite database files for repo metadata is missing up to now, which will hinder some applications from syncing the sources - are implemented</li> <li>RC1 - Repo Health Check - [PASS] - @lumarel - metadata signing not implemented up to now - looks to be implemented as well now</li> <li>RC1 - Repo Health Check - [PASS] - @lumarel - Repos look good now excl. BaseOS of aarch64, ppc64le, s390x, where the boot image is missing, which is referenced in the .treeinfo</li> <li>RC1 - Redesign looks to be broken (Post-Install error, effects some of the install groups) - [PASS] - @lumarel</li> <li>RC1 - Workstation install with known pesign bug - [PASS] - @alangm - error window  \"Exit Installer\" button froze Anaconda instead of exit so had to initiate shutdown from cockpit - @lumarel - fixed!</li> <li>RC1 - Building packages with mock - [PASS] - @hbjy - building works with the mock config from sokels' repo (will be upstreamed for release)</li> <li>RC1 - Install apache + mariadb-server - [PASS] - @sspencerwire - mariadb-secure-installation works, nextcloud install on top as well</li> <li>RC1 - Install works on macOS M1 - [PASS] - @netwaze, @gardo984, @jordan_c</li> <li>RC1 - Install on baremetal went well - [PASS] - @alangm - on a Dell T630</li> <li>RC1 - Install went well - [PASS] - @kars88 - there was some flickering during the install</li> <li>RC1.1 dvd - STIG security - [PASS] - @atomicturtle - packages were not complete in RC1 dvd, but are now in RC1.1</li> <li>RC1.1 - Basic installs work - [PASS] - @mkahric - Virtualbox on Windows (UEFI w/o SB), Workstation Player on Windows (UEFI w/ SB), Hyper-V (UEFI w/ SB)</li> <li>RC1.1 - docker installation with ansible works - [PASS] - @gardo984</li> <li>RC1 - Repo Health Check - [PASS] - @lumarel - all repos (x86_64, aarch64, ppc64le, s390x) look good now, all metadata is healthy and all package checksums match</li> <li>RC1.1 - QA:Testcase Multimonitor Setup - [PASS] - @lumarel - looks good</li> <li>RC1.1 - QA:Testcase Artwork and Assets - [PASS] - @lumarel - no issues found</li> <li>RC1.1 - QA:Testcase GNOME UI Functionality - [PASS] - @lumarel - everything behaves as it should</li> <li>RC1.1 - QA:Testcase SELinux Errors on Desktop - [PASS] - @lumarel - After an hour of usage no errors</li> <li>RC1.1 - QA:Testcase Keyboard Layout - [PASS] - @lumarel - OpenQA tests and manual tests show normal behavior</li> <li>RC1.1 - QA:Testcase SELinux Errors on Server - [PASS] - @lumarel - after more than an hour of runtime with several installs and application setups (missing, Katello bootstrap, which once brought some SELinux errors)</li> <li>RC1.1 - QA:Testcase System Services - [PASS] - @lumarel - no errors</li> <li>RC1.1 - QA: Testcase Installation Interfaces - [PASS] - @raktajino - failures on the Welcome Tour screen because we haven't handled it yet. Everything else seems good.</li> <li>RC1.1 - QA:Testcase Installer Help - [PASS] - @raktajino  - no errors</li> <li>RC1.1 - QA: Testcase Disk Layouts - [PASS] - @raktajino - Assorted post-install failures due to either mismatch between console login and GUI login or unhandled Welcome Tour.</li> <li>RC1.1 - QA: Testcase Kickstart Installation - [PASS] - @raktajino - Executed manually with virt-install. Nothing to report.</li> <li>RC1.1 - QA: Testcase Update Image - [PASS] - @raktajino - failure on _console_wait_login as the GUI login screen is displayed. Update image is applied as expected.</li> <li>RC1.1 - QA:Testcase VNC Graphics Mode - [PASS] - @tcooper</li> <li>RC1.1 - QA:Testcase Basic Package installs - [PASS] - @lumarel - All package sets and services tested which are currently on the blocking list</li> <li>RC1.1 - QA:Testcase Application Functionality - [PASS] - @lumarel - everything looks good</li> <li>RC1/RC1.1 - QA:Testcase_Mediacheck - [PASS] - @tcooper</li> <li>RC1/RC1.1 - QA:Testcase Media Consistency Verification - [PASS] - @tcooper</li> <li>RC1.1 - QA:Testcase Media Repoclosure - [PASS] - @tcooper</li> <li>RC1.1 - QA:Testcase Media File Conflicts - [PASS] - @tcooper</li> <li>RC1.1 - QA: Testcase Bootloader Disk Selection - [PASS] - @raktajino</li> <li>RC1.1 - QA: Testcase Installer Translations - [PASS] - @raktajino</li> <li>RC1.1 - QA: Testcase Network Attached Storage - [PASS] - @Stack</li> <li>QA: Testcase Boot Methods Boot ISO - [PASS] - all of us &lt;3</li> <li>QA: Testcase Boot Methods DVD - [PASS] - todos nosotros &lt;3</li> <li>QA:Testcase Cloud Images Published - [PASS] - @neil</li> <li>QA:Testcase Storage Volume Resize - [PASS] - @raktajino, @tcooper</li> <li>QA:Testcase Repocompare - [PASS] - @tcooper</li> <li>QA:Testcase Basic install boot final ISO - [PASS] - @lumarel</li> <li>QA:Testcase Basic install minimal final ISO - [PASS] - @lumarel</li> <li>QA:Testcase Basic installs dvd final ISO - [PASS] - @lumarel - install of every base environment + custom operating system with all options enabled</li> <li>OpenQA tests with final ISOs - [PASS] - @lumarel - boot-iso 2/2 | minimal-iso 2/2 | minimal 22/26 (failing are all false-positive) | server 21/26 (failing are all false-positive) | package-set 5/5 | workstation 17/26 (failing are all false-positive) | graphical-server 17/26 (failing are all false-positive) | universal 34/43 (failing are all false-positive)</li> <li>QA:Testcase Minimal Installation - [PASS] - @neil</li> </ul>"},{"location":"team/testing/release_criteria/r9/9.0_qa_testing_summary/#other-notable-items","title":"OTHER NOTABLE ITEMS","text":"<ul> <li>QA:Testcase Module Streams - @lumarel - 9.0 currently does not have any Stream metadata and only the base Streams</li> <li>Repo Health Check - @lumarel - yumrepofs is not sending content lengths, which make syncing with Katello impossible</li> <li>Missing package in package group additional-devel - @stack - dnf -y group install additional-devel: No match for group package \"hmaccalc\" - this is an old EL bug</li> <li>Hosting a nfs server in macOS, and using that in Virtualbox for OpenQA shares is a pain - @tcooper</li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/","title":"Rocky Linux 9 Final Release Objectives","text":"<p>The objective of a release (major or minor) is to provide a solid Enterprise Linux release that is suitable to:</p> <ul> <li>Meet the needs of end users</li> <li>Meet the needs of enterprises big or small</li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#rocky-linux-9-final-release-requirements","title":"Rocky Linux 9 Final Release Requirements","text":"<p>In order for Rocky Linux to be released to the general public, a compose must be able to meet all the following criteria as provided in this document. This is allows the decision process to be straightforward and as clear as possible. This document only contains \u201chard requirement\u201d items. Optional/nice to have items are not to be included in this list.</p> <p>There may cases where a requirement cannot be met but only in particular configurations. In these types of cases, the Release Engineering Team should use their judgement to determine whether or not the issue should be considered to block the release. They should consider the number of users likely to be affected by said issue, the severity of the case, if the issue can be avoided with ease (by both informed and uninformed users), and if the problem exists upstream in the current Red Hat Enterprise Linux that the release is based on.</p> <p>Release-blocking Server</p> <p>...means bugs as it pertains to server functionality can be considered to block a release. This applies to any packages that provide a service such as httpd, nginx, etc. All architectures apply.</p> <p>Release-blocking Desktop</p> <p>...means bugs as it pertains to desktop functionality (GNOME) can be considered to block a release. This applies to both x86_64 and aarch64. Additional desktops (as provided by EPEL or a SIG) are not considered blockers.</p> <p>Release-blocking Image</p> <p>...means bugs as it pertains to the images built that can block a release. This applies to the DVD, minimal, and boot images on all architectures.</p>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#initialization-requirements","title":"Initialization Requirements","text":""},{"location":"team/testing/release_criteria/r9/9_release_criteria/#release-blocking-images-must-boot","title":"Release-blocking images must boot","text":"<p>Release-blocking installer images must boot when written to optical media or USB flash drive of appropriate sizes (if applicable) via officially supported methods. It is not the testing team\u2019s responsibility to test optical media, but they can and report back. If a bug is found, it is considered a blocker.</p> Optical Media Requirements <p>Release-blocking images must boot when written to optical media of an appropriate size. Current size requirements are: boot.iso = 789M, minimal.iso = 2.0G and dvd.iso = 10G.</p> Officially supported USB flash drive writing methods <p>The following methods of writing USB flash drives are officially support: dd The following methods of writing USB flash drives are not supported: rufus</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Boot Methods Boot ISO</li> <li>QA:Testcase Boot Methods DVD</li> <li>QA:Testcase Media USB dd</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#vnc-graphics-mode-behaviors","title":"VNC Graphics Mode behaviors","text":"<p>The VNC installation option on all release-blocking installers must function as intended. This means launching the installer or desktop and connecting with VNC to complete the installation. There must be no bugs that prevent the installer from being reached in this configuration on all systems and classes of hardware supported by the enterprise linux kernel.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase VNC Graphics Mode</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#no-broken-packages","title":"No Broken Packages","text":"<p>Critical errors, such as undeclared conflicts, unresolved dependencies, or modules relying on packages from another stream will be considered an automatic blocker. There are potential exceptions to this (eg, freeradius cannot be installed on an older perl stream, this is a known issue upstream).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Media Repoclosure</li> <li>QA:Testcase Media File Conflicts</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#repositories-must-match-upstream","title":"Repositories Must Match Upstream","text":"<p>Repositories and the packages within them should match upstream as closely as possible. Notable exceptions would be kmods, kpatch, or what is deemed as \u201cspyware\u201d like insights. Packages that are available from upstream should not have hard requirements on RHSM and packages that have it default built in should be patched out.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Repo Compare</li> <li>QA:Testcase Packages No Insights</li> <li>QA:Testcase Packages No RHSM</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#debranding","title":"Debranding","text":"<p>Assets and functionality that are Red Hat specific should not be included. If they are not patched out, it will be considered an automatic blocker.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Debranding</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#installer-requirements","title":"Installer Requirements","text":""},{"location":"team/testing/release_criteria/r9/9_release_criteria/#media-consistency-verification","title":"Media Consistency Verification","text":"<p>This means that the installer\u2019s mechanism for verifying the install medium is intact and must complete successfully, with the assumption that the medium was correctly written. It should return a failure message if this not the case.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Media USB dd</li> <li>QA:Testcase Boot Methods Boot ISO</li> <li>QA:Testcase Boot Methods DVD</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#packages-and-installer-sources","title":"Packages and Installer Sources","text":"<p>The installer must be able to use all supported local/remote packages and installer sources.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Packages and Installer Sources</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#nas-network-attached-storage","title":"NAS (Network Attached Storage)\"","text":"<p>The installer must be able to detect and install to supported NAS devices (if possible and supported by the kernel).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Network Attached Storage</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#installation-interfaces","title":"Installation Interfaces","text":"<p>The installer must be able to complete an installation using all supported spokes.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installation Interfaces</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#minimal-installation","title":"Minimal Installation","text":"<p>A minimal installation (via network) must be able to install the minimal package set.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Minimal Installation</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#kickstart-installation","title":"Kickstart Installation","text":"<p>A kickstart installation should succeed, whether from optical/USB media or via the network.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Kickstart Installation</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#disk-layouts","title":"Disk Layouts","text":"<p>The installer must be able to create and install to any workable partition layout using any file system or format combination offered or supported by the installer. File systems that are not supported by the EL kernel is not tested here (this means btrfs, zfs, both of wish are not supported).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Disk Layouts</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#firmware-raid","title":"Firmware RAID","text":"<p>The installer must be able to detect and install to firmware RAID devices. Note that system-specific bugs do not count as blockers. It is likely that some hardware support might be broken or not available at all. DUDs (driver update disks) are not considered for this criteria.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Firmware RAID</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#bootloader-disk-selection","title":"Bootloader Disk Selection","text":"<p>The installer must allow the user to choose which disk the bootloader will be installed to or, if the user so chooses, not to install a bootloader.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Bootloader Disk Selection</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#storage-volume-resize","title":"Storage Volume Resize","text":"<p>Any installer mechanism for resizing storage volumes must correctly attempt the requested operation. This means that if the installer offers a way to resize storage volumes, then it must use the correct resizing tool with the correct parameters. However, it does not require the installer to disallow resizing of unformatted or volumes with an unknown filesystem type.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Storage Volume Resize</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#update-image","title":"Update Image","text":"<p>The installer must be able to use an installer update image retrieved from removable media or a remote package source. This includes DUDs (driver update disks).</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Update Image</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#installer-help","title":"Installer Help","text":"<p>Any element in the installer which contains a \u201chelp\u201d text must display the appropriate help documentation when selected.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installer Help</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#installer-translations","title":"Installer Translations","text":"<p>The installer must correctly display all complete translations that are available for use.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Installer Translations</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#cloud-image-requirements","title":"Cloud Image Requirements","text":""},{"location":"team/testing/release_criteria/r9/9_release_criteria/#images-published-to-cloud-providers","title":"Images Published to Cloud Providers","text":"<p>Release-blocking cloud disk images must be published to appropriate cloud providers (such as Amazon) and they must successfully boot. This also applies to KVM based instances, such as x86 and aarch64 systems.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase TBD</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#post-installation-requirements","title":"Post-Installation Requirements","text":""},{"location":"team/testing/release_criteria/r9/9_release_criteria/#system-services","title":"System Services","text":"<p>All system services present after installation must start properly, with the exception of services that require hardware which is not present. Examples of such services would be:</p> <ul> <li>sshd</li> <li>firewalld</li> <li>auditd</li> <li>chronyd</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase System Services</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#keyboard-layout","title":"Keyboard Layout","text":"<p>If a particular keyboard layout has been configured for the system, that layout must be used:</p> <ul> <li>When unlocking storage volumes (encrypted by LUKS)</li> <li>When logging in at a TTY console</li> <li>When logging in via GDM</li> <li>After logging into a GNOME desktop system, if the user does not have their own layout configuration set.</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Keyboard Layout</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#selinux-errors-server","title":"SELinux Errors (Server)","text":"<p>There must be no SELinux denial logs in /var/log/audit/audit.log</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase SELinux Errors on Server installations</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#selinux-and-crash-notifications-desktop-only","title":"SELinux and Crash Notifications (Desktop Only)","text":"<p>There must be no SELinux denial notifications or crash notifications on boot, during installation, or during first login.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase SELinux Errors on Desktop clients</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#default-application-functionality-desktop-only","title":"Default Application Functionality (Desktop Only)","text":"<p>Applications that can be launched within GNOME or on the command line must start successfully and withstand basic functionality tests. This includes:</p> <ul> <li>Web browser</li> <li>File manager</li> <li>Package manager</li> <li>Image/Document Viewers</li> <li>Text editors (gedit, vim)</li> <li>Archive manager</li> <li>Terminal Emulator (GNOME Terminal)</li> <li>Problem Reporter</li> <li>Help Viewer</li> <li>System Settings</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Application Functionality</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#default-panel-functionality-desktop-only","title":"Default Panel Functionality (Desktop Only)","text":"<p>All elements of GNOME should function properly in regular use.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase GNOME UI Functionality</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#dual-monitor-setup-desktop-only","title":"Dual Monitor Setup (Desktop Only)","text":"<p>Computers using two monitors, the graphical output is correctly shown on both monitors.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Multimonitor Setup</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#artwork-and-assets-server-and-desktop","title":"Artwork and Assets (Server and Desktop)","text":"<p>Proposed final artwork (such as wallpapers and other assets) must be included. A wallpaper from this package should show up as a default for GDM and GNOME.</p> References <ul> <li>Test cases:<ul> <li>QA:Testcase Artwork and Assets</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#packages-and-module-installation","title":"Packages and Module Installation","text":"<p>Packages (non-module) should be able to be installed without conflicts or dependent on repositories outside of Rocky Linux.</p> <ul> <li>Default modules (as listed in dnf module list) should be installed without requiring them to be enabled.</li> <li>Module streams should be able to be switched and those packages should be able to be installed without errors or unresolved dependencies.</li> </ul> References <ul> <li>Test cases:<ul> <li>QA:Testcase Basic Package installs</li> <li>QA:Testcase Module Streams</li> </ul> </li> </ul>"},{"location":"team/testing/release_criteria/r9/9_release_criteria/#identity-management-server-setup","title":"Identity Management Server Setup","text":"<p>It should be possible to setup a IdM server (FreeIPA), use it's functionality and connect clients.</p> References <ul> <li>Test cases<ul> <li>QA:Testcase Identity Management</li> </ul> </li> </ul> Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Release Requirements documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/web/","title":"Web Team","text":""},{"location":"team/web/#about","title":"About","text":"<p>The Web team handles Rocky Linux web presence &amp; development.</p>"},{"location":"team/web/#management","title":"Management","text":"<p>This team is lead by Michael Kinder.</p>"},{"location":"team/web/#contact","title":"Contact","text":""},{"location":"team/web/#email","title":"Email","text":"<p>web@rockylinux.org</p>"},{"location":"team/web/#mattermost","title":"Mattermost","text":"<p>Web</p>"},{"location":"team/web/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Web Team Lead Michael Kinder mkinder@rockylinux.org @ressonix ressonix"},{"location":"team/web/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Web Team as a Deputy, we ask that you start making contributions, engaging with the lead in the Mattermost channel, and engaging with the community.</p>"}]}